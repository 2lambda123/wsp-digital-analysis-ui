:root {
  --sidebar-width: 40px;
  --dock-width: 320px;
  --wide-dock-width: 640px;

  --cb: #2389c9;
  --cb-light: #97cced; /** increased (HS)L by 30% */
  --cb-dark1: #185c86; /** decreased (HS)L by 15% */
  --cb-dark2: #0c2f45; /** decreased (HS)L by 30% */
}

/** Font reset for specific things */
html,
body,
#root,
.tooltip {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
  font-size: 12px;
}

/** Custom cross platform scrollbar colors */
.simplebar-scrollbar::before {
  background-color: #ddd;
}

.DEV {
  outline: 0.5px solid rgba(255, 0, 0, 0.5);
  outline-offset: 4px;
}

.disableAndDim {
  opacity: 0.4;
  pointer-events: none;
}

.monospace {
  font-family: monospace;
  font-size: 12px;
}

.Tip.pull-right {
  margin-left: 0.5rem;
}

a,
.Tip > a,
.link {
  cursor: pointer;
  color: var(--cb);
  text-decoration: none;
}

a:hover,
a:focus,
.link:hover,
.link:focus {
  color: var(--cb-dark1);
  outline: none !important;
}

ul,
ol {
  padding-left: 20px;
}

.center {
  text-align: center;
}

.danger {
  color: red;
}

input[type='number']::-webkit-outer-spin-button,
input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type='number'] {
  -moz-appearance: textfield;
}

input[type='range'].form-control {
  box-shadow: none;
}

.InnerDock {
  position: relative; /* prevents overflow from react-select */
  overflow-x: hidden;
  overflow-y: auto;
  width: var(--dock-width);
  padding-bottom: 12px;
}

.Analysis,
.ProjectContent {
  min-height: 500px;
}

.block {
  padding: 12px 12px 0;
}

.InnerDock.block {
  padding-bottom: 12px;
}

.InnerDock > .block > legend,
.InnerDock.block > legend {
  font-size: 14px;
  padding: 0 0 12px 0;
}

.DirectionIcon {
  pointer-events: none;
}

.LoggedInAs {
  padding-top: 6px;
}

.DaysOfService-active {
  color: black;
}

.DaysOfService-inactive {
  color: #ccc !important;
  text-decoration: line-through;
}

.MiniMap-northArrow {
  font-size: 18px;
  position: absolute;
  z-index: 10000;
}

.tooltip {
  opacity: 1;
  max-width: 1000px;
  white-space: nowrap;
}

.tooltip-inner {
  background-color: #333;
}

.tooltip.right .tooltip-arrow {
  border-right-color: #333;
}

.tooltip.bottom .tooltip-arrow {
  border-bottom-color: #333;
}

.help-tooltip {
  max-width: 400px;
  z-index: 1000 !important;
  opacity: 100 !important;
  background-color: #333 !important;
  box-shadow: 2px 2px 4px rgba(51, 51, 51, 0.1);
}

.Tip {
  position: relative;
  display: inline-block;
}

/** Leaflet Tooltips */
.leaflet-tooltip-top:before,
.leaflet-tooltip-bottom:before,
.leaflet-tooltip-left:before,
.leaflet-tooltip-right:before {
  display: none;
}

.Worker > .Bottom {
  margin-top: 1rem;
}

.all-copy {
  -webkit-user-select: all; /* Chrome all / Safari all */
  -moz-user-select: all; /* Firefox all */
  -ms-user-select: all; /* IE 10+ */
  user-select: all; /* Likely future */
}

/*
 * react-leaflet is silly, you have to manually style the divs it creates
 * https://github.com/PaulLeCam/react-leaflet/blob/master/example/index.html
 * https://github.com/PaulLeCam/react-leaflet/issues/108
 */
.leaflet-container {
  height: 100%;
  width: 100%;
}

.CircleIconMarker {
  border-radius: 50%;
  background-color: #2389c9;
}

.CircleIconMarker.newSnappedStop {
  background-color: #364046;
}

.CircleIconMarker.newStop > div,
.CircleIconMarker.newSnappedStop > div {
  background-color: #fff;
  border-radius: 50%;
  width: 70%;
  height: 70%;
  left: 15%;
  top: 15%;
  position: absolute;
}

.NoPointerEvents {
  pointer-events: none;
}
