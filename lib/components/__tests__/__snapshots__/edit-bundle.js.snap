// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`[SNAP] Component > EditBundle 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <EditBundle>
    <p>
      Bundles are a collection of one or more GTFS feeds that make up the transit layer of a baseline network.
    </p>
    <Group>
      <div
        className="form-group"
      >
        <Button
          block={true}
          onClick={[Function]}
          style="success"
        >
          <a
            className="btn btn-success btn-block"
            href="#"
            onClick={[Function]}
            tabIndex={0}
          >
            <Icon
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "plus",
                  "prefix": "fas",
                }
              }
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={true}
                flip={null}
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "plus",
                    "prefix": "fas",
                  }
                }
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-plus fa-w-NaN fa-fw "
                  data-icon="plus"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 undefined undefined"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </Icon>
             Create a bundle
          </a>
        </Button>
      </div>
    </Group>
    <p
      className="text-center"
    >
      or select an existing one
    </p>
    <Group>
      <div
        className="form-group"
      >
        <Select
          arrowRenderer={[Function]}
          autosize={true}
          backspaceRemoves={true}
          backspaceToRemoveMessage="Press backspace to remove {label}"
          clearAllText="Clear all"
          clearRenderer={[Function]}
          clearValueText="Clear value"
          clearable={false}
          closeOnSelect={true}
          deleteRemoves={true}
          delimiter=","
          disabled={false}
          escapeClearsValue={true}
          filterOptions={[Function]}
          ignoreAccents={true}
          ignoreCase={true}
          inputProps={Object {}}
          isLoading={false}
          joinValues={false}
          labelKey="label"
          matchPos="any"
          matchProp="any"
          menuBuffer={0}
          menuRenderer={[Function]}
          multi={false}
          noResultsText="No results found"
          onBlurResetsInput={true}
          onChange={[Function]}
          onCloseResetsInput={true}
          onSelectResetsInput={true}
          openOnClick={true}
          optionComponent={[Function]}
          options={
            Array [
              Object {
                "label": "Mock Bundle",
                "value": "1",
              },
            ]
          }
          pageSize={5}
          placeholder="Select..."
          removeSelected={true}
          required={false}
          rtl={false}
          scrollMenuIntoView={true}
          searchable={true}
          simpleValue={false}
          tabSelectsValue={true}
          trimFilter={true}
          valueComponent={[Function]}
          valueKey="value"
        >
          <div
            className="Select is-searchable Select--single"
          >
            <div
              className="Select-control"
              onKeyDown={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              <div
                className="Select-multi-value-wrapper"
                id="react-select-2--value"
              >
                <div
                  className="Select-placeholder"
                >
                  Select...
                </div>
                <AutosizeInput
                  aria-activedescendant="react-select-2--value"
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-owns=""
                  className="Select-input"
                  injectStyles={true}
                  minWidth="5"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  value=""
                />
              </div>
              <span
                className="Select-arrow-zone"
                onMouseDown={[Function]}
              >
                <span
                  className="Select-arrow"
                  onMouseDown={[Function]}
                />
              </span>
            </div>
          </div>
        </Select>
      </div>
    </Group>
  </EditBundle>
</Provider>
`;
