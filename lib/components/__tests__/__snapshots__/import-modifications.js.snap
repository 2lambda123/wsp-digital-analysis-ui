// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > ImportModifications renders correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ImportModifications
    projectId="1"
    projects={
      Array [
        Object {
          "_id": "1",
          "accessGroup": "accessGroupName",
          "bundleId": "1",
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "name": "Mock Project",
          "nonce": "12345",
          "regionId": "1",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            "Default",
          ],
        },
      ]
    }
    regionId="1"
  >
    <h5>
      Route alignments from shapefile
    </h5>
    <ButtonLink
      block={true}
      href={
        Object {
          "pathname": "/import-shapefile",
          "query": Object {
            "projectId": "1",
            "regionId": "1",
          },
        }
      }
      name="Import"
      style="success"
    >
      <Link
        href={
          Object {
            "pathname": "/import-shapefile",
            "query": Object {
              "projectId": "1",
              "regionId": "1",
            },
          }
        }
      >
        <a
          className="btn btn-success btn-block"
          href="/import-shapefile?regionId=1&projectId=1"
          name="Import"
          onClick={[Function]}
        >
          <Icon
            icon={
              Object {
                "icon": Array [],
                "iconName": "upload",
                "prefix": "fas",
              }
            }
          >
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={true}
              flip={null}
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "upload",
                  "prefix": "fas",
                }
              }
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              symbol={false}
              title=""
              transform={null}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-upload fa-w-NaN fa-fw "
                data-icon="upload"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 undefined undefined"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </FontAwesomeIcon>
          </Icon>
           
          Import
        </a>
      </Link>
    </ButtonLink>
    <br />
    <h5>
      Modifications from another project
    </h5>
    <p>
      When importing from a project associated with a different bundle, only "Add Trips" modifications will be copied. If a modification uses an existing stop from the baseline GTFS, it will be replaced in the imported modification by a new stop at the same location.
    </p>
    <div
      className="form-group"
    >
      <Select
        arrowRenderer={[Function]}
        autosize={true}
        backspaceRemoves={true}
        backspaceToRemoveMessage="Press backspace to remove {label}"
        clearAllText="Clear all"
        clearRenderer={[Function]}
        clearValueText="Clear value"
        clearable={false}
        closeOnSelect={true}
        deleteRemoves={true}
        delimiter=","
        disabled={false}
        escapeClearsValue={true}
        filterOptions={[Function]}
        ignoreAccents={true}
        ignoreCase={true}
        inputProps={Object {}}
        isLoading={false}
        joinValues={false}
        labelKey="label"
        matchPos="any"
        matchProp="any"
        menuBuffer={0}
        menuRenderer={[Function]}
        multi={false}
        noResultsText="No results found"
        onBlurResetsInput={true}
        onChange={[Function]}
        onCloseResetsInput={true}
        onSelectResetsInput={true}
        openOnClick={true}
        optionComponent={[Function]}
        options={
          Array [
            Object {
              "label": "Mock Project",
              "value": "1",
            },
          ]
        }
        pageSize={5}
        placeholder="Select a project…"
        removeSelected={true}
        required={false}
        rtl={false}
        scrollMenuIntoView={true}
        searchable={true}
        simpleValue={false}
        tabSelectsValue={true}
        trimFilter={true}
        valueComponent={[Function]}
        valueKey="value"
      >
        <div
          className="Select is-searchable Select--single"
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
          >
            <div
              className="Select-multi-value-wrapper"
              id="react-select-2--value"
            >
              <div
                className="Select-placeholder"
              >
                Select a project…
              </div>
              <AutosizeInput
                aria-activedescendant="react-select-2--value"
                aria-expanded="false"
                aria-haspopup="false"
                aria-owns=""
                className="Select-input"
                injectStyles={true}
                minWidth="5"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                value=""
              />
            </div>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </Select>
    </div>
    <Button
      block={true}
      disabled={true}
      name="Import"
      onClick={[Function]}
      style="success"
    >
      <a
        className="btn btn-success btn-block"
        disabled={true}
        href="#"
        name="Import"
        onClick={[Function]}
        tabIndex={0}
      >
        <Icon
          icon={
            Object {
              "icon": Array [],
              "iconName": "copy",
              "prefix": "fas",
            }
          }
        >
          <FontAwesomeIcon
            border={false}
            className=""
            fixedWidth={true}
            flip={null}
            icon={
              Object {
                "icon": Array [],
                "iconName": "copy",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            symbol={false}
            title=""
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-copy fa-w-NaN fa-fw "
              data-icon="copy"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 undefined undefined"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </Icon>
         
        Import
      </a>
    </Button>
  </ImportModifications>
</Provider>
`;
