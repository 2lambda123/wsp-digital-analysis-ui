// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > VariantEditor renders correctly 1`] = `
<Memo(Variants)
  createVariant={[MockFunction]}
  deleteVariant={[MockFunction]}
  editVariantName={[MockFunction]}
  showVariant={[MockFunction]}
  variants={Array []}
>
  <Button
    borderRadius={0}
    isFullWidth={true}
    leftIcon="small-add"
    onClick={[Function]}
    variantColor="green"
  >
    <PseudoBox
      _active={
        Object {
          "bg": "green.700",
        }
      }
      _disabled={
        Object {
          "boxShadow": "none",
          "cursor": "not-allowed",
          "opacity": "40%",
        }
      }
      _focus={
        Object {
          "boxShadow": "outline",
        }
      }
      _hover={
        Object {
          "bg": "green.600",
        }
      }
      alignItems="center"
      appearance="none"
      as="button"
      bg="green.500"
      borderRadius={0}
      color="white"
      display="inline-flex"
      fontSize="md"
      fontWeight="semibold"
      height={10}
      justifyContent="center"
      lineHeight="1.2"
      minWidth={10}
      onClick={[Function]}
      outline="none"
      position="relative"
      px={4}
      transition="all 250ms"
      type="button"
      userSelect="none"
      verticalAlign="middle"
      whiteSpace="nowrap"
      width="full"
    >
      <button
        className="css-17xb0ay"
        onClick={[Function]}
        type="button"
      >
        <ButtonIcon
          icon="small-add"
          ml={-1}
          mr={2}
        >
          <Icon
            aria-hidden="true"
            color="currentColor"
            focusable="false"
            ml={-1}
            mr={2}
            name="small-add"
          >
            <Styled(div)
              aria-hidden="true"
              as="svg"
              color="currentColor"
              display="inline-block"
              focusable="false"
              ml={-1}
              mr={2}
              role="presentation"
              size="1em"
              verticalAlign="middle"
              viewBox="0 0 20 20"
            >
              <svg
                aria-hidden="true"
                className="css-yxiis9"
                focusable="false"
                role="presentation"
                viewBox="0 0 20 20"
              >
                <path
                  d="M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"
                  fill="currentColor"
                  fillRule="evenodd"
                />
              </svg>
            </Styled(div)>
          </Icon>
        </ButtonIcon>
        Create a scenario
      </button>
    </PseudoBox>
  </Button>
  <ForwardRef>
    <Flex
      direction="column"
    >
      <Box
        display="flex"
        flexDirection="column"
      >
        <div
          className="css-j7qwjs"
        >
          <Text
            key=".0"
            mb={2}
            pt={4}
            px={4}
          >
            <Box
              as="p"
              fontFamily="body"
              mb={2}
              pt={4}
              px={4}
            >
              <p
                className="css-1lrq0sc"
              >
                A Scenario is a collection of modifications within a project.
              </p>
            </Box>
          </Text>
          <ForwardRef
            key=".1"
            mb={2}
          >
            <Box
              as="hr"
              border="0"
              borderBottom="0.0625rem solid"
              borderColor="inherit"
              mb={2}
              my={2}
              opacity="0.6"
              width="auto"
            >
              <hr
                className="css-1fic0ux"
              />
            </Box>
          </ForwardRef>
          <Flex
            key=".2"
            mb={null}
            px={4}
            py={2}
          >
            <Box
              display="flex"
              mb={null}
              px={4}
              py={2}
            >
              <div
                className="css-2mod6n"
              >
                <Text
                  flex="1"
                  fontWeight="bold"
                >
                  <Box
                    as="p"
                    flex="1"
                    fontFamily="body"
                    fontWeight="bold"
                  >
                    <p
                      className="css-13c2z23"
                    >
                      Baseline
                    </p>
                  </Box>
                </Text>
                <Tooltip
                  aria-label="Baseline (empty scenario) cannot be modified"
                  label="Baseline (empty scenario) cannot be modified"
                >
                  <Box
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                  >
                    <div
                      className="css-0"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      <Icon
                        name="lock"
                      >
                        <Styled(div)
                          as="svg"
                          color="currentColor"
                          display="inline-block"
                          focusable={false}
                          role="presentation"
                          size="1em"
                          verticalAlign="middle"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            className="css-1im46kq"
                            focusable={false}
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z"
                              fill="currentColor"
                            />
                          </svg>
                        </Styled(div)>
                      </Icon>
                    </div>
                  </Box>
                  <ForwardRef
                    anchorEl={
                      <div
                        class="css-0"
                      >
                        <svg
                          class="css-1im46kq"
                          focusable="false"
                          role="presentation"
                          viewBox="0 0 24 24"
                        >
                          <path
                            d="M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-9.5,6a2,2,0,1,1,3,1.723V19.5a1,1,0,0,1-2,0V17.223A1.994,1.994,0,0,1,10,15.5ZM7.75,6.75a4.25,4.25,0,0,1,8.5,0V9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5Z"
                            fill="currentColor"
                          />
                        </svg>
                      </div>
                    }
                    arrowSize="10px"
                    bg="gray.700"
                    borderRadius="sm"
                    color="whiteAlpha.900"
                    fontSize="sm"
                    fontWeight="medium"
                    isOpen={false}
                    maxW="320px"
                    modifiers={
                      Object {
                        "offset": Object {
                          "enabled": true,
                          "offset": "0, 8",
                        },
                      }
                    }
                    placement="auto"
                    pointerEvents="none"
                    px="8px"
                    py="2px"
                    shadow="md"
                    timeout={200}
                    usePortal={true}
                  />
                </Tooltip>
              </div>
            </Box>
          </Flex>
        </div>
      </Box>
    </Flex>
  </ForwardRef>
</Memo(Variants)>
`;
