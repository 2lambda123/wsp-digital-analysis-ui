// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > ProjectTitle renders correctly 1`] = `
<div
  className="ApplicationDockTitle"
>
  <i
    className="fa fa-cube fa-fw "
  />
   
  Mock Project
  <span>
    <span
      className="Tip pull-right"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      <a
        name="Edit project settings"
        onClick={[Function]}
        style={Object {}}
        type="button"
      >
        <i
          className="fa fa-gear fa-fw "
        />
      </a>
    </span>
    <span
      className="Tip pull-right"
      onBlur={[Function]}
      onFocus={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      <a
        name="Download or share this project"
        onClick={[Function]}
        tabIndex={0}
        type="button"
      >
        <i
          className="fa fa-share-alt-square fa-fw "
        />
      </a>
    </span>
  </span>
</div>
`;

exports[`Component > ProjectTitle should show export select dialogue 1`] = `
<ProjectTitle
  _id="1"
  downloadLines={[MockFunction]}
  downloadScenario={[MockFunction]}
  downloadStops={[MockFunction]}
  project={
    Object {
      "_id": "1",
      "accessGroup": "accessGroupName",
      "bundleId": "1",
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "name": "Mock Project",
      "nonce": "12345",
      "regionId": "1",
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variants": Array [
        "Default",
      ],
    }
  }
>
  <Title>
    <div
      className="ApplicationDockTitle"
    >
      <Icon
        type="cube"
      >
        <i
          className="fa fa-cube fa-fw "
        />
      </Icon>
       
      Mock Project
      <span>
        <IconLink
          className="pull-right"
          name="Edit project settings"
          to="/regions/1/projects/1/edit"
          type="gear"
        >
          <Link
            className="pull-right"
            name="Edit project settings"
            to="/regions/1/projects/1/edit"
            type="button"
          >
            <Tip
              className="pull-right"
              tip="Edit project settings"
            >
              <span
                className="Tip pull-right"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <Link
                  name="Edit project settings"
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/regions/1/projects/1/edit"
                  type="button"
                >
                  <a
                    name="Edit project settings"
                    onClick={[Function]}
                    style={Object {}}
                    type="button"
                  >
                    <Icon
                      type="gear"
                    >
                      <i
                        className="fa fa-gear fa-fw "
                      />
                    </Icon>
                  </a>
                </Link>
              </span>
            </Tip>
          </Link>
        </IconLink>
        <IconLink
          className="pull-right"
          name="Download or share this project"
          onClick={[Function]}
          type="share-alt-square"
        >
          <Link
            className="pull-right"
            name="Download or share this project"
            onClick={[Function]}
            type="button"
          >
            <Tip
              className="pull-right"
              tip="Download or share this project"
            >
              <span
                className="Tip pull-right"
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <a
                  name="Download or share this project"
                  onClick={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <Icon
                    type="share-alt-square"
                  >
                    <i
                      className="fa fa-share-alt-square fa-fw "
                    />
                  </Icon>
                </a>
              </span>
            </Tip>
          </Link>
        </IconLink>
        <SelectScenario
          exportAction={[Function]}
          label="export"
          onHide={[Function]}
          projectId="1"
          regionId="1"
          scenarios={
            Array [
              "Default",
            ]
          }
        >
          <_default
            onRequestClose={[Function]}
          >
            <Modal
              ariaHideApp={false}
              bodyOpenClassName="ReactModal__Body--open"
              className="CustomModal"
              closeTimeoutMS={0}
              contentLabel="Modal"
              isOpen={true}
              onRequestClose={[Function]}
              parentSelector={[Function]}
              portalClassName="ReactModalPortal"
              role="dialog"
              shouldCloseOnEsc={true}
              shouldCloseOnOverlayClick={true}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              style={
                Object {
                  "overlay": Object {
                    "zIndex": 2500,
                  },
                }
              }
            >
              <Portal
                containerInfo={
                  <div
                    class="ReactModalPortal"
                  >
                    <div
                      class="ReactModal__Overlay ReactModal__Overlay--after-open"
                      style="position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px; background-color: rgba(255, 255, 255, 0.75); z-index: 2500;"
                    >
                      <div
                        aria-label="Modal"
                        class="ReactModal__Content ReactModal__Content--after-open CustomModal"
                        role="dialog"
                        tabindex="-1"
                      >
                        <div
                          class="CustomModal-title"
                        >
                          Select a scenario to download or share
                        </div>
                        <div
                          class="CustomModal-block"
                        >
                          <p>
                            Generate a JSON representation of a scenario, GeoJSON to map new features in GIS, or a printable summary of the scenario.
                          </p>
                          <div>
                            <h6>
                              1
                              . 
                              Default
                            </h6>
                            <div
                              class="btn-group btn-group-justified"
                            >
                              <a
                                class="btn btn-info"
                                href="#"
                                tabindex="0"
                              >
                                <i
                                  class="fa fa-download fa-fw "
                                />
                                 
                                Raw scenario (.json)
                              </a>
                              <a
                                class="btn btn-info"
                                href="/reports/1/projects/1/variants/0"
                                tabindex="0"
                                target="_blank"
                              >
                                <i
                                  class="fa fa-print fa-fw "
                                />
                                 
                                Summary report
                              </a>
                            </div>
                            <div
                              class="btn-group btn-group-justified"
                            >
                              <a
                                class="btn btn-info"
                                href="#"
                                tabindex="0"
                              >
                                <i
                                  class="fa fa-download fa-fw "
                                />
                                 
                                New alignments (.geojson)
                              </a>
                              <a
                                class="btn btn-info"
                                href="#"
                                tabindex="0"
                              >
                                <i
                                  class="fa fa-download fa-fw "
                                />
                                 
                                New stops (.geojson)
                              </a>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                }
              >
                <ModalPortal
                  ariaHideApp={false}
                  bodyOpenClassName="ReactModal__Body--open"
                  className="CustomModal"
                  closeTimeoutMS={0}
                  contentLabel="Modal"
                  defaultStyles={
                    Object {
                      "content": Object {
                        "WebkitOverflowScrolling": "touch",
                        "background": "#fff",
                        "border": "1px solid #ccc",
                        "borderRadius": "4px",
                        "bottom": "40px",
                        "left": "40px",
                        "outline": "none",
                        "overflow": "auto",
                        "padding": "20px",
                        "position": "absolute",
                        "right": "40px",
                        "top": "40px",
                      },
                      "overlay": Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                      },
                    }
                  }
                  isOpen={true}
                  onRequestClose={[Function]}
                  parentSelector={[Function]}
                  portalClassName="ReactModalPortal"
                  role="dialog"
                  shouldCloseOnEsc={true}
                  shouldCloseOnOverlayClick={true}
                  shouldFocusAfterRender={true}
                  shouldReturnFocusAfterClose={true}
                  style={
                    Object {
                      "overlay": Object {
                        "zIndex": 2500,
                      },
                    }
                  }
                >
                  <div
                    className="ReactModal__Overlay ReactModal__Overlay--after-open"
                    onClick={[Function]}
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 0.75)",
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "zIndex": 2500,
                      }
                    }
                  >
                    <div
                      aria-label="Modal"
                      className="ReactModal__Content ReactModal__Content--after-open CustomModal"
                      onClick={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onMouseUp={[Function]}
                      role="dialog"
                      style={Object {}}
                      tabIndex="-1"
                    >
                      <ModalTitle>
                        <div
                          className="CustomModal-title"
                        >
                          Select a scenario to download or share
                        </div>
                      </ModalTitle>
                      <ModalBody>
                        <div
                          className="CustomModal-block"
                        >
                          <p>
                            Generate a JSON representation of a scenario, GeoJSON to map new features in GIS, or a printable summary of the scenario.
                          </p>
                          <div
                            key="export-0"
                          >
                            <h6>
                              1
                              . 
                              Default
                            </h6>
                            <Group
                              justified={true}
                            >
                              <div
                                className="btn-group btn-group-justified"
                              >
                                <Button
                                  onClick={[Function]}
                                  style="info"
                                >
                                  <a
                                    className="btn btn-info"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    <Icon
                                      type="download"
                                    >
                                      <i
                                        className="fa fa-download fa-fw "
                                      />
                                    </Icon>
                                     
                                    Raw scenario (.json)
                                  </a>
                                </Button>
                                <Button
                                  href="/reports/1/projects/1/variants/0"
                                  style="info"
                                  target="_blank"
                                >
                                  <a
                                    className="btn btn-info"
                                    href="/reports/1/projects/1/variants/0"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    target="_blank"
                                  >
                                    <Icon
                                      type="print"
                                    >
                                      <i
                                        className="fa fa-print fa-fw "
                                      />
                                    </Icon>
                                     
                                    Summary report
                                  </a>
                                </Button>
                              </div>
                            </Group>
                            <Group
                              justified={true}
                            >
                              <div
                                className="btn-group btn-group-justified"
                              >
                                <Button
                                  onClick={[Function]}
                                  style="info"
                                >
                                  <a
                                    className="btn btn-info"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    <Icon
                                      type="download"
                                    >
                                      <i
                                        className="fa fa-download fa-fw "
                                      />
                                    </Icon>
                                     
                                    New alignments (.geojson)
                                  </a>
                                </Button>
                                <Button
                                  onClick={[Function]}
                                  style="info"
                                >
                                  <a
                                    className="btn btn-info"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                  >
                                    <Icon
                                      type="download"
                                    >
                                      <i
                                        className="fa fa-download fa-fw "
                                      />
                                    </Icon>
                                     
                                    New stops (.geojson)
                                  </a>
                                </Button>
                              </div>
                            </Group>
                          </div>
                        </div>
                      </ModalBody>
                    </div>
                  </div>
                </ModalPortal>
              </Portal>
            </Modal>
          </_default>
        </SelectScenario>
      </span>
    </div>
  </Title>
</ProjectTitle>
`;

exports[`Component > ProjectTitle should show export select dialogue 2`] = `"<div class=\\"ReactModal__Content ReactModal__Content--after-open CustomModal\\" tabindex=\\"-1\\" role=\\"dialog\\" aria-label=\\"Modal\\"><div class=\\"CustomModal-title\\">Select a scenario to download or share</div><div class=\\"CustomModal-block\\"><p>Generate a JSON representation of a scenario, GeoJSON to map new features in GIS, or a printable summary of the scenario.</p><div><h6>1. Default</h6><div class=\\"btn-group btn-group-justified\\"><a class=\\"btn btn-info\\" href=\\"#\\" tabindex=\\"0\\"><i class=\\"fa fa-download fa-fw \\"></i> Raw scenario (.json)</a><a target=\\"_blank\\" class=\\"btn btn-info\\" href=\\"/reports/1/projects/1/variants/0\\" tabindex=\\"0\\"><i class=\\"fa fa-print fa-fw \\"></i> Summary report</a></div><div class=\\"btn-group btn-group-justified\\"><a class=\\"btn btn-info\\" href=\\"#\\" tabindex=\\"0\\"><i class=\\"fa fa-download fa-fw \\"></i> New alignments (.geojson)</a><a class=\\"btn btn-info\\" href=\\"#\\" tabindex=\\"0\\"><i class=\\"fa fa-download fa-fw \\"></i> New stops (.geojson)</a></div></div></div></div>"`;
