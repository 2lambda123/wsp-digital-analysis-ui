// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Components > Analysis > Profile Request Editor should render correctly 1`] = `
<SimpleGrid
  columns={3}
  spacing={5}
>
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Date
    </FormLabel>
    <DateTime
      className=""
      closeOnSelect={true}
      closeOnTab={true}
      dateFormat="YYYY-MM-DD"
      defaultValue=""
      input={true}
      inputProps={
        Object {
          "disabled": false,
        }
      }
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onNavigateBack={[Function]}
      onNavigateForward={[Function]}
      onViewModeChange={[Function]}
      renderInput={[Function]}
      strictParsing={true}
      timeConstraints={Object {}}
      timeFormat={false}
      utc={true}
      value="2016-01-16"
    />
  </FormControl>
  <TimePicker
    disabled={false}
    id="fromTime"
    label="From time"
    onChange={[Function]}
    value={25200}
  />
  <TimePicker
    disabled={false}
    id="toTime"
    label="To time"
    onChange={[Function]}
    value={32400}
  />
  <ForwardRef
    borderColor="blue.100"
    gridColumn="1 / span 3"
  />
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Walk speed
    </FormLabel>
    <ForwardRef
      htmlFor="00000000-0000-0000-0000-000000000000"
      id="00000000-0000-0000-0000-000000000000"
      isInvalid={false}
      isValid={true}
      onChange={[Function]}
      type="number"
      units="km/h"
      value={5}
    />
  </FormControl>
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Max walk time
    </FormLabel>
    <ForwardRef
      htmlFor="00000000-0000-0000-0000-000000000000"
      id="00000000-0000-0000-0000-000000000000"
      isInvalid={false}
      isValid={true}
      onChange={[Function]}
      units="minutes"
      value={20}
    />
  </FormControl>
  <Alert
    status="info"
  >
    Lower time limits may apply to transfer and egress legs.
  </Alert>
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Bike speed
    </FormLabel>
    <ForwardRef
      htmlFor="00000000-0000-0000-0000-000000000000"
      id="00000000-0000-0000-0000-000000000000"
      isInvalid={false}
      isValid={true}
      onChange={[Function]}
      type="number"
      units="km/h"
      value={15}
    />
  </FormControl>
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Max bike time
    </FormLabel>
    <ForwardRef
      htmlFor="00000000-0000-0000-0000-000000000000"
      id="00000000-0000-0000-0000-000000000000"
      isInvalid={false}
      isValid={true}
      onChange={[Function]}
      units="minutes"
      value={20}
    />
  </FormControl>
  <FormControl
    isDisabled={false}
  >
    <FormLabel
      htmlFor="bikeLts"
    >
      Max bike LTS
    </FormLabel>
    <Select
      id="bikeLts"
      onChange={[Function]}
      value={4}
    >
      <option
        value={1}
      >
        1 - Low stress
      </option>
      <option
        value={2}
      >
        2
      </option>
      <option
        value={3}
      >
        3
      </option>
      <option
        value={4}
      >
        4 - High stress
      </option>
    </Select>
  </FormControl>
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Simulated schedules
    </FormLabel>
    <Input
      as="input"
      errorBorderColor="red.500"
      focusBorderColor="blue.500"
      htmlFor="00000000-0000-0000-0000-000000000000"
      id="00000000-0000-0000-0000-000000000000"
      isFullWidth={true}
      isInvalid={false}
      isValid={true}
      onChange={[Function]}
      size="md"
      type="number"
      value={200}
      variant="outline"
    />
  </FormControl>
  <FormControl
    isDisabled={false}
    isInvalid={false}
  >
    <FormLabel>
      Maximum transfers
    </FormLabel>
    <Input
      as="input"
      errorBorderColor="red.500"
      focusBorderColor="blue.500"
      htmlFor="00000000-0000-0000-0000-000000000000"
      id="00000000-0000-0000-0000-000000000000"
      isFullWidth={true}
      isInvalid={false}
      isValid={true}
      onChange={[Function]}
      size="md"
      type="number"
      value={3}
      variant="outline"
    />
  </FormControl>
</SimpleGrid>
`;
