// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component AdjustSpeedComponent snapshot(mount) 1`] = `
<AdjustSpeedComponent
  feeds={
    Array [
      Object {
        "checksum": "MOCK",
        "id": "1",
        "routes": Array [
          Object {
            "label": "mock-route-label",
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "name": "Mock Pattern",
                "pattern_id": "mock-pattern-id",
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "end_time": 13579,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
            "route_id": "route1",
          },
        ],
        "stops": Array [
          Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        ],
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      },
    ]
  }
  modification={
    Object {
      "_id": "1234",
      "accessGroup": "accessGroupName",
      "bidirectional": false,
      "createdAt": "2017-11-08T12:30:50.133Z",
      "createdBy": "person@gmail.com",
      "description": "Mock description",
      "entries": Array [],
      "feed": "1",
      "name": "Test Modification",
      "nonce": "12345",
      "projectId": "1",
      "routes": Array [
        "route1",
      ],
      "segments": Array [
        {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
      ],
      "timetables": Array [
        Object {
          "_id": "timetable-id",
          "dwellTime": 10,
          "dwellTimes": Array [
            12,
          ],
          "endTime": 57600,
          "exactTimes": false,
          "friday": true,
          "headwaySecs": 900,
          "modificationId": "1234",
          "modificationName": "Test Modification",
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "phaseAtStop": "",
          "phaseFromStop": "",
          "phaseFromTimetable": "",
          "phaseSeconds": 300,
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "updatedAt": "2017-11-08T12:31:19.602Z",
      "updatedBy": "person@gmail.com",
      "variants": Array [
        true,
      ],
    }
  }
  routePatterns={Array []}
  setMapState={[MockFunction]}
  update={[MockFunction]}
  updateAndRetrieveFeedData={[MockFunction]}
>
  <DynamicMockedComponent
    feed={
      Object {
        "checksum": "MOCK",
        "id": "1",
        "name": "1",
        "routes": Array [
          Object {
            "label": "mock-route-label",
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "name": "Mock Pattern",
                "pattern_id": "mock-pattern-id",
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "end_time": 13579,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
            "route_id": "route1",
          },
        ],
        "stops": Array [
          Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        ],
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      }
    }
    modification={
      Object {
        "_id": "1234",
        "accessGroup": "accessGroupName",
        "bidirectional": false,
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "description": "Mock description",
        "entries": Array [],
        "feed": "1",
        "name": "Test Modification",
        "nonce": "12345",
        "projectId": "1",
        "routes": Array [
          "route1",
        ],
        "segments": Array [
          {
  "fromStopId": "1",
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  },
  "properties": {},
  "spacing": "3000.00000000",
  "stopAtEnd": false,
  "stopAtStart": false,
  "type": "Feature"
},
        ],
        "timetables": Array [
          Object {
            "_id": "timetable-id",
            "dwellTime": 10,
            "dwellTimes": Array [
              12,
            ],
            "endTime": 57600,
            "exactTimes": false,
            "friday": true,
            "headwaySecs": 900,
            "modificationId": "1234",
            "modificationName": "Test Modification",
            "monday": true,
            "name": "Test timetable",
            "patternTrips": Array [
              "abcd",
            ],
            "phaseAtStop": "",
            "phaseFromStop": "",
            "phaseFromTimetable": "",
            "phaseSeconds": 300,
            "saturday": false,
            "segmentSpeeds": Array [],
            "sourceTrip": "abcd",
            "startTime": 28800,
            "sunday": false,
            "thursday": true,
            "tuesday": true,
            "wednesday": true,
          },
        ],
        "trips": Array [
          "abcd",
        ],
        "type": "add-trip-pattern",
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variants": Array [
          true,
        ],
      }
    }
  />
  <ForwardRef
    mb={4}
    spacing={4}
  >
    <Flex
      direction="column"
      mb={4}
    >
      <Box
        display="flex"
        flexDirection="column"
        mb={4}
      >
        <div
          className="css-opcg3f"
        >
          <SelectFeedAndRoutes
            allowMultipleRoutes={true}
            key=".0"
            mb={4}
            onChange={[Function]}
            selectedRouteIds={
              Array [
                "route1",
              ]
            }
          >
            <ForwardRef
              mb={4}
              spacing={4}
            >
              <Flex
                direction="column"
                mb={4}
              >
                <Box
                  display="flex"
                  flexDirection="column"
                  mb={4}
                >
                  <div
                    className="css-opcg3f"
                  >
                    <FormControl
                      key=".0"
                      mb={4}
                    >
                      <Box
                        mb={4}
                        role="group"
                      >
                        <div
                          className="css-acwcvw"
                          role="group"
                        >
                          <FormLabel
                            htmlFor="Feed"
                          >
                            <Box
                              as="label"
                              display="inline-block"
                              fontSize="md"
                              fontWeight="medium"
                              htmlFor="Feed"
                              opacity="1"
                              pb="4px"
                              pr="12px"
                              textAlign="left"
                              verticalAlign="middle"
                            >
                              <label
                                className="css-176s5fq"
                                htmlFor="Feed"
                              >
                                Select feed
                              </label>
                            </Box>
                          </FormLabel>
                          <ForwardRef
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            inputId="Feed"
                            name="Feed"
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "checksum": "MOCK",
                                  "id": "1",
                                  "name": "1",
                                  "routes": Array [
                                    Object {
                                      "label": "mock-route-label",
                                      "patterns": Array [
                                        Object {
                                          "geometry": Object {
                                            "coordinates": Array [
                                              Array [
                                                -122.0246,
                                                36.9707,
                                              ],
                                              Array [
                                                -122.0279,
                                                37.049,
                                              ],
                                              Array [
                                                -121.9799,
                                                37.2299,
                                              ],
                                              Array [
                                                -121.9445,
                                                37.324,
                                              ],
                                              Array [
                                                -121.936,
                                                37.353,
                                              ],
                                              Array [
                                                -121.924,
                                                37.365,
                                              ],
                                            ],
                                            "type": "LineString",
                                          },
                                          "name": "Mock Pattern",
                                          "pattern_id": "mock-pattern-id",
                                          "stops": Array [
                                            Object {
                                              "stop_id": "1",
                                              "stop_lat": 36.9707,
                                              "stop_lon": -122.0246,
                                              "stop_name": "Santa Cruz",
                                            },
                                            Object {
                                              "stop_id": "2",
                                              "stop_lat": 37.049,
                                              "stop_lon": -122.0279,
                                              "stop_name": "Scotts Valley",
                                            },
                                          ],
                                          "trips": Array [
                                            Object {
                                              "duration": 1234,
                                              "end_time": 13579,
                                              "start_time": 12345,
                                              "trip_headsign": "To Downtown",
                                              "trip_id": "abcd",
                                              "trip_short_name": "The Express",
                                            },
                                          ],
                                        },
                                      ],
                                      "route_id": "route1",
                                    },
                                  ],
                                  "stops": Array [
                                    Object {
                                      "stop_id": "1",
                                      "stop_lat": 36.9707,
                                      "stop_lon": -122.0246,
                                      "stop_name": "Santa Cruz",
                                    },
                                    Object {
                                      "stop_id": "2",
                                      "stop_lat": 37.049,
                                      "stop_lon": -122.0279,
                                      "stop_name": "Scotts Valley",
                                    },
                                  ],
                                  "stopsById": Object {
                                    "1": Object {
                                      "stop_id": "1",
                                      "stop_lat": 36.9707,
                                      "stop_lon": -122.0246,
                                      "stop_name": "Santa Cruz",
                                    },
                                    "2": Object {
                                      "stop_id": "2",
                                      "stop_lat": 37.049,
                                      "stop_lon": -122.0279,
                                      "stop_name": "Scotts Valley",
                                    },
                                  },
                                },
                              ]
                            }
                            placeholder="Select feed"
                            value={
                              Object {
                                "checksum": "MOCK",
                                "id": "1",
                                "name": "1",
                                "routes": Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ],
                                "stops": Array [
                                  Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                ],
                                "stopsById": Object {
                                  "1": Object {
                                    "stop_id": "1",
                                    "stop_lat": 36.9707,
                                    "stop_lon": -122.0246,
                                    "stop_name": "Santa Cruz",
                                  },
                                  "2": Object {
                                    "stop_id": "2",
                                    "stop_lat": 37.049,
                                    "stop_lon": -122.0279,
                                    "stop_name": "Scotts Valley",
                                  },
                                },
                              }
                            }
                          >
                            <ReactSelect
                              getOptionLabel={[Function]}
                              getOptionValue={[Function]}
                              innerRef={null}
                              inputId="Feed"
                              name="Feed"
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "checksum": "MOCK",
                                    "id": "1",
                                    "name": "1",
                                    "routes": Array [
                                      Object {
                                        "label": "mock-route-label",
                                        "patterns": Array [
                                          Object {
                                            "geometry": Object {
                                              "coordinates": Array [
                                                Array [
                                                  -122.0246,
                                                  36.9707,
                                                ],
                                                Array [
                                                  -122.0279,
                                                  37.049,
                                                ],
                                                Array [
                                                  -121.9799,
                                                  37.2299,
                                                ],
                                                Array [
                                                  -121.9445,
                                                  37.324,
                                                ],
                                                Array [
                                                  -121.936,
                                                  37.353,
                                                ],
                                                Array [
                                                  -121.924,
                                                  37.365,
                                                ],
                                              ],
                                              "type": "LineString",
                                            },
                                            "name": "Mock Pattern",
                                            "pattern_id": "mock-pattern-id",
                                            "stops": Array [
                                              Object {
                                                "stop_id": "1",
                                                "stop_lat": 36.9707,
                                                "stop_lon": -122.0246,
                                                "stop_name": "Santa Cruz",
                                              },
                                              Object {
                                                "stop_id": "2",
                                                "stop_lat": 37.049,
                                                "stop_lon": -122.0279,
                                                "stop_name": "Scotts Valley",
                                              },
                                            ],
                                            "trips": Array [
                                              Object {
                                                "duration": 1234,
                                                "end_time": 13579,
                                                "start_time": 12345,
                                                "trip_headsign": "To Downtown",
                                                "trip_id": "abcd",
                                                "trip_short_name": "The Express",
                                              },
                                            ],
                                          },
                                        ],
                                        "route_id": "route1",
                                      },
                                    ],
                                    "stops": Array [
                                      Object {
                                        "stop_id": "1",
                                        "stop_lat": 36.9707,
                                        "stop_lon": -122.0246,
                                        "stop_name": "Santa Cruz",
                                      },
                                      Object {
                                        "stop_id": "2",
                                        "stop_lat": 37.049,
                                        "stop_lon": -122.0279,
                                        "stop_name": "Scotts Valley",
                                      },
                                    ],
                                    "stopsById": Object {
                                      "1": Object {
                                        "stop_id": "1",
                                        "stop_lat": 36.9707,
                                        "stop_lon": -122.0246,
                                        "stop_name": "Santa Cruz",
                                      },
                                      "2": Object {
                                        "stop_id": "2",
                                        "stop_lat": 37.049,
                                        "stop_lon": -122.0279,
                                        "stop_name": "Scotts Valley",
                                      },
                                    },
                                  },
                                ]
                              }
                              placeholder="Select feed"
                              styles={
                                Object {
                                  "control": [Function],
                                  "option": [Function],
                                }
                              }
                              value={
                                Object {
                                  "checksum": "MOCK",
                                  "id": "1",
                                  "name": "1",
                                  "routes": Array [
                                    Object {
                                      "label": "mock-route-label",
                                      "patterns": Array [
                                        Object {
                                          "geometry": Object {
                                            "coordinates": Array [
                                              Array [
                                                -122.0246,
                                                36.9707,
                                              ],
                                              Array [
                                                -122.0279,
                                                37.049,
                                              ],
                                              Array [
                                                -121.9799,
                                                37.2299,
                                              ],
                                              Array [
                                                -121.9445,
                                                37.324,
                                              ],
                                              Array [
                                                -121.936,
                                                37.353,
                                              ],
                                              Array [
                                                -121.924,
                                                37.365,
                                              ],
                                            ],
                                            "type": "LineString",
                                          },
                                          "name": "Mock Pattern",
                                          "pattern_id": "mock-pattern-id",
                                          "stops": Array [
                                            Object {
                                              "stop_id": "1",
                                              "stop_lat": 36.9707,
                                              "stop_lon": -122.0246,
                                              "stop_name": "Santa Cruz",
                                            },
                                            Object {
                                              "stop_id": "2",
                                              "stop_lat": 37.049,
                                              "stop_lon": -122.0279,
                                              "stop_name": "Scotts Valley",
                                            },
                                          ],
                                          "trips": Array [
                                            Object {
                                              "duration": 1234,
                                              "end_time": 13579,
                                              "start_time": 12345,
                                              "trip_headsign": "To Downtown",
                                              "trip_id": "abcd",
                                              "trip_short_name": "The Express",
                                            },
                                          ],
                                        },
                                      ],
                                      "route_id": "route1",
                                    },
                                  ],
                                  "stops": Array [
                                    Object {
                                      "stop_id": "1",
                                      "stop_lat": 36.9707,
                                      "stop_lon": -122.0246,
                                      "stop_name": "Santa Cruz",
                                    },
                                    Object {
                                      "stop_id": "2",
                                      "stop_lat": 37.049,
                                      "stop_lon": -122.0279,
                                      "stop_name": "Scotts Valley",
                                    },
                                  ],
                                  "stopsById": Object {
                                    "1": Object {
                                      "stop_id": "1",
                                      "stop_lat": 36.9707,
                                      "stop_lon": -122.0246,
                                      "stop_name": "Santa Cruz",
                                    },
                                    "2": Object {
                                      "stop_id": "2",
                                      "stop_lat": 37.049,
                                      "stop_lon": -122.0279,
                                      "stop_name": "Scotts Valley",
                                    },
                                  },
                                }
                              }
                            >
                              <div
                                className="ReactSelectMock"
                              />
                            </ReactSelect>
                          </ForwardRef>
                        </div>
                      </Box>
                    </FormControl>
                    <FormControl
                      key=".1"
                      mb={null}
                    >
                      <Box
                        mb={null}
                        role="group"
                      >
                        <div
                          className="css-0"
                          role="group"
                        >
                          <FormLabel
                            htmlFor="Route"
                          >
                            <Box
                              as="label"
                              display="inline-block"
                              fontSize="md"
                              fontWeight="medium"
                              htmlFor="Route"
                              opacity="1"
                              pb="4px"
                              pr="12px"
                              textAlign="left"
                              verticalAlign="middle"
                            >
                              <label
                                className="css-176s5fq"
                                htmlFor="Route"
                              >
                                Select route
                              </label>
                            </Box>
                          </FormLabel>
                          <ForwardRef
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            inputId="Route"
                            isMulti={true}
                            name="Route"
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "mock-route-label",
                                  "patterns": Array [
                                    Object {
                                      "geometry": Object {
                                        "coordinates": Array [
                                          Array [
                                            -122.0246,
                                            36.9707,
                                          ],
                                          Array [
                                            -122.0279,
                                            37.049,
                                          ],
                                          Array [
                                            -121.9799,
                                            37.2299,
                                          ],
                                          Array [
                                            -121.9445,
                                            37.324,
                                          ],
                                          Array [
                                            -121.936,
                                            37.353,
                                          ],
                                          Array [
                                            -121.924,
                                            37.365,
                                          ],
                                        ],
                                        "type": "LineString",
                                      },
                                      "name": "Mock Pattern",
                                      "pattern_id": "mock-pattern-id",
                                      "stops": Array [
                                        Object {
                                          "stop_id": "1",
                                          "stop_lat": 36.9707,
                                          "stop_lon": -122.0246,
                                          "stop_name": "Santa Cruz",
                                        },
                                        Object {
                                          "stop_id": "2",
                                          "stop_lat": 37.049,
                                          "stop_lon": -122.0279,
                                          "stop_name": "Scotts Valley",
                                        },
                                      ],
                                      "trips": Array [
                                        Object {
                                          "duration": 1234,
                                          "end_time": 13579,
                                          "start_time": 12345,
                                          "trip_headsign": "To Downtown",
                                          "trip_id": "abcd",
                                          "trip_short_name": "The Express",
                                        },
                                      ],
                                    },
                                  ],
                                  "route_id": "route1",
                                },
                              ]
                            }
                            placeholder="Select route"
                            value={
                              Array [
                                Object {
                                  "label": "mock-route-label",
                                  "patterns": Array [
                                    Object {
                                      "geometry": Object {
                                        "coordinates": Array [
                                          Array [
                                            -122.0246,
                                            36.9707,
                                          ],
                                          Array [
                                            -122.0279,
                                            37.049,
                                          ],
                                          Array [
                                            -121.9799,
                                            37.2299,
                                          ],
                                          Array [
                                            -121.9445,
                                            37.324,
                                          ],
                                          Array [
                                            -121.936,
                                            37.353,
                                          ],
                                          Array [
                                            -121.924,
                                            37.365,
                                          ],
                                        ],
                                        "type": "LineString",
                                      },
                                      "name": "Mock Pattern",
                                      "pattern_id": "mock-pattern-id",
                                      "stops": Array [
                                        Object {
                                          "stop_id": "1",
                                          "stop_lat": 36.9707,
                                          "stop_lon": -122.0246,
                                          "stop_name": "Santa Cruz",
                                        },
                                        Object {
                                          "stop_id": "2",
                                          "stop_lat": 37.049,
                                          "stop_lon": -122.0279,
                                          "stop_name": "Scotts Valley",
                                        },
                                      ],
                                      "trips": Array [
                                        Object {
                                          "duration": 1234,
                                          "end_time": 13579,
                                          "start_time": 12345,
                                          "trip_headsign": "To Downtown",
                                          "trip_id": "abcd",
                                          "trip_short_name": "The Express",
                                        },
                                      ],
                                    },
                                  ],
                                  "route_id": "route1",
                                },
                              ]
                            }
                          >
                            <ReactSelect
                              getOptionLabel={[Function]}
                              getOptionValue={[Function]}
                              innerRef={null}
                              inputId="Route"
                              isMulti={true}
                              name="Route"
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ]
                              }
                              placeholder="Select route"
                              styles={
                                Object {
                                  "control": [Function],
                                  "option": [Function],
                                }
                              }
                              value={
                                Array [
                                  Object {
                                    "label": "mock-route-label",
                                    "patterns": Array [
                                      Object {
                                        "geometry": Object {
                                          "coordinates": Array [
                                            Array [
                                              -122.0246,
                                              36.9707,
                                            ],
                                            Array [
                                              -122.0279,
                                              37.049,
                                            ],
                                            Array [
                                              -121.9799,
                                              37.2299,
                                            ],
                                            Array [
                                              -121.9445,
                                              37.324,
                                            ],
                                            Array [
                                              -121.936,
                                              37.353,
                                            ],
                                            Array [
                                              -121.924,
                                              37.365,
                                            ],
                                          ],
                                          "type": "LineString",
                                        },
                                        "name": "Mock Pattern",
                                        "pattern_id": "mock-pattern-id",
                                        "stops": Array [
                                          Object {
                                            "stop_id": "1",
                                            "stop_lat": 36.9707,
                                            "stop_lon": -122.0246,
                                            "stop_name": "Santa Cruz",
                                          },
                                          Object {
                                            "stop_id": "2",
                                            "stop_lat": 37.049,
                                            "stop_lon": -122.0279,
                                            "stop_name": "Scotts Valley",
                                          },
                                        ],
                                        "trips": Array [
                                          Object {
                                            "duration": 1234,
                                            "end_time": 13579,
                                            "start_time": 12345,
                                            "trip_headsign": "To Downtown",
                                            "trip_id": "abcd",
                                            "trip_short_name": "The Express",
                                          },
                                        ],
                                      },
                                    ],
                                    "route_id": "route1",
                                  },
                                ]
                              }
                            >
                              <div
                                className="ReactSelectMock"
                              />
                            </ReactSelect>
                          </ForwardRef>
                        </div>
                      </Box>
                    </FormControl>
                  </div>
                </Box>
              </Flex>
            </ForwardRef>
          </SelectFeedAndRoutes>
          <ForwardRef
            key=".1"
            mb={4}
            spacing={4}
          >
            <Flex
              direction="column"
              mb={4}
            >
              <Box
                display="flex"
                flexDirection="column"
                mb={4}
              >
                <div
                  className="css-opcg3f"
                >
                  <SelectPatterns
                    key=".0"
                    mb={4}
                    onChange={[Function]}
                    trips={
                      Array [
                        "abcd",
                      ]
                    }
                  >
                    <FormControl
                      mb={4}
                    >
                      <Box
                        mb={4}
                        role="group"
                      >
                        <div
                          className="css-acwcvw"
                          role="group"
                        >
                          <FormLabel
                            htmlFor="Patterns"
                          >
                            <Box
                              as="label"
                              display="inline-block"
                              fontSize="md"
                              fontWeight="medium"
                              htmlFor="Patterns"
                              opacity="1"
                              pb="4px"
                              pr="12px"
                              textAlign="left"
                              verticalAlign="middle"
                            >
                              <label
                                className="css-176s5fq"
                                htmlFor="Patterns"
                              >
                                Select patterns
                              </label>
                            </Box>
                          </FormLabel>
                          <ForwardRef
                            getOptionLabel={[Function]}
                            getOptionValue={[Function]}
                            inputId="Patterns"
                            isMulti={true}
                            name="Patterns"
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "geometry": Object {
                                    "coordinates": Array [
                                      Array [
                                        -122.0246,
                                        36.9707,
                                      ],
                                      Array [
                                        -122.0279,
                                        37.049,
                                      ],
                                      Array [
                                        -121.9799,
                                        37.2299,
                                      ],
                                      Array [
                                        -121.9445,
                                        37.324,
                                      ],
                                      Array [
                                        -121.936,
                                        37.353,
                                      ],
                                      Array [
                                        -121.924,
                                        37.365,
                                      ],
                                    ],
                                    "type": "LineString",
                                  },
                                  "name": "Mock Pattern",
                                  "pattern_id": "mock-pattern-id",
                                  "stops": Array [
                                    Object {
                                      "stop_id": "1",
                                      "stop_lat": 36.9707,
                                      "stop_lon": -122.0246,
                                      "stop_name": "Santa Cruz",
                                    },
                                    Object {
                                      "stop_id": "2",
                                      "stop_lat": 37.049,
                                      "stop_lon": -122.0279,
                                      "stop_name": "Scotts Valley",
                                    },
                                  ],
                                  "trips": Array [
                                    Object {
                                      "duration": 1234,
                                      "end_time": 13579,
                                      "start_time": 12345,
                                      "trip_headsign": "To Downtown",
                                      "trip_id": "abcd",
                                      "trip_short_name": "The Express",
                                    },
                                  ],
                                },
                              ]
                            }
                            placeholder="Select patterns"
                            value={
                              Array [
                                Object {
                                  "geometry": Object {
                                    "coordinates": Array [
                                      Array [
                                        -122.0246,
                                        36.9707,
                                      ],
                                      Array [
                                        -122.0279,
                                        37.049,
                                      ],
                                      Array [
                                        -121.9799,
                                        37.2299,
                                      ],
                                      Array [
                                        -121.9445,
                                        37.324,
                                      ],
                                      Array [
                                        -121.936,
                                        37.353,
                                      ],
                                      Array [
                                        -121.924,
                                        37.365,
                                      ],
                                    ],
                                    "type": "LineString",
                                  },
                                  "name": "Mock Pattern",
                                  "pattern_id": "mock-pattern-id",
                                  "stops": Array [
                                    Object {
                                      "stop_id": "1",
                                      "stop_lat": 36.9707,
                                      "stop_lon": -122.0246,
                                      "stop_name": "Santa Cruz",
                                    },
                                    Object {
                                      "stop_id": "2",
                                      "stop_lat": 37.049,
                                      "stop_lon": -122.0279,
                                      "stop_name": "Scotts Valley",
                                    },
                                  ],
                                  "trips": Array [
                                    Object {
                                      "duration": 1234,
                                      "end_time": 13579,
                                      "start_time": 12345,
                                      "trip_headsign": "To Downtown",
                                      "trip_id": "abcd",
                                      "trip_short_name": "The Express",
                                    },
                                  ],
                                },
                              ]
                            }
                          >
                            <ReactSelect
                              getOptionLabel={[Function]}
                              getOptionValue={[Function]}
                              innerRef={null}
                              inputId="Patterns"
                              isMulti={true}
                              name="Patterns"
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "geometry": Object {
                                      "coordinates": Array [
                                        Array [
                                          -122.0246,
                                          36.9707,
                                        ],
                                        Array [
                                          -122.0279,
                                          37.049,
                                        ],
                                        Array [
                                          -121.9799,
                                          37.2299,
                                        ],
                                        Array [
                                          -121.9445,
                                          37.324,
                                        ],
                                        Array [
                                          -121.936,
                                          37.353,
                                        ],
                                        Array [
                                          -121.924,
                                          37.365,
                                        ],
                                      ],
                                      "type": "LineString",
                                    },
                                    "name": "Mock Pattern",
                                    "pattern_id": "mock-pattern-id",
                                    "stops": Array [
                                      Object {
                                        "stop_id": "1",
                                        "stop_lat": 36.9707,
                                        "stop_lon": -122.0246,
                                        "stop_name": "Santa Cruz",
                                      },
                                      Object {
                                        "stop_id": "2",
                                        "stop_lat": 37.049,
                                        "stop_lon": -122.0279,
                                        "stop_name": "Scotts Valley",
                                      },
                                    ],
                                    "trips": Array [
                                      Object {
                                        "duration": 1234,
                                        "end_time": 13579,
                                        "start_time": 12345,
                                        "trip_headsign": "To Downtown",
                                        "trip_id": "abcd",
                                        "trip_short_name": "The Express",
                                      },
                                    ],
                                  },
                                ]
                              }
                              placeholder="Select patterns"
                              styles={
                                Object {
                                  "control": [Function],
                                  "option": [Function],
                                }
                              }
                              value={
                                Array [
                                  Object {
                                    "geometry": Object {
                                      "coordinates": Array [
                                        Array [
                                          -122.0246,
                                          36.9707,
                                        ],
                                        Array [
                                          -122.0279,
                                          37.049,
                                        ],
                                        Array [
                                          -121.9799,
                                          37.2299,
                                        ],
                                        Array [
                                          -121.9445,
                                          37.324,
                                        ],
                                        Array [
                                          -121.936,
                                          37.353,
                                        ],
                                        Array [
                                          -121.924,
                                          37.365,
                                        ],
                                      ],
                                      "type": "LineString",
                                    },
                                    "name": "Mock Pattern",
                                    "pattern_id": "mock-pattern-id",
                                    "stops": Array [
                                      Object {
                                        "stop_id": "1",
                                        "stop_lat": 36.9707,
                                        "stop_lon": -122.0246,
                                        "stop_name": "Santa Cruz",
                                      },
                                      Object {
                                        "stop_id": "2",
                                        "stop_lat": 37.049,
                                        "stop_lon": -122.0279,
                                        "stop_name": "Scotts Valley",
                                      },
                                    ],
                                    "trips": Array [
                                      Object {
                                        "duration": 1234,
                                        "end_time": 13579,
                                        "start_time": 12345,
                                        "trip_headsign": "To Downtown",
                                        "trip_id": "abcd",
                                        "trip_short_name": "The Express",
                                      },
                                    ],
                                  },
                                ]
                              }
                            >
                              <div
                                className="ReactSelectMock"
                              />
                            </ReactSelect>
                          </ForwardRef>
                        </div>
                      </Box>
                    </FormControl>
                  </SelectPatterns>
                  <Alert
                    key=".1"
                    mb={4}
                    status="info"
                  >
                    <Box
                      alignItems="center"
                      bg="blue.100"
                      display="flex"
                      mb={4}
                      overflow="hidden"
                      pb={3}
                      pl={4}
                      position="relative"
                      pr={4}
                      pt={3}
                      role="alert"
                    >
                      <div
                        className="css-pjk3qj"
                        role="alert"
                      >
                        <AlertIcon>
                          <Icon
                            color="blue.500"
                            mr={3}
                            name="info"
                            size={5}
                          >
                            <Styled(div)
                              as="svg"
                              color="blue.500"
                              display="inline-block"
                              focusable={false}
                              mr={3}
                              role="presentation"
                              size={5}
                              verticalAlign="middle"
                              viewBox="0 0 24 24"
                            >
                              <svg
                                className="css-186zpkg"
                                focusable={false}
                                role="presentation"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                                  fill="currentColor"
                                />
                              </svg>
                            </Styled(div)>
                          </Icon>
                        </AlertIcon>
                        Select the stop-to-stop segment(s) of the pattern(s) to scale the speed on.
                      </div>
                    </Box>
                  </Alert>
                  <Flex
                    justify="space-between"
                    key=".2"
                    mb={null}
                  >
                    <Box
                      display="flex"
                      justifyContent="space-between"
                      mb={null}
                    >
                      <div
                        className="css-gg4vpm"
                      >
                        <SimpleIconButton
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "draw-polygon",
                              "prefix": "fas",
                            }
                          }
                          label="Select"
                          onClick={[Function]}
                          size="lg"
                          variantColor="green"
                        >
                          <Box>
                            <div
                              className="css-0"
                            >
                              <Tooltip
                                aria-label="Select"
                                hasArrow={true}
                                label="Select"
                                placement="auto"
                                zIndex={1000}
                              >
                                <Button
                                  aria-label="Select"
                                  isActive={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  size="lg"
                                  variant="ghost"
                                  variantColor="green"
                                >
                                  <PseudoBox
                                    _active={
                                      Object {
                                        "bg": "green.100",
                                      }
                                    }
                                    _disabled={
                                      Object {
                                        "boxShadow": "none",
                                        "cursor": "not-allowed",
                                        "opacity": "40%",
                                      }
                                    }
                                    _focus={
                                      Object {
                                        "boxShadow": "outline",
                                      }
                                    }
                                    _hover={
                                      Object {
                                        "bg": "green.50",
                                      }
                                    }
                                    alignItems="center"
                                    appearance="none"
                                    aria-label="Select"
                                    as="button"
                                    bg="transparent"
                                    borderRadius="md"
                                    color="green.500"
                                    display="inline-flex"
                                    fontSize="lg"
                                    fontWeight="semibold"
                                    height={12}
                                    justifyContent="center"
                                    lineHeight="1.2"
                                    minWidth={12}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    outline="none"
                                    position="relative"
                                    px={6}
                                    transition="all 250ms"
                                    type="button"
                                    userSelect="none"
                                    verticalAlign="middle"
                                    whiteSpace="nowrap"
                                  >
                                    <button
                                      aria-label="Select"
                                      className="css-11hmzj"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      type="button"
                                    >
                                      <Icon
                                        fixedWidth={false}
                                        icon={
                                          Object {
                                            "icon": Array [],
                                            "iconName": "draw-polygon",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [],
                                              "iconName": "draw-polygon",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-draw-polygon fa-w-NaN "
                                            data-icon="draw-polygon"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 undefined undefined"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </button>
                                  </PseudoBox>
                                </Button>
                                <ForwardRef
                                  anchorEl={
                                    <button
                                      aria-label="Select"
                                      class="css-11hmzj"
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="svg-inline--fa fa-draw-polygon fa-w-NaN "
                                        data-icon="draw-polygon"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 undefined undefined"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </button>
                                  }
                                  arrowSize="10px"
                                  bg="gray.700"
                                  borderRadius="sm"
                                  color="whiteAlpha.900"
                                  fontSize="sm"
                                  fontWeight="medium"
                                  hasArrow={true}
                                  isOpen={false}
                                  maxW="320px"
                                  modifiers={
                                    Object {
                                      "offset": Object {
                                        "enabled": true,
                                        "offset": "0, 8",
                                      },
                                    }
                                  }
                                  placement="auto"
                                  pointerEvents="none"
                                  px="8px"
                                  py="2px"
                                  shadow="md"
                                  timeout={200}
                                  usePortal={true}
                                  zIndex={1000}
                                />
                              </Tooltip>
                            </div>
                          </Box>
                        </SimpleIconButton>
                        <SimpleIconButton
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "plus-square",
                              "prefix": "fas",
                            }
                          }
                          label="Add to"
                          onClick={[Function]}
                          size="lg"
                        >
                          <Box>
                            <div
                              className="css-0"
                            >
                              <Tooltip
                                aria-label="Add to"
                                hasArrow={true}
                                label="Add to"
                                placement="auto"
                                zIndex={1000}
                              >
                                <Button
                                  aria-label="Add to"
                                  isActive={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  size="lg"
                                  variant="ghost"
                                  variantColor="blue"
                                >
                                  <PseudoBox
                                    _active={
                                      Object {
                                        "bg": "blue.100",
                                      }
                                    }
                                    _disabled={
                                      Object {
                                        "boxShadow": "none",
                                        "cursor": "not-allowed",
                                        "opacity": "40%",
                                      }
                                    }
                                    _focus={
                                      Object {
                                        "boxShadow": "outline",
                                      }
                                    }
                                    _hover={
                                      Object {
                                        "bg": "blue.50",
                                      }
                                    }
                                    alignItems="center"
                                    appearance="none"
                                    aria-label="Add to"
                                    as="button"
                                    bg="transparent"
                                    borderRadius="md"
                                    color="blue.500"
                                    display="inline-flex"
                                    fontSize="lg"
                                    fontWeight="semibold"
                                    height={12}
                                    justifyContent="center"
                                    lineHeight="1.2"
                                    minWidth={12}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    outline="none"
                                    position="relative"
                                    px={6}
                                    transition="all 250ms"
                                    type="button"
                                    userSelect="none"
                                    verticalAlign="middle"
                                    whiteSpace="nowrap"
                                  >
                                    <button
                                      aria-label="Add to"
                                      className="css-13q3z73"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      type="button"
                                    >
                                      <Icon
                                        fixedWidth={false}
                                        icon={
                                          Object {
                                            "icon": Array [],
                                            "iconName": "plus-square",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [],
                                              "iconName": "plus-square",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-plus-square fa-w-NaN "
                                            data-icon="plus-square"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 undefined undefined"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </button>
                                  </PseudoBox>
                                </Button>
                                <ForwardRef
                                  anchorEl={
                                    <button
                                      aria-label="Add to"
                                      class="css-13q3z73"
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="svg-inline--fa fa-plus-square fa-w-NaN "
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 undefined undefined"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </button>
                                  }
                                  arrowSize="10px"
                                  bg="gray.700"
                                  borderRadius="sm"
                                  color="whiteAlpha.900"
                                  fontSize="sm"
                                  fontWeight="medium"
                                  hasArrow={true}
                                  isOpen={false}
                                  maxW="320px"
                                  modifiers={
                                    Object {
                                      "offset": Object {
                                        "enabled": true,
                                        "offset": "0, 8",
                                      },
                                    }
                                  }
                                  placement="auto"
                                  pointerEvents="none"
                                  px="8px"
                                  py="2px"
                                  shadow="md"
                                  timeout={200}
                                  usePortal={true}
                                  zIndex={1000}
                                />
                              </Tooltip>
                            </div>
                          </Box>
                        </SimpleIconButton>
                        <SimpleIconButton
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "minus-square",
                              "prefix": "fas",
                            }
                          }
                          label="Remove from"
                          onClick={[Function]}
                          size="lg"
                          variantColor="yellow"
                        >
                          <Box>
                            <div
                              className="css-0"
                            >
                              <Tooltip
                                aria-label="Remove from"
                                hasArrow={true}
                                label="Remove from"
                                placement="auto"
                                zIndex={1000}
                              >
                                <Button
                                  aria-label="Remove from"
                                  isActive={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  size="lg"
                                  variant="ghost"
                                  variantColor="yellow"
                                >
                                  <PseudoBox
                                    _active={
                                      Object {
                                        "bg": "yellow.100",
                                      }
                                    }
                                    _disabled={
                                      Object {
                                        "boxShadow": "none",
                                        "cursor": "not-allowed",
                                        "opacity": "40%",
                                      }
                                    }
                                    _focus={
                                      Object {
                                        "boxShadow": "outline",
                                      }
                                    }
                                    _hover={
                                      Object {
                                        "bg": "yellow.50",
                                      }
                                    }
                                    alignItems="center"
                                    appearance="none"
                                    aria-label="Remove from"
                                    as="button"
                                    bg="transparent"
                                    borderRadius="md"
                                    color="yellow.500"
                                    display="inline-flex"
                                    fontSize="lg"
                                    fontWeight="semibold"
                                    height={12}
                                    justifyContent="center"
                                    lineHeight="1.2"
                                    minWidth={12}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    outline="none"
                                    position="relative"
                                    px={6}
                                    transition="all 250ms"
                                    type="button"
                                    userSelect="none"
                                    verticalAlign="middle"
                                    whiteSpace="nowrap"
                                  >
                                    <button
                                      aria-label="Remove from"
                                      className="css-jm7s4q"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      type="button"
                                    >
                                      <Icon
                                        fixedWidth={false}
                                        icon={
                                          Object {
                                            "icon": Array [],
                                            "iconName": "minus-square",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [],
                                              "iconName": "minus-square",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-minus-square fa-w-NaN "
                                            data-icon="minus-square"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 undefined undefined"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </button>
                                  </PseudoBox>
                                </Button>
                                <ForwardRef
                                  anchorEl={
                                    <button
                                      aria-label="Remove from"
                                      class="css-jm7s4q"
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="svg-inline--fa fa-minus-square fa-w-NaN "
                                        data-icon="minus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 undefined undefined"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </button>
                                  }
                                  arrowSize="10px"
                                  bg="gray.700"
                                  borderRadius="sm"
                                  color="whiteAlpha.900"
                                  fontSize="sm"
                                  fontWeight="medium"
                                  hasArrow={true}
                                  isOpen={false}
                                  maxW="320px"
                                  modifiers={
                                    Object {
                                      "offset": Object {
                                        "enabled": true,
                                        "offset": "0, 8",
                                      },
                                    }
                                  }
                                  placement="auto"
                                  pointerEvents="none"
                                  px="8px"
                                  py="2px"
                                  shadow="md"
                                  timeout={200}
                                  usePortal={true}
                                  zIndex={1000}
                                />
                              </Tooltip>
                            </div>
                          </Box>
                        </SimpleIconButton>
                        <SimpleIconButton
                          icon={
                            Object {
                              "icon": Array [],
                              "iconName": "ban",
                              "prefix": "fas",
                            }
                          }
                          label="Clear"
                          onClick={[Function]}
                          size="lg"
                          variantColor="red"
                        >
                          <Box>
                            <div
                              className="css-0"
                            >
                              <Tooltip
                                aria-label="Clear"
                                hasArrow={true}
                                label="Clear"
                                placement="auto"
                                zIndex={1000}
                              >
                                <Button
                                  aria-label="Clear"
                                  isActive={false}
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseEnter={[Function]}
                                  onMouseLeave={[Function]}
                                  size="lg"
                                  variant="ghost"
                                  variantColor="red"
                                >
                                  <PseudoBox
                                    _active={
                                      Object {
                                        "bg": "red.100",
                                      }
                                    }
                                    _disabled={
                                      Object {
                                        "boxShadow": "none",
                                        "cursor": "not-allowed",
                                        "opacity": "40%",
                                      }
                                    }
                                    _focus={
                                      Object {
                                        "boxShadow": "outline",
                                      }
                                    }
                                    _hover={
                                      Object {
                                        "bg": "red.50",
                                      }
                                    }
                                    alignItems="center"
                                    appearance="none"
                                    aria-label="Clear"
                                    as="button"
                                    bg="transparent"
                                    borderRadius="md"
                                    color="red.500"
                                    display="inline-flex"
                                    fontSize="lg"
                                    fontWeight="semibold"
                                    height={12}
                                    justifyContent="center"
                                    lineHeight="1.2"
                                    minWidth={12}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onMouseEnter={[Function]}
                                    onMouseLeave={[Function]}
                                    outline="none"
                                    position="relative"
                                    px={6}
                                    transition="all 250ms"
                                    type="button"
                                    userSelect="none"
                                    verticalAlign="middle"
                                    whiteSpace="nowrap"
                                  >
                                    <button
                                      aria-label="Clear"
                                      className="css-j2a2xs"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                      type="button"
                                    >
                                      <Icon
                                        fixedWidth={false}
                                        icon={
                                          Object {
                                            "icon": Array [],
                                            "iconName": "ban",
                                            "prefix": "fas",
                                          }
                                        }
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className=""
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [],
                                              "iconName": "ban",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size={null}
                                          spin={false}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-ban fa-w-NaN "
                                            data-icon="ban"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 undefined undefined"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                      </Icon>
                                    </button>
                                  </PseudoBox>
                                </Button>
                                <ForwardRef
                                  anchorEl={
                                    <button
                                      aria-label="Clear"
                                      class="css-j2a2xs"
                                      type="button"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        class="svg-inline--fa fa-ban fa-w-NaN "
                                        data-icon="ban"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        viewBox="0 0 undefined undefined"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          fill="currentColor"
                                        />
                                      </svg>
                                    </button>
                                  }
                                  arrowSize="10px"
                                  bg="gray.700"
                                  borderRadius="sm"
                                  color="whiteAlpha.900"
                                  fontSize="sm"
                                  fontWeight="medium"
                                  hasArrow={true}
                                  isOpen={false}
                                  maxW="320px"
                                  modifiers={
                                    Object {
                                      "offset": Object {
                                        "enabled": true,
                                        "offset": "0, 8",
                                      },
                                    }
                                  }
                                  placement="auto"
                                  pointerEvents="none"
                                  px="8px"
                                  py="2px"
                                  shadow="md"
                                  timeout={200}
                                  usePortal={true}
                                  zIndex={1000}
                                />
                              </Tooltip>
                            </div>
                          </Box>
                        </SimpleIconButton>
                      </div>
                    </Box>
                  </Flex>
                </div>
              </Box>
            </Flex>
          </ForwardRef>
          <NumberInput
            key=".2"
            label="Scale speed by"
            mb={null}
            onChange={[Function]}
            test={[Function]}
          >
            <FormControl
              isDisabled={false}
              isInvalid={true}
              mb={null}
            >
              <Box
                mb={null}
                role="group"
              >
                <div
                  className="css-0"
                  role="group"
                >
                  <FormLabel
                    htmlFor="00000000-0000-0000-0000-000000000000"
                  >
                    <Box
                      as="label"
                      display="inline-block"
                      fontSize="md"
                      fontWeight="medium"
                      htmlFor="00000000-0000-0000-0000-000000000000"
                      opacity="1"
                      pb="4px"
                      pr="12px"
                      textAlign="left"
                      verticalAlign="middle"
                    >
                      <label
                        className="css-176s5fq"
                        htmlFor="00000000-0000-0000-0000-000000000000"
                      >
                        Scale speed by
                      </label>
                    </Box>
                  </FormLabel>
                  <InputGroup>
                    <Box
                      display="flex"
                      position="relative"
                    >
                      <div
                        className="css-kjafn5"
                      >
                        <Input
                          as="input"
                          errorBorderColor="red.500"
                          focusBorderColor="blue.500"
                          id="00000000-0000-0000-0000-000000000000"
                          isFullWidth={true}
                          isInvalid={true}
                          isValid={false}
                          key=".0"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          pl={null}
                          placeholder=""
                          pr={null}
                          size="md"
                          type="text"
                          variant="outline"
                        >
                          <PseudoBox
                            _disabled={
                              Object {
                                "cursor": "not-allowed",
                                "opacity": "0.4",
                              }
                            }
                            _focus={
                              Object {
                                "borderColor": "#3182ce",
                                "boxShadow": "0 0 0 1px #3182ce",
                                "zIndex": 1,
                              }
                            }
                            _hover={
                              Object {
                                "borderColor": "gray.300",
                              }
                            }
                            _invalid={
                              Object {
                                "borderColor": "#e53e3e",
                                "boxShadow": "0 0 0 1px #e53e3e",
                              }
                            }
                            _readOnly={
                              Object {
                                "bg": "transparent",
                                "boxShadow": "none !important",
                                "userSelect": "all",
                              }
                            }
                            alignItems="center"
                            appearance="none"
                            aria-disabled={false}
                            aria-invalid={true}
                            as="input"
                            bg="white"
                            border="1px"
                            borderColor="inherit"
                            disabled={false}
                            display="flex"
                            fontSize="md"
                            height={10}
                            id="00000000-0000-0000-0000-000000000000"
                            isValid={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            outline="none"
                            pl={null}
                            placeholder=""
                            position="relative"
                            pr={null}
                            px={4}
                            rounded="md"
                            transition="all 0.2s"
                            type="text"
                            width="100%"
                          >
                            <input
                              aria-disabled={false}
                              aria-invalid={true}
                              className="css-1ga4kqw"
                              disabled={false}
                              id="00000000-0000-0000-0000-000000000000"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              placeholder=""
                              type="text"
                            />
                          </PseudoBox>
                        </Input>
                      </div>
                    </Box>
                  </InputGroup>
                </div>
              </Box>
            </FormControl>
          </NumberInput>
        </div>
      </Box>
    </Flex>
  </ForwardRef>
</AdjustSpeedComponent>
`;
