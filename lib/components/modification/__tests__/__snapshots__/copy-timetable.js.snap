// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > Modification > CopyTimetable can select a timetable 1`] = `
Object {
  "_id": "00000000-0000-0000-0000-000000000000",
  "dwellTime": 0,
  "dwellTimes": Array [],
  "endTime": 79200,
  "exactTimes": false,
  "friday": true,
  "headwaySecs": 600,
  "monday": true,
  "name": "M-F",
  "phaseAtStop": null,
  "phaseFromStop": null,
  "phaseFromTimetable": null,
  "phaseSeconds": 0,
  "saturday": false,
  "segmentSpeeds": Array [
    16,
  ],
  "startTime": 25200,
  "sunday": false,
  "thursday": true,
  "tuesday": true,
  "wednesday": true,
}
`;

exports[`Component > Modification > CopyTimetable renders correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r1"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <p>
          Loading...
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable renders correctly 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r1"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <Select
          label="Region"
          onBlur={[Function]}
          onChange={[Function]}
          value="r1"
        >
          <Group
            id="region-input-0"
            label="Region"
            onBlur={[Function]}
            onChange={[Function]}
            value="r1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="region-input-0"
              >
                Region
              </label>
              <select
                className="form-control"
                id="region-input-0"
                label="Region"
                onBlur={[Function]}
                onChange={[Function]}
                value="r1"
              >
                <option
                  value="r1"
                >
                  mock region
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Project"
          onBlur={[Function]}
          onChange={[Function]}
          value="p1"
        >
          <Group
            id="project-input-1"
            label="Project"
            onBlur={[Function]}
            onChange={[Function]}
            value="p1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="project-input-1"
              >
                Project
              </label>
              <select
                className="form-control"
                id="project-input-1"
                label="Project"
                onBlur={[Function]}
                onChange={[Function]}
                value="p1"
              >
                <option
                  value="p1"
                >
                  mock project
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Modification"
          onBlur={[Function]}
          onChange={[Function]}
          value="m1"
        >
          <Group
            id="modification-input-2"
            label="Modification"
            onBlur={[Function]}
            onChange={[Function]}
            value="m1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="modification-input-2"
              >
                Modification
              </label>
              <select
                className="form-control"
                id="modification-input-2"
                label="Modification"
                onBlur={[Function]}
                onChange={[Function]}
                value="m1"
              >
                <option
                  value="m1"
                >
                  mock modification
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Timetable"
          onBlur={[Function]}
          onChange={[Function]}
          value="t1"
        >
          <Group
            id="timetable-input-3"
            label="Timetable"
            onBlur={[Function]}
            onChange={[Function]}
            value="t1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="timetable-input-3"
              >
                Timetable
              </label>
              <select
                className="form-control"
                id="timetable-input-3"
                label="Timetable"
                onBlur={[Function]}
                onChange={[Function]}
                value="t1"
              >
                <option
                  value="t1"
                >
                  M-F
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <p>
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
               Copy into new timetable
            </a>
          </Button>
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable renders when no timetables exist in database 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r2"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <div
          className="alert alert-danger"
          role="alert"
        >
          <Icon
            type="exclamation-circle"
          >
            <i
              className="fa fa-exclamation-circle fa-fw "
            />
          </Icon>
          No timetables available to copy from!  Please create a timetable manually.
        </div>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable renders with a region without timetables 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r2"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <Select
          label="Region"
          onBlur={[Function]}
          onChange={[Function]}
          value="r1"
        >
          <Group
            id="region-input-8"
            label="Region"
            onBlur={[Function]}
            onChange={[Function]}
            value="r1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="region-input-8"
              >
                Region
              </label>
              <select
                className="form-control"
                id="region-input-8"
                label="Region"
                onBlur={[Function]}
                onChange={[Function]}
                value="r1"
              >
                <option
                  value="r1"
                >
                  mock region
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Project"
          onBlur={[Function]}
          onChange={[Function]}
          value="p1"
        >
          <Group
            id="project-input-9"
            label="Project"
            onBlur={[Function]}
            onChange={[Function]}
            value="p1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="project-input-9"
              >
                Project
              </label>
              <select
                className="form-control"
                id="project-input-9"
                label="Project"
                onBlur={[Function]}
                onChange={[Function]}
                value="p1"
              >
                <option
                  value="p1"
                >
                  mock project
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Modification"
          onBlur={[Function]}
          onChange={[Function]}
          value="m1"
        >
          <Group
            id="modification-input-10"
            label="Modification"
            onBlur={[Function]}
            onChange={[Function]}
            value="m1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="modification-input-10"
              >
                Modification
              </label>
              <select
                className="form-control"
                id="modification-input-10"
                label="Modification"
                onBlur={[Function]}
                onChange={[Function]}
                value="m1"
              >
                <option
                  value="m1"
                >
                  mock modification
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Timetable"
          onBlur={[Function]}
          onChange={[Function]}
          value="t1"
        >
          <Group
            id="timetable-input-11"
            label="Timetable"
            onBlur={[Function]}
            onChange={[Function]}
            value="t1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="timetable-input-11"
              >
                Timetable
              </label>
              <select
                className="form-control"
                id="timetable-input-11"
                label="Timetable"
                onBlur={[Function]}
                onChange={[Function]}
                value="t1"
              >
                <option
                  value="t1"
                >
                  M-F
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <p>
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
               Copy into new timetable
            </a>
          </Button>
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable segment warnings shows a warning when current modification has no segments 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r1"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <Select
          label="Region"
          onBlur={[Function]}
          onChange={[Function]}
          value="r1"
        >
          <Group
            id="region-input-12"
            label="Region"
            onBlur={[Function]}
            onChange={[Function]}
            value="r1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="region-input-12"
              >
                Region
              </label>
              <select
                className="form-control"
                id="region-input-12"
                label="Region"
                onBlur={[Function]}
                onChange={[Function]}
                value="r1"
              >
                <option
                  value="r1"
                >
                  mock region
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Project"
          onBlur={[Function]}
          onChange={[Function]}
          value="p1"
        >
          <Group
            id="project-input-13"
            label="Project"
            onBlur={[Function]}
            onChange={[Function]}
            value="p1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="project-input-13"
              >
                Project
              </label>
              <select
                className="form-control"
                id="project-input-13"
                label="Project"
                onBlur={[Function]}
                onChange={[Function]}
                value="p1"
              >
                <option
                  value="p1"
                >
                  mock project
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Modification"
          onBlur={[Function]}
          onChange={[Function]}
          value="m1"
        >
          <Group
            id="modification-input-14"
            label="Modification"
            onBlur={[Function]}
            onChange={[Function]}
            value="m1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="modification-input-14"
              >
                Modification
              </label>
              <select
                className="form-control"
                id="modification-input-14"
                label="Modification"
                onBlur={[Function]}
                onChange={[Function]}
                value="m1"
              >
                <option
                  value="m1"
                >
                  mock modification
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Timetable"
          onBlur={[Function]}
          onChange={[Function]}
          value="t1"
        >
          <Group
            id="timetable-input-15"
            label="Timetable"
            onBlur={[Function]}
            onChange={[Function]}
            value="t1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="timetable-input-15"
              >
                Timetable
              </label>
              <select
                className="form-control"
                id="timetable-input-15"
                label="Timetable"
                onBlur={[Function]}
                onChange={[Function]}
                value="t1"
              >
                <option
                  value="t1"
                >
                  M-F
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <div
          className="alert alert-info"
          role="alert"
        >
          <Icon
            type="exclamation-circle"
          >
            <i
              className="fa fa-exclamation-circle fa-fw "
            />
          </Icon>
          The modification being copied to and/or from does not
                  have any segments.  The default segment speed of
                  15 km/h will be used.
                
        </div>
        <p>
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
               Copy into new timetable
            </a>
          </Button>
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable segment warnings shows a warning when modification of timetable being copied has less segments 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r1"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <Select
          label="Region"
          onBlur={[Function]}
          onChange={[Function]}
          value="r1"
        >
          <Group
            id="region-input-24"
            label="Region"
            onBlur={[Function]}
            onChange={[Function]}
            value="r1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="region-input-24"
              >
                Region
              </label>
              <select
                className="form-control"
                id="region-input-24"
                label="Region"
                onBlur={[Function]}
                onChange={[Function]}
                value="r1"
              >
                <option
                  value="r1"
                >
                  mock region
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Project"
          onBlur={[Function]}
          onChange={[Function]}
          value="p1"
        >
          <Group
            id="project-input-25"
            label="Project"
            onBlur={[Function]}
            onChange={[Function]}
            value="p1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="project-input-25"
              >
                Project
              </label>
              <select
                className="form-control"
                id="project-input-25"
                label="Project"
                onBlur={[Function]}
                onChange={[Function]}
                value="p1"
              >
                <option
                  value="p1"
                >
                  mock project
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Modification"
          onBlur={[Function]}
          onChange={[Function]}
          value="m1"
        >
          <Group
            id="modification-input-26"
            label="Modification"
            onBlur={[Function]}
            onChange={[Function]}
            value="m1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="modification-input-26"
              >
                Modification
              </label>
              <select
                className="form-control"
                id="modification-input-26"
                label="Modification"
                onBlur={[Function]}
                onChange={[Function]}
                value="m1"
              >
                <option
                  value="m1"
                >
                  mock modification
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Timetable"
          onBlur={[Function]}
          onChange={[Function]}
          value="t1"
        >
          <Group
            id="timetable-input-27"
            label="Timetable"
            onBlur={[Function]}
            onChange={[Function]}
            value="t1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="timetable-input-27"
              >
                Timetable
              </label>
              <select
                className="form-control"
                id="timetable-input-27"
                label="Timetable"
                onBlur={[Function]}
                onChange={[Function]}
                value="t1"
              >
                <option
                  value="t1"
                >
                  M-F
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <div
          className="alert alert-info"
          role="alert"
        >
          <Icon
            type="exclamation-circle"
          >
            <i
              className="fa fa-exclamation-circle fa-fw "
            />
          </Icon>
          The modification of the timetable you are copying from
                  has less segments than the modification you are copying to.  The segment
                  speeds will be copied as far as the
                  1st segment and after that,
                  the default segment speed of 15 km/h will be used.
                
        </div>
        <p>
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
               Copy into new timetable
            </a>
          </Button>
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable segment warnings shows a warning when modification of timetable being copied has more segments 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r1"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <Select
          label="Region"
          onBlur={[Function]}
          onChange={[Function]}
          value="r1"
        >
          <Group
            id="region-input-20"
            label="Region"
            onBlur={[Function]}
            onChange={[Function]}
            value="r1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="region-input-20"
              >
                Region
              </label>
              <select
                className="form-control"
                id="region-input-20"
                label="Region"
                onBlur={[Function]}
                onChange={[Function]}
                value="r1"
              >
                <option
                  value="r1"
                >
                  mock region
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Project"
          onBlur={[Function]}
          onChange={[Function]}
          value="p1"
        >
          <Group
            id="project-input-21"
            label="Project"
            onBlur={[Function]}
            onChange={[Function]}
            value="p1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="project-input-21"
              >
                Project
              </label>
              <select
                className="form-control"
                id="project-input-21"
                label="Project"
                onBlur={[Function]}
                onChange={[Function]}
                value="p1"
              >
                <option
                  value="p1"
                >
                  mock project
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Modification"
          onBlur={[Function]}
          onChange={[Function]}
          value="m1"
        >
          <Group
            id="modification-input-22"
            label="Modification"
            onBlur={[Function]}
            onChange={[Function]}
            value="m1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="modification-input-22"
              >
                Modification
              </label>
              <select
                className="form-control"
                id="modification-input-22"
                label="Modification"
                onBlur={[Function]}
                onChange={[Function]}
                value="m1"
              >
                <option
                  value="m1"
                >
                  mock modification
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Timetable"
          onBlur={[Function]}
          onChange={[Function]}
          value="t1"
        >
          <Group
            id="timetable-input-23"
            label="Timetable"
            onBlur={[Function]}
            onChange={[Function]}
            value="t1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="timetable-input-23"
              >
                Timetable
              </label>
              <select
                className="form-control"
                id="timetable-input-23"
                label="Timetable"
                onBlur={[Function]}
                onChange={[Function]}
                value="t1"
              >
                <option
                  value="t1"
                >
                  M-F
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <div
          className="alert alert-info"
          role="alert"
        >
          <Icon
            type="exclamation-circle"
          >
            <i
              className="fa fa-exclamation-circle fa-fw "
            />
          </Icon>
          The modification of the timetable you are copying to
                  has less segments than the modification you are copying from.  The
                  segment speeds will be copied as far as the
                  1st segment.
                
        </div>
        <p>
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
               Copy into new timetable
            </a>
          </Button>
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;

exports[`Component > Modification > CopyTimetable segment warnings shows a warning when modification of timetable being copied has no segments 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CopyTimetable
    create={[Function]}
    currentModification={
      Object {
        "_id": "m1",
        "name": "mock modification",
        "segments": Array [
          Object {
            "fromStopId": "1",
            "geometry": Object {
              "coordinates": Array [
                Array [
                  -122.073334,
                  37.050961,
                ],
                Array [
                  -122.073509,
                  37.046589,
                ],
              ],
              "type": "LineString",
            },
            "spacing": 0,
            "stopAtEnd": true,
            "stopAtStart": true,
            "toStopId": "2",
          },
        ],
        "timetables": Array [
          Object {
            "_id": "t1",
            "dwellTimes": Array [],
            "name": "mock timetable",
            "segmentSpeeds": Array [
              16,
            ],
          },
        ],
      }
    }
    currentProject={
      Object {
        "_id": "p1",
        "modifications": Array [
          Object {
            "_id": "m1",
            "name": "mock modification",
            "segments": Array [
              Object {
                "fromStopId": "1",
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.073334,
                      37.050961,
                    ],
                    Array [
                      -122.073509,
                      37.046589,
                    ],
                  ],
                  "type": "LineString",
                },
                "spacing": 0,
                "stopAtEnd": true,
                "stopAtStart": true,
                "toStopId": "2",
              },
            ],
            "timetables": Array [
              Object {
                "_id": "t1",
                "dwellTimes": Array [],
                "name": "mock timetable",
                "segmentSpeeds": Array [
                  16,
                ],
              },
            ],
          },
        ],
        "name": "mock project",
      }
    }
    currentRegionId="r1"
    getTimetables={[Function]}
  >
    <ModalBody>
      <div
        className="CustomModal-block"
      >
        <Select
          label="Region"
          onBlur={[Function]}
          onChange={[Function]}
          value="r1"
        >
          <Group
            id="region-input-16"
            label="Region"
            onBlur={[Function]}
            onChange={[Function]}
            value="r1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="region-input-16"
              >
                Region
              </label>
              <select
                className="form-control"
                id="region-input-16"
                label="Region"
                onBlur={[Function]}
                onChange={[Function]}
                value="r1"
              >
                <option
                  value="r1"
                >
                  mock region
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Project"
          onBlur={[Function]}
          onChange={[Function]}
          value="p1"
        >
          <Group
            id="project-input-17"
            label="Project"
            onBlur={[Function]}
            onChange={[Function]}
            value="p1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="project-input-17"
              >
                Project
              </label>
              <select
                className="form-control"
                id="project-input-17"
                label="Project"
                onBlur={[Function]}
                onChange={[Function]}
                value="p1"
              >
                <option
                  value="p1"
                >
                  mock project
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Modification"
          onBlur={[Function]}
          onChange={[Function]}
          value="m1"
        >
          <Group
            id="modification-input-18"
            label="Modification"
            onBlur={[Function]}
            onChange={[Function]}
            value="m1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="modification-input-18"
              >
                Modification
              </label>
              <select
                className="form-control"
                id="modification-input-18"
                label="Modification"
                onBlur={[Function]}
                onChange={[Function]}
                value="m1"
              >
                <option
                  value="m1"
                >
                  mock modification
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <Select
          label="Timetable"
          onBlur={[Function]}
          onChange={[Function]}
          value="t1"
        >
          <Group
            id="timetable-input-19"
            label="Timetable"
            onBlur={[Function]}
            onChange={[Function]}
            value="t1"
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="timetable-input-19"
              >
                Timetable
              </label>
              <select
                className="form-control"
                id="timetable-input-19"
                label="Timetable"
                onBlur={[Function]}
                onChange={[Function]}
                value="t1"
              >
                <option
                  value="t1"
                >
                  M-F
                </option>
              </select>
            </div>
          </Group>
        </Select>
        <div
          className="alert alert-info"
          role="alert"
        >
          <Icon
            type="exclamation-circle"
          >
            <i
              className="fa fa-exclamation-circle fa-fw "
            />
          </Icon>
          The modification being copied to and/or from does not
                  have any segments.  The default segment speed of
                  15 km/h will be used.
                
        </div>
        <p>
          <Button
            block={true}
            onClick={[Function]}
            style="success"
          >
            <a
              className="btn btn-success btn-block"
              href="#"
              onClick={[Function]}
              tabIndex={0}
            >
              <Icon
                type="plus"
              >
                <i
                  className="fa fa-plus fa-fw "
                />
              </Icon>
               Copy into new timetable
            </a>
          </Button>
        </p>
      </div>
    </ModalBody>
  </CopyTimetable>
</Provider>
`;
