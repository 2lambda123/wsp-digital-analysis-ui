// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component > Modification > ModificationEditor calls replace when the variant changes 1`] = `
<ModificationEditor
  allPhaseFromTimetableStops={Object {}}
  allVariants={
    Array [
      "Default",
    ]
  }
  bundleId="1"
  extendFromEnd={true}
  feeds={
    Array [
      Object {
        "id": "1",
        "routes": Array [
          Object {
            "id": "route1",
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        ],
        "routesById": Object {
          "route1": Object {
            "id": "route1",
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [
                  Object {
                    "stop_id": "1",
                    "stop_lat": 36.9707,
                    "stop_lon": -122.0246,
                    "stop_name": "Santa Cruz",
                  },
                  Object {
                    "stop_id": "2",
                    "stop_lat": 37.049,
                    "stop_lon": -122.0279,
                    "stop_name": "Scotts Valley",
                  },
                ],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        },
        "stopsById": Object {
          "1": Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          "2": Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        },
      },
    ]
  }
  gtfsStops={Array []}
  isLoaded={true}
  lastStopDistanceFromStart={0}
  mapState={
    Object {
      "allowExtend": true,
      "extendFromEnd": true,
      "followRoad": true,
      "modificationId": "1234",
      "state": "add-trip-pattern",
    }
  }
  modification={
    Object {
      "bidirectional": false,
      "entries": Array [],
      "feed": "1",
      "id": "1234",
      "name": "Test Modification",
      "routes": Array [
        "route1",
      ],
      "segments": Array [],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "dwellTime": 10,
          "endTime": 57600,
          "friday": true,
          "headwaySecs": 900,
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "variants": Array [
        0,
      ],
    }
  }
  name="Test Modification"
  numberOfStops={0}
  remove={[Function]}
  replace={[Function]}
  routePatterns={
    Array [
      Object {
        "geometry": Object {
          "coordinates": Array [
            Array [
              -122.0246,
              36.9707,
            ],
            Array [
              -122.0279,
              37.049,
            ],
            Array [
              -121.9799,
              37.2299,
            ],
            Array [
              -121.9445,
              37.324,
            ],
            Array [
              -121.936,
              37.353,
            ],
            Array [
              -121.924,
              37.365,
            ],
          ],
          "type": "LineString",
        },
        "stops": Array [
          Object {
            "stop_id": "1",
            "stop_lat": 36.9707,
            "stop_lon": -122.0246,
            "stop_name": "Santa Cruz",
          },
          Object {
            "stop_id": "2",
            "stop_lat": 37.049,
            "stop_lon": -122.0279,
            "stop_name": "Scotts Valley",
          },
        ],
        "trips": Array [
          Object {
            "duration": 1234,
            "start_time": 12345,
            "trip_headsign": "To Downtown",
            "trip_id": "abcd",
            "trip_short_name": "The Express",
          },
        ],
      },
    ]
  }
  routeStops={
    Array [
      undefined,
    ]
  }
  scenarioTimetables={Array []}
  segmentDistances={Array []}
  selectedStops={
    Array [
      undefined,
    ]
  }
  setActiveTrips={[Function]}
  setMapState={[Function]}
  stops={Array []}
  type="add-trip-pattern"
  variants={
    Array [
      false,
    ]
  }
>
  <div
    className="ModificationDock"
  >
    <div
      className="ModificationDockTitle"
    >
      Test Modification
    </div>
    <div
      className="InnerDock"
    >
      <Body>
        <div
          className="panel-body"
        >
          <Text
            name="Modification Name"
            onChange={[Function]}
            value="Test Modification"
          >
            <Group
              id="modification-name-input-23"
              name="Modification Name"
              onChange={[Function]}
              value="Test Modification"
            >
              <div
                className="form-group"
              >
                <Input
                  id="modification-name-input-23"
                  name="Modification Name"
                  onChange={[Function]}
                  type="text"
                  value="Test Modification"
                >
                  <input
                    className="form-control"
                    id="modification-name-input-23"
                    name="Modification Name"
                    onChange={[Function]}
                    placeholder="Modification Name"
                    type="text"
                    value="Test Modification"
                  />
                </Input>
              </div>
            </Group>
          </Text>
          <Modification
            allPhaseFromTimetableStops={Object {}}
            allVariants={
              Array [
                "Default",
              ]
            }
            bundleId="1"
            extendFromEnd={true}
            feeds={
              Array [
                Object {
                  "id": "1",
                  "routes": Array [
                    Object {
                      "id": "route1",
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                  "routesById": Object {
                    "route1": Object {
                      "id": "route1",
                      "patterns": Array [
                        Object {
                          "geometry": Object {
                            "coordinates": Array [
                              Array [
                                -122.0246,
                                36.9707,
                              ],
                              Array [
                                -122.0279,
                                37.049,
                              ],
                              Array [
                                -121.9799,
                                37.2299,
                              ],
                              Array [
                                -121.9445,
                                37.324,
                              ],
                              Array [
                                -121.936,
                                37.353,
                              ],
                              Array [
                                -121.924,
                                37.365,
                              ],
                            ],
                            "type": "LineString",
                          },
                          "stops": Array [
                            Object {
                              "stop_id": "1",
                              "stop_lat": 36.9707,
                              "stop_lon": -122.0246,
                              "stop_name": "Santa Cruz",
                            },
                            Object {
                              "stop_id": "2",
                              "stop_lat": 37.049,
                              "stop_lon": -122.0279,
                              "stop_name": "Scotts Valley",
                            },
                          ],
                          "trips": Array [
                            Object {
                              "duration": 1234,
                              "start_time": 12345,
                              "trip_headsign": "To Downtown",
                              "trip_id": "abcd",
                              "trip_short_name": "The Express",
                            },
                          ],
                        },
                      ],
                    },
                  },
                  "stopsById": Object {
                    "1": Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    "2": Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  },
                },
              ]
            }
            gtfsStops={Array []}
            isLoaded={true}
            lastStopDistanceFromStart={0}
            mapState={
              Object {
                "allowExtend": true,
                "extendFromEnd": true,
                "followRoad": true,
                "modificationId": "1234",
                "state": "add-trip-pattern",
              }
            }
            modification={
              Object {
                "bidirectional": false,
                "entries": Array [],
                "feed": "1",
                "id": "1234",
                "name": "Test Modification",
                "routes": Array [
                  "route1",
                ],
                "segments": Array [],
                "showOnMap": false,
                "timetables": Array [
                  Object {
                    "dwellTime": 10,
                    "endTime": 57600,
                    "friday": true,
                    "headwaySecs": 900,
                    "monday": true,
                    "name": "Test timetable",
                    "patternTrips": Array [
                      "abcd",
                    ],
                    "saturday": false,
                    "segmentSpeeds": Array [],
                    "sourceTrip": "abcd",
                    "startTime": 28800,
                    "sunday": false,
                    "thursday": true,
                    "tuesday": true,
                    "wednesday": true,
                  },
                ],
                "trips": Array [
                  "abcd",
                ],
                "type": "add-trip-pattern",
                "variants": Array [
                  0,
                ],
              }
            }
            name="Test Modification"
            numberOfStops={0}
            remove={[Function]}
            replace={[Function]}
            replaceModification={[Function]}
            routePatterns={
              Array [
                Object {
                  "geometry": Object {
                    "coordinates": Array [
                      Array [
                        -122.0246,
                        36.9707,
                      ],
                      Array [
                        -122.0279,
                        37.049,
                      ],
                      Array [
                        -121.9799,
                        37.2299,
                      ],
                      Array [
                        -121.9445,
                        37.324,
                      ],
                      Array [
                        -121.936,
                        37.353,
                      ],
                      Array [
                        -121.924,
                        37.365,
                      ],
                    ],
                    "type": "LineString",
                  },
                  "stops": Array [
                    Object {
                      "stop_id": "1",
                      "stop_lat": 36.9707,
                      "stop_lon": -122.0246,
                      "stop_name": "Santa Cruz",
                    },
                    Object {
                      "stop_id": "2",
                      "stop_lat": 37.049,
                      "stop_lon": -122.0279,
                      "stop_name": "Scotts Valley",
                    },
                  ],
                  "trips": Array [
                    Object {
                      "duration": 1234,
                      "start_time": 12345,
                      "trip_headsign": "To Downtown",
                      "trip_id": "abcd",
                      "trip_short_name": "The Express",
                    },
                  ],
                },
              ]
            }
            routeStops={
              Array [
                undefined,
              ]
            }
            scenarioTimetables={Array []}
            segmentDistances={Array []}
            selectedStops={
              Array [
                undefined,
              ]
            }
            setActiveTrips={[Function]}
            setMapState={[Function]}
            stops={Array []}
            type="add-trip-pattern"
            update={[Function]}
            variants={
              Array [
                false,
              ]
            }
          >
            <AddTripPattern
              allPhaseFromTimetableStops={Object {}}
              allVariants={
                Array [
                  "Default",
                ]
              }
              bundleId="1"
              extendFromEnd={true}
              feeds={
                Array [
                  Object {
                    "id": "1",
                    "routes": Array [
                      Object {
                        "id": "route1",
                        "patterns": Array [
                          Object {
                            "geometry": Object {
                              "coordinates": Array [
                                Array [
                                  -122.0246,
                                  36.9707,
                                ],
                                Array [
                                  -122.0279,
                                  37.049,
                                ],
                                Array [
                                  -121.9799,
                                  37.2299,
                                ],
                                Array [
                                  -121.9445,
                                  37.324,
                                ],
                                Array [
                                  -121.936,
                                  37.353,
                                ],
                                Array [
                                  -121.924,
                                  37.365,
                                ],
                              ],
                              "type": "LineString",
                            },
                            "stops": Array [
                              Object {
                                "stop_id": "1",
                                "stop_lat": 36.9707,
                                "stop_lon": -122.0246,
                                "stop_name": "Santa Cruz",
                              },
                              Object {
                                "stop_id": "2",
                                "stop_lat": 37.049,
                                "stop_lon": -122.0279,
                                "stop_name": "Scotts Valley",
                              },
                            ],
                            "trips": Array [
                              Object {
                                "duration": 1234,
                                "start_time": 12345,
                                "trip_headsign": "To Downtown",
                                "trip_id": "abcd",
                                "trip_short_name": "The Express",
                              },
                            ],
                          },
                        ],
                      },
                    ],
                    "routesById": Object {
                      "route1": Object {
                        "id": "route1",
                        "patterns": Array [
                          Object {
                            "geometry": Object {
                              "coordinates": Array [
                                Array [
                                  -122.0246,
                                  36.9707,
                                ],
                                Array [
                                  -122.0279,
                                  37.049,
                                ],
                                Array [
                                  -121.9799,
                                  37.2299,
                                ],
                                Array [
                                  -121.9445,
                                  37.324,
                                ],
                                Array [
                                  -121.936,
                                  37.353,
                                ],
                                Array [
                                  -121.924,
                                  37.365,
                                ],
                              ],
                              "type": "LineString",
                            },
                            "stops": Array [
                              Object {
                                "stop_id": "1",
                                "stop_lat": 36.9707,
                                "stop_lon": -122.0246,
                                "stop_name": "Santa Cruz",
                              },
                              Object {
                                "stop_id": "2",
                                "stop_lat": 37.049,
                                "stop_lon": -122.0279,
                                "stop_name": "Scotts Valley",
                              },
                            ],
                            "trips": Array [
                              Object {
                                "duration": 1234,
                                "start_time": 12345,
                                "trip_headsign": "To Downtown",
                                "trip_id": "abcd",
                                "trip_short_name": "The Express",
                              },
                            ],
                          },
                        ],
                      },
                    },
                    "stopsById": Object {
                      "1": Object {
                        "stop_id": "1",
                        "stop_lat": 36.9707,
                        "stop_lon": -122.0246,
                        "stop_name": "Santa Cruz",
                      },
                      "2": Object {
                        "stop_id": "2",
                        "stop_lat": 37.049,
                        "stop_lon": -122.0279,
                        "stop_name": "Scotts Valley",
                      },
                    },
                  },
                ]
              }
              gtfsStops={Array []}
              isLoaded={true}
              lastStopDistanceFromStart={0}
              mapState={
                Object {
                  "allowExtend": true,
                  "extendFromEnd": true,
                  "followRoad": true,
                  "modificationId": "1234",
                  "state": "add-trip-pattern",
                }
              }
              modification={
                Object {
                  "bidirectional": false,
                  "entries": Array [],
                  "feed": "1",
                  "id": "1234",
                  "name": "Test Modification",
                  "routes": Array [
                    "route1",
                  ],
                  "segments": Array [],
                  "showOnMap": false,
                  "timetables": Array [
                    Object {
                      "dwellTime": 10,
                      "endTime": 57600,
                      "friday": true,
                      "headwaySecs": 900,
                      "monday": true,
                      "name": "Test timetable",
                      "patternTrips": Array [
                        "abcd",
                      ],
                      "saturday": false,
                      "segmentSpeeds": Array [],
                      "sourceTrip": "abcd",
                      "startTime": 28800,
                      "sunday": false,
                      "thursday": true,
                      "tuesday": true,
                      "wednesday": true,
                    },
                  ],
                  "trips": Array [
                    "abcd",
                  ],
                  "type": "add-trip-pattern",
                  "variants": Array [
                    0,
                  ],
                }
              }
              name="Test Modification"
              numberOfStops={0}
              remove={[Function]}
              replace={[Function]}
              replaceModification={[Function]}
              routePatterns={
                Array [
                  Object {
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "stops": Array [
                      Object {
                        "stop_id": "1",
                        "stop_lat": 36.9707,
                        "stop_lon": -122.0246,
                        "stop_name": "Santa Cruz",
                      },
                      Object {
                        "stop_id": "2",
                        "stop_lat": 37.049,
                        "stop_lon": -122.0279,
                        "stop_name": "Scotts Valley",
                      },
                    ],
                    "trips": Array [
                      Object {
                        "duration": 1234,
                        "start_time": 12345,
                        "trip_headsign": "To Downtown",
                        "trip_id": "abcd",
                        "trip_short_name": "The Express",
                      },
                    ],
                  },
                ]
              }
              routeStops={
                Array [
                  undefined,
                ]
              }
              scenarioTimetables={Array []}
              segmentDistances={Array []}
              selectedStops={
                Array [
                  undefined,
                ]
              }
              setActiveTrips={[Function]}
              setMapState={[Function]}
              stops={Array []}
              type="add-trip-pattern"
              update={[Function]}
              variants={
                Array [
                  false,
                ]
              }
            >
              <div>
                <EditAlignment
                  extendFromEnd={true}
                  mapState={
                    Object {
                      "allowExtend": true,
                      "extendFromEnd": true,
                      "followRoad": true,
                      "modificationId": "1234",
                      "state": "add-trip-pattern",
                    }
                  }
                  modification={
                    Object {
                      "bidirectional": false,
                      "entries": Array [],
                      "feed": "1",
                      "id": "1234",
                      "name": "Test Modification",
                      "routes": Array [
                        "route1",
                      ],
                      "segments": Array [],
                      "showOnMap": false,
                      "timetables": Array [
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        },
                      ],
                      "trips": Array [
                        "abcd",
                      ],
                      "type": "add-trip-pattern",
                      "variants": Array [
                        0,
                      ],
                    }
                  }
                  setMapState={[Function]}
                  update={[Function]}
                >
                  <div>
                    <Button
                      block={true}
                      onClick={[Function]}
                      style="warning"
                    >
                      <a
                        className="btn btn-warning btn-block"
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          type="stop-circle"
                        >
                          <i
                            className="fa fa-stop-circle fa-fw "
                          />
                        </Icon>
                         
                        Stop editing
                      </a>
                    </Button>
                    <Checkbox
                      defaultChecked={true}
                      label="Create stops automatically"
                      onChange={[Function]}
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="create-stops-automatically-input-24"
                        >
                          <input
                            defaultChecked={true}
                            id="create-stops-automatically-input-24"
                            onChange={[Function]}
                            type="checkbox"
                          />
                           
                          Create stops automatically
                        </label>
                      </div>
                    </Checkbox>
                    <Number
                      label="Stop spacing"
                      onChange={[Function]}
                      units="meters"
                      value={400}
                    >
                      <Group
                        id="stop-spacing-input-25"
                        label="Stop spacing"
                        onChange={[Function]}
                        units="meters"
                        value={400}
                      >
                        <div
                          className="form-group"
                        >
                          <label
                            htmlFor="stop-spacing-input-25"
                          >
                            Stop spacing
                          </label>
                          <Input
                            id="stop-spacing-input-25"
                            label="Stop spacing"
                            min={0}
                            onChange={[Function]}
                            onWheel={[Function]}
                            type="number"
                            units="meters"
                            value={400}
                          >
                            <div
                              className="InputWithUnits"
                            >
                              <input
                                className="form-control"
                                id="stop-spacing-input-25"
                                min={0}
                                onChange={[Function]}
                                onWheel={[Function]}
                                placeholder="meters"
                                type="number"
                                value={400}
                              />
                              <span
                                className="InputUnits"
                              >
                                meters
                              </span>
                            </div>
                          </Input>
                        </div>
                      </Group>
                    </Number>
                    <Checkbox
                      checked={false}
                      disabled={false}
                      label="Bidirectional"
                      onChange={[Function]}
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="bidirectional-input-26"
                        >
                          <input
                            checked={false}
                            disabled={false}
                            id="bidirectional-input-26"
                            onChange={[Function]}
                            type="checkbox"
                          />
                           
                          Bidirectional
                        </label>
                      </div>
                    </Checkbox>
                    <Checkbox
                      defaultChecked={true}
                      label="Extend from end"
                      onChange={[Function]}
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="extend-from-end-input-27"
                        >
                          <input
                            defaultChecked={true}
                            id="extend-from-end-input-27"
                            onChange={[Function]}
                            type="checkbox"
                          />
                           
                          Extend from end
                        </label>
                      </div>
                    </Checkbox>
                    <Checkbox
                      defaultChecked={true}
                      label="Follow streets"
                      onChange={[Function]}
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="follow-streets-input-28"
                        >
                          <input
                            defaultChecked={true}
                            id="follow-streets-input-28"
                            onChange={[Function]}
                            type="checkbox"
                          />
                           
                          Follow streets
                        </label>
                      </div>
                    </Checkbox>
                  </div>
                </EditAlignment>
                <Timetables
                  allPhaseFromTimetableStops={Object {}}
                  bidirectional={false}
                  modificationStops={Array []}
                  numberOfStops={0}
                  scenarioTimetables={Array []}
                  segmentDistances={Array []}
                  timetables={
                    Array [
                      Object {
                        "dwellTime": 10,
                        "endTime": 57600,
                        "friday": true,
                        "headwaySecs": 900,
                        "monday": true,
                        "name": "Test timetable",
                        "patternTrips": Array [
                          "abcd",
                        ],
                        "saturday": false,
                        "segmentSpeeds": Array [],
                        "sourceTrip": "abcd",
                        "startTime": 28800,
                        "sunday": false,
                        "thursday": true,
                        "tuesday": true,
                        "wednesday": true,
                      },
                    ]
                  }
                  update={[Function]}
                >
                  <div>
                    <Timetable
                      allPhaseFromTimetableStops={Object {}}
                      bidirectional={false}
                      modificationStops={Array []}
                      numberOfStops={0}
                      remove={[Function]}
                      scenarioTimetables={Array []}
                      segmentDistances={Array []}
                      timetable={
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        }
                      }
                      update={[Function]}
                    >
                      <section
                        className="panel panel-default inner-panel"
                      >
                        <a
                          className="panel-heading clearfix"
                          onClick={[Function]}
                          style={
                            Object {
                              "cursor": "pointer",
                            }
                          }
                          tabIndex={0}
                        >
                          <Icon
                            type="caret-down"
                          >
                            <i
                              className="fa fa-caret-down fa-fw "
                            />
                          </Icon>
                          <strong>
                             
                            Test timetable
                          </strong>
                        </a>
                        <div
                          className="panel-body"
                        >
                          <Text
                            name="Name"
                            onChange={[Function]}
                            value="Test timetable"
                          >
                            <Group
                              id="name-input-29"
                              name="Name"
                              onChange={[Function]}
                              value="Test timetable"
                            >
                              <div
                                className="form-group"
                              >
                                <Input
                                  id="name-input-29"
                                  name="Name"
                                  onChange={[Function]}
                                  type="text"
                                  value="Test timetable"
                                >
                                  <input
                                    className="form-control"
                                    id="name-input-29"
                                    name="Name"
                                    onChange={[Function]}
                                    placeholder="Name"
                                    type="text"
                                    value="Test timetable"
                                  />
                                </Input>
                              </div>
                            </Group>
                          </Text>
                          <TimetableEntry
                            allPhaseFromTimetableStops={Object {}}
                            bidirectional={false}
                            modificationStops={Array []}
                            scenarioTimetables={Array []}
                            timetable={
                              Object {
                                "dwellTime": 10,
                                "endTime": 57600,
                                "friday": true,
                                "headwaySecs": 900,
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              }
                            }
                            update={[Function]}
                          >
                            <div>
                              <Days
                                setDay={[Function]}
                                timetable={
                                  Object {
                                    "dwellTime": 10,
                                    "endTime": 57600,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  }
                                }
                              >
                                <div
                                  className="form-inline"
                                >
                                  <Checkbox
                                    checked={true}
                                    label="Mon"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="mon-input-30"
                                      >
                                        <input
                                          checked={true}
                                          id="mon-input-30"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Mon
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Checkbox
                                    checked={true}
                                    label="Tue"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="tue-input-31"
                                      >
                                        <input
                                          checked={true}
                                          id="tue-input-31"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Tue
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Checkbox
                                    checked={true}
                                    label="Wed"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="wed-input-32"
                                      >
                                        <input
                                          checked={true}
                                          id="wed-input-32"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Wed
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Checkbox
                                    checked={true}
                                    label="Thu"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="thu-input-33"
                                      >
                                        <input
                                          checked={true}
                                          id="thu-input-33"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Thu
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Checkbox
                                    checked={true}
                                    label="Fri"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="fri-input-34"
                                      >
                                        <input
                                          checked={true}
                                          id="fri-input-34"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Fri
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Checkbox
                                    checked={false}
                                    label="Sat"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="sat-input-35"
                                      >
                                        <input
                                          checked={false}
                                          id="sat-input-35"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Sat
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Checkbox
                                    checked={false}
                                    label="Sun"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="sun-input-36"
                                      >
                                        <input
                                          checked={false}
                                          id="sun-input-36"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Sun
                                      </label>
                                    </div>
                                  </Checkbox>
                                </div>
                              </Days>
                              <Number
                                label="Frequency"
                                onChange={[Function]}
                                units="minutes"
                                value={15}
                              >
                                <Group
                                  id="frequency-input-37"
                                  label="Frequency"
                                  onChange={[Function]}
                                  units="minutes"
                                  value={15}
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label
                                      htmlFor="frequency-input-37"
                                    >
                                      Frequency
                                    </label>
                                    <Input
                                      id="frequency-input-37"
                                      label="Frequency"
                                      min={0}
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="number"
                                      units="minutes"
                                      value={15}
                                    >
                                      <div
                                        className="InputWithUnits"
                                      >
                                        <input
                                          className="form-control"
                                          id="frequency-input-37"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          placeholder="minutes"
                                          type="number"
                                          value={15}
                                        />
                                        <span
                                          className="InputUnits"
                                        >
                                          minutes
                                        </span>
                                      </div>
                                    </Input>
                                  </div>
                                </Group>
                              </Number>
                              <TimePicker
                                label="Start time"
                                onChange={[Function]}
                                value={28800}
                              >
                                <Text
                                  label="Start time"
                                  onChange={[Function]}
                                  onWheel={[Function]}
                                  type="time"
                                  value="08:00"
                                >
                                  <Group
                                    id="start-time-input-38"
                                    label="Start time"
                                    onChange={[Function]}
                                    onWheel={[Function]}
                                    type="time"
                                    value="08:00"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <label
                                        htmlFor="start-time-input-38"
                                      >
                                        Start time
                                      </label>
                                      <Input
                                        id="start-time-input-38"
                                        label="Start time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        value="08:00"
                                      >
                                        <input
                                          className="form-control"
                                          id="start-time-input-38"
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          placeholder="Start time"
                                          type="time"
                                          value="08:00"
                                        />
                                      </Input>
                                    </div>
                                  </Group>
                                </Text>
                              </TimePicker>
                              <TimePicker
                                label="End time"
                                onChange={[Function]}
                                value={57600}
                              >
                                <Text
                                  label="End time"
                                  onChange={[Function]}
                                  onWheel={[Function]}
                                  type="time"
                                  value="16:00"
                                >
                                  <Group
                                    id="end-time-input-39"
                                    label="End time"
                                    onChange={[Function]}
                                    onWheel={[Function]}
                                    type="time"
                                    value="16:00"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <label
                                        htmlFor="end-time-input-39"
                                      >
                                        End time
                                      </label>
                                      <Input
                                        id="end-time-input-39"
                                        label="End time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        value="16:00"
                                      >
                                        <input
                                          className="form-control"
                                          id="end-time-input-39"
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          placeholder="End time"
                                          type="time"
                                          value="16:00"
                                        />
                                      </Input>
                                    </div>
                                  </Group>
                                </Text>
                              </TimePicker>
                              <Checkbox
                                disabled={false}
                                label="Times are exact"
                                onChange={[Function]}
                              >
                                <div
                                  className="checkbox"
                                >
                                  <label
                                    htmlFor="times-are-exact-input-40"
                                  >
                                    <input
                                      disabled={false}
                                      id="times-are-exact-input-40"
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                     
                                    Times are exact
                                  </label>
                                </div>
                              </Checkbox>
                              <Phase
                                availableTimetables={Array []}
                                disabled={false}
                                modificationStops={Array []}
                                timetableHeadway={900}
                                update={[Function]}
                              >
                                <div>
                                  <Group
                                    label="Phase at stop"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <label
                                        htmlFor="phase-at-stop-input-41"
                                      >
                                        Phase at stop
                                      </label>
                                      <Select
                                        addLabelText="Add \\"{label}\\"?"
                                        arrowRenderer={[Function]}
                                        autosize={true}
                                        backspaceRemoves={true}
                                        backspaceToRemoveMessage="Press backspace to remove {label}"
                                        clearAllText="Clear all"
                                        clearRenderer={[Function]}
                                        clearValueText="Clear value"
                                        clearable={true}
                                        deleteRemoves={true}
                                        delimiter=","
                                        disabled={false}
                                        escapeClearsValue={true}
                                        filterOptions={[Function]}
                                        ignoreAccents={true}
                                        ignoreCase={true}
                                        inputProps={Object {}}
                                        isLoading={false}
                                        joinValues={false}
                                        labelKey="label"
                                        matchPos="any"
                                        matchProp="any"
                                        menuBuffer={0}
                                        menuRenderer={[Function]}
                                        multi={false}
                                        name="Phase at stop"
                                        noResultsText="No results found"
                                        onBlurResetsInput={true}
                                        onChange={[Function]}
                                        onCloseResetsInput={true}
                                        openAfterFocus={false}
                                        optionComponent={[Function]}
                                        options={Array []}
                                        pageSize={5}
                                        placeholder="Phase at stop"
                                        required={false}
                                        scrollMenuIntoView={true}
                                        searchable={true}
                                        simpleValue={false}
                                        tabSelectsValue={true}
                                        valueComponent={[Function]}
                                        valueKey="value"
                                      >
                                        <div
                                          className="Select Select--single is-searchable"
                                        >
                                          <div
                                            className="Select-control"
                                            onKeyDown={[Function]}
                                            onMouseDown={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                          >
                                            <span
                                              className="Select-multi-value-wrapper"
                                              id="react-select-3--value"
                                            >
                                              <div
                                                className="Select-placeholder"
                                              >
                                                Phase at stop
                                              </div>
                                              <AutosizeInput
                                                aria-activedescendant="react-select-3--value"
                                                aria-expanded="false"
                                                aria-haspopup="false"
                                                aria-owns=""
                                                className="Select-input"
                                                minWidth="5"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                required={false}
                                                role="combobox"
                                                value=""
                                              />
                                            </span>
                                            <span
                                              className="Select-arrow-zone"
                                              onMouseDown={[Function]}
                                            >
                                              <span
                                                className="Select-arrow"
                                                onMouseDown={[Function]}
                                              />
                                            </span>
                                          </div>
                                        </div>
                                      </Select>
                                    </div>
                                  </Group>
                                </div>
                              </Phase>
                            </div>
                          </TimetableEntry>
                          <SegmentSpeeds
                            dwellTime={10}
                            numberOfStops={0}
                            segmentDistances={Array []}
                            segmentSpeeds={Array []}
                            update={[Function]}
                          >
                            <div>
                              <Number
                                label="Dwell time"
                                onChange={[Function]}
                                units="seconds"
                                value={10}
                              >
                                <Group
                                  id="dwell-time-input-42"
                                  label="Dwell time"
                                  onChange={[Function]}
                                  units="seconds"
                                  value={10}
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label
                                      htmlFor="dwell-time-input-42"
                                    >
                                      Dwell time
                                    </label>
                                    <Input
                                      id="dwell-time-input-42"
                                      label="Dwell time"
                                      min={0}
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="number"
                                      units="seconds"
                                      value={10}
                                    >
                                      <div
                                        className="InputWithUnits"
                                      >
                                        <input
                                          className="form-control"
                                          id="dwell-time-input-42"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          placeholder="seconds"
                                          type="number"
                                          value={10}
                                        />
                                        <span
                                          className="InputUnits"
                                        >
                                          seconds
                                        </span>
                                      </div>
                                    </Input>
                                  </div>
                                </Group>
                              </Number>
                              <Number
                                label="Average segment speed"
                                min={1}
                                onChange={[Function]}
                                units="km/h"
                                value={15}
                              >
                                <Group
                                  id="average-segment-speed-input-43"
                                  label="Average segment speed"
                                  min={1}
                                  onChange={[Function]}
                                  units="km/h"
                                  value={15}
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label
                                      htmlFor="average-segment-speed-input-43"
                                    >
                                      Average segment speed
                                    </label>
                                    <Input
                                      id="average-segment-speed-input-43"
                                      label="Average segment speed"
                                      min={1}
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="number"
                                      units="km/h"
                                      value={15}
                                    >
                                      <div
                                        className="InputWithUnits"
                                      >
                                        <input
                                          className="form-control"
                                          id="average-segment-speed-input-43"
                                          min={1}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          placeholder="km/h"
                                          type="number"
                                          value={15}
                                        />
                                        <span
                                          className="InputUnits"
                                        >
                                          km/h
                                        </span>
                                      </div>
                                    </Input>
                                  </div>
                                </Group>
                              </Number>
                              <Number
                                label="Total travel time"
                                min={1}
                                onChange={[Function]}
                                units="minutes"
                                value={0}
                              >
                                <Group
                                  id="total-travel-time-input-44"
                                  label="Total travel time"
                                  min={1}
                                  onChange={[Function]}
                                  units="minutes"
                                  value={0}
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <label
                                      htmlFor="total-travel-time-input-44"
                                    >
                                      Total travel time
                                    </label>
                                    <Input
                                      id="total-travel-time-input-44"
                                      label="Total travel time"
                                      min={1}
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="number"
                                      units="minutes"
                                      value={0}
                                    >
                                      <div
                                        className="InputWithUnits"
                                      >
                                        <input
                                          className="form-control"
                                          id="total-travel-time-input-44"
                                          min={1}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          placeholder="minutes"
                                          type="number"
                                          value={0}
                                        />
                                        <span
                                          className="InputUnits"
                                        >
                                          minutes
                                        </span>
                                      </div>
                                    </Input>
                                  </div>
                                </Group>
                              </Number>
                              <Collapsible
                                defaultExpanded={false}
                                title="Set individual segment speeds"
                              >
                                <div>
                                  <div
                                    aria-level={3}
                                    role="heading"
                                  >
                                    <a
                                      aria-expanded={false}
                                      className="CollapsibleButton"
                                      onClick={[Function]}
                                      role="button"
                                      tabIndex={0}
                                    >
                                      <Icon
                                        type="caret-right"
                                      >
                                        <i
                                          className="fa fa-caret-right fa-fw "
                                        />
                                      </Icon>
                                      <strong>
                                        Set individual segment speeds
                                      </strong>
                                    </a>
                                  </div>
                                </div>
                              </Collapsible>
                            </div>
                          </SegmentSpeeds>
                          <Button
                            block={true}
                            onClick={[Function]}
                            style="danger"
                            title="Delete timetable"
                          >
                            <a
                              className="btn btn-danger btn-block"
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                              title="Delete timetable"
                            >
                              <Icon
                                type="close"
                              >
                                <i
                                  className="fa fa-close fa-fw "
                                />
                              </Icon>
                               Delete Timetable
                            </a>
                          </Button>
                        </div>
                      </section>
                    </Timetable>
                    <Button
                      block={true}
                      onClick={[Function]}
                      style="success"
                    >
                      <a
                        className="btn btn-success btn-block"
                        href="#"
                        onClick={[Function]}
                        tabIndex={0}
                      >
                        <Icon
                          type="plus"
                        >
                          <i
                            className="fa fa-plus fa-fw "
                          />
                        </Icon>
                         Add timetable
                      </a>
                    </Button>
                  </div>
                </Timetables>
              </div>
            </AddTripPattern>
          </Modification>
          <Variants
            activeVariants={
              Array [
                false,
              ]
            }
            allVariants={
              Array [
                "Default",
              ]
            }
            modificationId="1234"
            setVariant={[Function]}
          >
            <div>
              <legend>
                Active in variants
              </legend>
              <div
                className="form-inline"
              >
                <Checkbox
                  checked={true}
                  label={1}
                  onChange={[Function]}
                  title="Default"
                >
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="1-input-45"
                    >
                      <input
                        checked={true}
                        id="1-input-45"
                        onChange={[Function]}
                        title="Default"
                        type="checkbox"
                      />
                       
                      1
                    </label>
                  </div>
                </Checkbox>
              </div>
            </div>
          </Variants>
          <Button
            block={true}
            className="pull-right"
            onClick={[Function]}
            style="danger"
            title="Delete Modification"
          >
            <a
              className="btn btn-danger btn-block pull-right"
              href="#"
              onClick={[Function]}
              tabIndex={0}
              title="Delete Modification"
            >
              <Icon
                type="close"
              >
                <i
                  className="fa fa-close fa-fw "
                />
              </Icon>
               Delete Modification
            </a>
          </Button>
        </div>
      </Body>
    </div>
  </div>
</ModificationEditor>
`;

exports[`Component > Modification > ModificationEditor render just the title if not loaded 1`] = `
<div
  className="ModificationDock"
>
  <div
    className="ModificationDockTitle"
  >
    Test Modification
  </div>
</div>
`;

exports[`Component > Modification > ModificationEditor renders correctly 1`] = `
<div
  className="ModificationDock"
>
  <div
    className="ModificationDockTitle"
  >
    Test Modification
  </div>
  <div
    className="InnerDock"
  >
    <div
      className="panel-body"
    >
      <div
        className="form-group"
      >
        <input
          className="form-control"
          id="modification-name-input-0"
          name="Modification Name"
          onChange={[Function]}
          placeholder="Modification Name"
          type="text"
          value="Test Modification"
        />
      </div>
      <div>
        <div>
          <a
            className="btn btn-warning btn-block"
            href="#"
            onClick={[Function]}
            tabIndex={0}
          >
            <i
              className="fa fa-stop-circle fa-fw "
            />
             
            Stop editing
          </a>
          <div
            className="checkbox"
          >
            <label
              htmlFor="create-stops-automatically-input-1"
            >
              <input
                defaultChecked={true}
                id="create-stops-automatically-input-1"
                onChange={[Function]}
                type="checkbox"
              />
               
              Create stops automatically
            </label>
          </div>
          <div
            className="form-group"
          >
            <label
              htmlFor="stop-spacing-input-2"
            >
              Stop spacing
            </label>
            <div
              className="InputWithUnits"
            >
              <input
                className="form-control"
                id="stop-spacing-input-2"
                min={0}
                name={undefined}
                onChange={[Function]}
                onWheel={[Function]}
                placeholder="meters"
                type="number"
                value={400}
              />
              <span
                className="InputUnits"
              >
                meters
              </span>
            </div>
          </div>
          <div
            className="checkbox"
          >
            <label
              htmlFor="bidirectional-input-3"
            >
              <input
                checked={false}
                disabled={false}
                id="bidirectional-input-3"
                onChange={[Function]}
                type="checkbox"
              />
               
              Bidirectional
            </label>
          </div>
          <div
            className="checkbox"
          >
            <label
              htmlFor="extend-from-end-input-4"
            >
              <input
                defaultChecked={true}
                id="extend-from-end-input-4"
                onChange={[Function]}
                type="checkbox"
              />
               
              Extend from end
            </label>
          </div>
          <div
            className="checkbox"
          >
            <label
              htmlFor="follow-streets-input-5"
            >
              <input
                defaultChecked={true}
                id="follow-streets-input-5"
                onChange={[Function]}
                type="checkbox"
              />
               
              Follow streets
            </label>
          </div>
        </div>
        <div>
          <section
            className="panel panel-default inner-panel"
          >
            <a
              className="panel-heading clearfix"
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              tabIndex={0}
            >
              <i
                className="fa fa-caret-down fa-fw "
              />
              <strong>
                 
                Test timetable
              </strong>
            </a>
            <div
              className="panel-body"
            >
              <div
                className="form-group"
              >
                <input
                  className="form-control"
                  id="name-input-6"
                  name="Name"
                  onChange={[Function]}
                  placeholder="Name"
                  type="text"
                  value="Test timetable"
                />
              </div>
              <div>
                <div
                  className="form-inline"
                >
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="mon-input-7"
                    >
                      <input
                        checked={true}
                        id="mon-input-7"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Mon
                    </label>
                  </div>
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="tue-input-8"
                    >
                      <input
                        checked={true}
                        id="tue-input-8"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Tue
                    </label>
                  </div>
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="wed-input-9"
                    >
                      <input
                        checked={true}
                        id="wed-input-9"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Wed
                    </label>
                  </div>
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="thu-input-10"
                    >
                      <input
                        checked={true}
                        id="thu-input-10"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Thu
                    </label>
                  </div>
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="fri-input-11"
                    >
                      <input
                        checked={true}
                        id="fri-input-11"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Fri
                    </label>
                  </div>
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="sat-input-12"
                    >
                      <input
                        checked={false}
                        id="sat-input-12"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Sat
                    </label>
                  </div>
                  <div
                    className="checkbox"
                  >
                    <label
                      htmlFor="sun-input-13"
                    >
                      <input
                        checked={false}
                        id="sun-input-13"
                        onChange={[Function]}
                        type="checkbox"
                      />
                       
                      Sun
                    </label>
                  </div>
                </div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="frequency-input-14"
                  >
                    Frequency
                  </label>
                  <div
                    className="InputWithUnits"
                  >
                    <input
                      className="form-control"
                      id="frequency-input-14"
                      min={0}
                      name={undefined}
                      onChange={[Function]}
                      onWheel={[Function]}
                      placeholder="minutes"
                      type="number"
                      value={15}
                    />
                    <span
                      className="InputUnits"
                    >
                      minutes
                    </span>
                  </div>
                </div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="start-time-input-15"
                  >
                    Start time
                  </label>
                  <input
                    className="form-control"
                    id="start-time-input-15"
                    name={undefined}
                    onChange={[Function]}
                    onWheel={[Function]}
                    placeholder="Start time"
                    type="time"
                    value="08:00"
                  />
                </div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="end-time-input-16"
                  >
                    End time
                  </label>
                  <input
                    className="form-control"
                    id="end-time-input-16"
                    name={undefined}
                    onChange={[Function]}
                    onWheel={[Function]}
                    placeholder="End time"
                    type="time"
                    value="16:00"
                  />
                </div>
                <div
                  className="checkbox"
                >
                  <label
                    htmlFor="times-are-exact-input-17"
                  >
                    <input
                      checked={undefined}
                      disabled={false}
                      id="times-are-exact-input-17"
                      onChange={[Function]}
                      type="checkbox"
                    />
                     
                    Times are exact
                  </label>
                </div>
                <div>
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="phase-at-stop-input-18"
                    >
                      Phase at stop
                    </label>
                    <div
                      className="Select Select--single is-searchable"
                      style={undefined}
                    >
                      <div
                        className="Select-control"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        style={undefined}
                      >
                        <span
                          className="Select-multi-value-wrapper"
                          id="react-select-2--value"
                        >
                          <div
                            className="Select-placeholder"
                          >
                            Phase at stop
                          </div>
                        </span>
                        <span
                          className="Select-arrow-zone"
                          onMouseDown={[Function]}
                        >
                          <span
                            className="Select-arrow"
                            onMouseDown={[Function]}
                          />
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="dwell-time-input-19"
                  >
                    Dwell time
                  </label>
                  <div
                    className="InputWithUnits"
                  >
                    <input
                      className="form-control"
                      id="dwell-time-input-19"
                      min={0}
                      name={undefined}
                      onChange={[Function]}
                      onWheel={[Function]}
                      placeholder="seconds"
                      type="number"
                      value={10}
                    />
                    <span
                      className="InputUnits"
                    >
                      seconds
                    </span>
                  </div>
                </div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="average-segment-speed-input-20"
                  >
                    Average segment speed
                  </label>
                  <div
                    className="InputWithUnits"
                  >
                    <input
                      className="form-control"
                      id="average-segment-speed-input-20"
                      min={1}
                      name={undefined}
                      onChange={[Function]}
                      onWheel={[Function]}
                      placeholder="km/h"
                      type="number"
                      value={15}
                    />
                    <span
                      className="InputUnits"
                    >
                      km/h
                    </span>
                  </div>
                </div>
                <div
                  className="form-group"
                >
                  <label
                    htmlFor="total-travel-time-input-21"
                  >
                    Total travel time
                  </label>
                  <div
                    className="InputWithUnits"
                  >
                    <input
                      className="form-control"
                      id="total-travel-time-input-21"
                      min={1}
                      name={undefined}
                      onChange={[Function]}
                      onWheel={[Function]}
                      placeholder="minutes"
                      type="number"
                      value={0}
                    />
                    <span
                      className="InputUnits"
                    >
                      minutes
                    </span>
                  </div>
                </div>
                <div>
                  <div
                    aria-level={3}
                    role="heading"
                  >
                    <a
                      aria-expanded={false}
                      className="CollapsibleButton"
                      onClick={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <i
                        className="fa fa-caret-right fa-fw "
                      />
                      <strong>
                        Set individual segment speeds
                      </strong>
                    </a>
                  </div>
                </div>
              </div>
              <a
                className="btn btn-danger btn-block"
                href="#"
                onClick={[Function]}
                tabIndex={0}
                title="Delete timetable"
              >
                <i
                  className="fa fa-close fa-fw "
                />
                 Delete Timetable
              </a>
            </div>
          </section>
          <a
            className="btn btn-success btn-block"
            href="#"
            onClick={[Function]}
            tabIndex={0}
          >
            <i
              className="fa fa-plus fa-fw "
            />
             Add timetable
          </a>
        </div>
      </div>
      <div>
        <legend>
          Active in variants
        </legend>
        <div
          className="form-inline"
        >
          <div
            className="checkbox"
          >
            <label
              htmlFor="1-input-22"
            >
              <input
                checked={true}
                id="1-input-22"
                onChange={[Function]}
                title="Default"
                type="checkbox"
              />
               
              1
            </label>
          </div>
        </div>
      </div>
      <a
        className="btn btn-danger btn-block pull-right"
        href="#"
        onClick={[Function]}
        tabIndex={0}
        title="Delete Modification"
      >
        <i
          className="fa fa-close fa-fw "
        />
         Delete Modification
      </a>
    </div>
  </div>
</div>
`;
