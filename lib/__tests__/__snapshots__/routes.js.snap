// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Routes should render 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Routes
    history={
      Object {
        "canGo": [Function],
        "createHref": [Function],
        "createKey": [Function],
        "createLocation": [Function],
        "createPath": [Function],
        "getCurrentLocation": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "listen": [Function],
        "listenBefore": [Function],
        "push": [Function],
        "replace": [Function],
        "transitionTo": [Function],
        "unsubscribe": [Function],
      }
    }
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "canGo": [Function],
          "createHref": [Function],
          "createKey": [Function],
          "createLocation": [Function],
          "createPath": [Function],
          "getCurrentLocation": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "listen": [Function],
          "listenBefore": [Function],
          "push": [Function],
          "replace": [Function],
          "transitionTo": [Function],
          "unsubscribe": [Function],
        }
      }
      render={[Function]}
    >
      <RouterContext
        components={
          Array [
            [Function],
            [Function],
          ]
        }
        createElement={[Function]}
        location={
          Object {
            "action": "POP",
            "hash": "",
            "key": null,
            "pathname": "/",
            "query": Object {},
            "search": "",
            "state": undefined,
          }
        }
        params={Object {}}
        router={
          Object {
            "canGo": [Function],
            "createHref": [Function],
            "createKey": [Function],
            "createLocation": [Function],
            "createPath": [Function],
            "getCurrentLocation": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "isActive": [Function],
            "listen": [Function],
            "listenBefore": [Function],
            "location": Object {
              "action": "POP",
              "hash": "",
              "key": null,
              "pathname": "/",
              "query": Object {},
              "search": "",
              "state": undefined,
            },
            "params": Object {},
            "push": [Function],
            "replace": [Function],
            "routes": Array [
              Object {
                "childRoutes": Array [
                  Object {
                    "component": [Function],
                    "path": "projects/create",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "create",
                          },
                          Object {
                            "component": [Function],
                            "path": ":bundleId",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "bundles",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "upload",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "opportunities",
                      },
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios/create",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "projects/:projectId",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-modifications",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-shapefile",
                      },
                      Object {
                        "component": [Function],
                        "path": "modifications/:modificationId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/:variantId",
                      },
                      Object {
                        "component": [Function],
                        "path": "regional",
                      },
                      Object {
                        "component": [Function],
                        "path": "regional/:regionalAnalysisId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/regional/:regionalAnalysisId",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "scenarios/:scenarioId",
                  },
                  Object {
                    "component": [Function],
                    "path": "*",
                  },
                ],
                "component": [Function],
                "indexRoute": Object {
                  "component": [Function],
                },
                "path": "/",
              },
              Object {
                "component": [Function],
              },
            ],
            "setRouteLeaveHook": [Function],
            "transitionTo": [Function],
            "unsubscribe": [Function],
          }
        }
        routes={
          Array [
            Object {
              "childRoutes": Array [
                Object {
                  "component": [Function],
                  "path": "projects/create",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "create",
                        },
                        Object {
                          "component": [Function],
                          "path": ":bundleId",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "bundles",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "upload",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "opportunities",
                    },
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios/create",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "projects/:projectId",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-modifications",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-shapefile",
                    },
                    Object {
                      "component": [Function],
                      "path": "modifications/:modificationId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/:variantId",
                    },
                    Object {
                      "component": [Function],
                      "path": "regional",
                    },
                    Object {
                      "component": [Function],
                      "path": "regional/:regionalAnalysisId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/regional/:regionalAnalysisId",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "scenarios/:scenarioId",
                },
                Object {
                  "component": [Function],
                  "path": "*",
                },
              ],
              "component": [Function],
              "indexRoute": Object {
                "component": [Function],
              },
              "path": "/",
            },
            Object {
              "component": [Function],
            },
          ]
        }
      >
        <Connect(Application)
          location={
            Object {
              "action": "POP",
              "hash": "",
              "key": null,
              "pathname": "/",
              "query": Object {},
              "search": "",
              "state": undefined,
            }
          }
          params={Object {}}
          route={
            Object {
              "childRoutes": Array [
                Object {
                  "component": [Function],
                  "path": "projects/create",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "create",
                        },
                        Object {
                          "component": [Function],
                          "path": ":bundleId",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "bundles",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "upload",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "opportunities",
                    },
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios",
                    },
                    Object {
                      "component": [Function],
                      "path": "scenarios/create",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "projects/:projectId",
                },
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "edit",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-modifications",
                    },
                    Object {
                      "component": [Function],
                      "path": "import-shapefile",
                    },
                    Object {
                      "component": [Function],
                      "path": "modifications/:modificationId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/:variantId",
                    },
                    Object {
                      "component": [Function],
                      "path": "regional",
                    },
                    Object {
                      "component": [Function],
                      "path": "regional/:regionalAnalysisId",
                    },
                    Object {
                      "component": [Function],
                      "path": "analysis/regional/:regionalAnalysisId",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "scenarios/:scenarioId",
                },
                Object {
                  "component": [Function],
                  "path": "*",
                },
              ],
              "component": [Function],
              "indexRoute": Object {
                "component": [Function],
              },
              "path": "/",
            }
          }
          routeParams={Object {}}
          router={
            Object {
              "canGo": [Function],
              "createHref": [Function],
              "createKey": [Function],
              "createLocation": [Function],
              "createPath": [Function],
              "getCurrentLocation": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "isActive": [Function],
              "listen": [Function],
              "listenBefore": [Function],
              "location": Object {
                "action": "POP",
                "hash": "",
                "key": null,
                "pathname": "/",
                "query": Object {},
                "search": "",
                "state": undefined,
              },
              "params": Object {},
              "push": [Function],
              "replace": [Function],
              "routes": Array [
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "projects/create",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "create",
                            },
                            Object {
                              "component": [Function],
                              "path": ":bundleId",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "bundles",
                        },
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "upload",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "opportunities",
                        },
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios/create",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "projects/:projectId",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-modifications",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-shapefile",
                        },
                        Object {
                          "component": [Function],
                          "path": "modifications/:modificationId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/:variantId",
                        },
                        Object {
                          "component": [Function],
                          "path": "regional",
                        },
                        Object {
                          "component": [Function],
                          "path": "regional/:regionalAnalysisId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/regional/:regionalAnalysisId",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "scenarios/:scenarioId",
                    },
                    Object {
                      "component": [Function],
                      "path": "*",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "/",
                },
                Object {
                  "component": [Function],
                },
              ],
              "setRouteLeaveHook": [Function],
              "transitionTo": [Function],
              "unsubscribe": [Function],
            }
          }
          routes={
            Array [
              Object {
                "childRoutes": Array [
                  Object {
                    "component": [Function],
                    "path": "projects/create",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "create",
                          },
                          Object {
                            "component": [Function],
                            "path": ":bundleId",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "bundles",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "upload",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "opportunities",
                      },
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios/create",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "projects/:projectId",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-modifications",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-shapefile",
                      },
                      Object {
                        "component": [Function],
                        "path": "modifications/:modificationId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/:variantId",
                      },
                      Object {
                        "component": [Function],
                        "path": "regional",
                      },
                      Object {
                        "component": [Function],
                        "path": "regional/:regionalAnalysisId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/regional/:regionalAnalysisId",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "scenarios/:scenarioId",
                  },
                  Object {
                    "component": [Function],
                    "path": "*",
                  },
                ],
                "component": [Function],
                "indexRoute": Object {
                  "component": [Function],
                },
                "path": "/",
              },
              Object {
                "component": [Function],
              },
            ]
          }
        >
          <Application
            activeModificationId="1234"
            bundleId="1"
            center={
              Object {
                "lat": 38.8886,
                "lon": -77.043,
              }
            }
            clearError={[Function]}
            error=""
            errorMessage=""
            hasError={false}
            hasScenario={true}
            loadProject={[Function]}
            location={
              Object {
                "action": "POP",
                "hash": "",
                "key": null,
                "pathname": "/",
                "query": Object {},
                "search": "",
                "state": undefined,
              }
            }
            mapComponents={Array []}
            modificationBounds={
              Object {
                "_northEast": Object {
                  "lat": 37.365,
                  "lng": -121.924,
                },
                "_southWest": Object {
                  "lat": 36.9707,
                  "lng": -122.0279,
                },
              }
            }
            outstandingRequests={0}
            params={Object {}}
            projectId="1"
            push={[Function]}
            route={
              Object {
                "childRoutes": Array [
                  Object {
                    "component": [Function],
                    "path": "projects/create",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "create",
                          },
                          Object {
                            "component": [Function],
                            "path": ":bundleId",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "bundles",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "upload",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "opportunities",
                      },
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios",
                      },
                      Object {
                        "component": [Function],
                        "path": "scenarios/create",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "projects/:projectId",
                  },
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "edit",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-modifications",
                      },
                      Object {
                        "component": [Function],
                        "path": "import-shapefile",
                      },
                      Object {
                        "component": [Function],
                        "path": "modifications/:modificationId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/:variantId",
                      },
                      Object {
                        "component": [Function],
                        "path": "regional",
                      },
                      Object {
                        "component": [Function],
                        "path": "regional/:regionalAnalysisId",
                      },
                      Object {
                        "component": [Function],
                        "path": "analysis/regional/:regionalAnalysisId",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "scenarios/:scenarioId",
                  },
                  Object {
                    "component": [Function],
                    "path": "*",
                  },
                ],
                "component": [Function],
                "indexRoute": Object {
                  "component": [Function],
                },
                "path": "/",
              }
            }
            routeParams={Object {}}
            router={
              Object {
                "canGo": [Function],
                "createHref": [Function],
                "createKey": [Function],
                "createLocation": [Function],
                "createPath": [Function],
                "getCurrentLocation": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "isActive": [Function],
                "listen": [Function],
                "listenBefore": [Function],
                "location": Object {
                  "action": "POP",
                  "hash": "",
                  "key": null,
                  "pathname": "/",
                  "query": Object {},
                  "search": "",
                  "state": undefined,
                },
                "params": Object {},
                "push": [Function],
                "replace": [Function],
                "routes": Array [
                  Object {
                    "childRoutes": Array [
                      Object {
                        "component": [Function],
                        "path": "projects/create",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "create",
                              },
                              Object {
                                "component": [Function],
                                "path": ":bundleId",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "bundles",
                          },
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "upload",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "opportunities",
                          },
                          Object {
                            "component": [Function],
                            "path": "edit",
                          },
                          Object {
                            "component": [Function],
                            "path": "scenarios",
                          },
                          Object {
                            "component": [Function],
                            "path": "scenarios/create",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "projects/:projectId",
                      },
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "edit",
                          },
                          Object {
                            "component": [Function],
                            "path": "import-modifications",
                          },
                          Object {
                            "component": [Function],
                            "path": "import-shapefile",
                          },
                          Object {
                            "component": [Function],
                            "path": "modifications/:modificationId",
                          },
                          Object {
                            "component": [Function],
                            "path": "analysis",
                          },
                          Object {
                            "component": [Function],
                            "path": "analysis/:variantId",
                          },
                          Object {
                            "component": [Function],
                            "path": "regional",
                          },
                          Object {
                            "component": [Function],
                            "path": "regional/:regionalAnalysisId",
                          },
                          Object {
                            "component": [Function],
                            "path": "analysis/regional/:regionalAnalysisId",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "scenarios/:scenarioId",
                      },
                      Object {
                        "component": [Function],
                        "path": "*",
                      },
                    ],
                    "component": [Function],
                    "indexRoute": Object {
                      "component": [Function],
                    },
                    "path": "/",
                  },
                  Object {
                    "component": [Function],
                  },
                ],
                "setRouteLeaveHook": [Function],
                "transitionTo": [Function],
                "unsubscribe": [Function],
              }
            }
            routes={
              Array [
                Object {
                  "childRoutes": Array [
                    Object {
                      "component": [Function],
                      "path": "projects/create",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "create",
                            },
                            Object {
                              "component": [Function],
                              "path": ":bundleId",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "bundles",
                        },
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "upload",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "opportunities",
                        },
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios",
                        },
                        Object {
                          "component": [Function],
                          "path": "scenarios/create",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "projects/:projectId",
                    },
                    Object {
                      "childRoutes": Array [
                        Object {
                          "component": [Function],
                          "path": "edit",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-modifications",
                        },
                        Object {
                          "component": [Function],
                          "path": "import-shapefile",
                        },
                        Object {
                          "component": [Function],
                          "path": "modifications/:modificationId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/:variantId",
                        },
                        Object {
                          "component": [Function],
                          "path": "regional",
                        },
                        Object {
                          "component": [Function],
                          "path": "regional/:regionalAnalysisId",
                        },
                        Object {
                          "component": [Function],
                          "path": "analysis/regional/:regionalAnalysisId",
                        },
                      ],
                      "component": [Function],
                      "indexRoute": Object {
                        "component": [Function],
                      },
                      "path": "scenarios/:scenarioId",
                    },
                    Object {
                      "component": [Function],
                      "path": "*",
                    },
                  ],
                  "component": [Function],
                  "indexRoute": Object {
                    "component": [Function],
                  },
                  "path": "/",
                },
                Object {
                  "component": [Function],
                },
              ]
            }
            scenarioId="1"
            scenarioIsLoaded={true}
            setMapCenter={[Function]}
            variants={
              Array [
                "Default",
              ]
            }
            zoom={12}
          >
            <div
              id="editor"
            >
              <Sidebar
                currentPath="/"
                outstandingRequests={0}
                projectId="1"
                scenarioId="1"
              >
                <div
                  className="Sidebar"
                >
                  <Link
                    className="Sidebar-logo"
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    title="Regions"
                    to="/"
                  >
                    <a
                      className="Sidebar-logo"
                      href="/"
                      onClick={[Function]}
                      style={Object {}}
                      title="Regions"
                    />
                  </Link>
                  <div>
                    <SidebarNavItem
                      active={
                        Array [
                          "/",
                        ]
                      }
                      href="/projects/1"
                      icon="cubes"
                      text="Projects"
                    >
                      <Tip
                        className="Sidebar-navItem active"
                        tip="Projects"
                      >
                        <span
                          className="Tip Sidebar-navItem active"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/projects/1"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/projects/1"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="cubes"
                                text="Projects"
                              >
                                <span>
                                  <Icon
                                    type="cubes"
                                  >
                                    <i
                                      className="fa fa-cubes fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    Projects
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                    <SidebarNavItem
                      active={null}
                      href="/projects/1/edit"
                      icon="gear"
                      text="Shared Settings"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="Shared Settings"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/projects/1/edit"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/projects/1/edit"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="gear"
                                text="Shared Settings"
                              >
                                <span>
                                  <Icon
                                    type="gear"
                                  >
                                    <i
                                      className="fa fa-gear fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    Shared Settings
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                    <SidebarNavItem
                      active={null}
                      href="/projects/1/bundles"
                      icon="database"
                      text="GTFS Bundles"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="GTFS Bundles"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/projects/1/bundles"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/projects/1/bundles"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="database"
                                text="GTFS Bundles"
                              >
                                <span>
                                  <Icon
                                    type="database"
                                  >
                                    <i
                                      className="fa fa-database fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    GTFS Bundles
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                    <SidebarNavItem
                      active={null}
                      href="/projects/1/opportunities"
                      icon="th"
                      text="Opportunity Datasets"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="Opportunity Datasets"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/projects/1/opportunities"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/projects/1/opportunities"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="th"
                                text="Opportunity Datasets"
                              >
                                <span>
                                  <Icon
                                    type="th"
                                  >
                                    <i
                                      className="fa fa-th fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    Opportunity Datasets
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                  </div>
                  <div>
                    <SidebarNavItem
                      active={null}
                      href="/scenarios/1"
                      icon="pencil"
                      text="Edit Scenarios"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="Edit Scenarios"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/scenarios/1"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/scenarios/1"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="pencil"
                                text="Edit Scenarios"
                              >
                                <span>
                                  <Icon
                                    type="pencil"
                                  >
                                    <i
                                      className="fa fa-pencil fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    Edit Scenarios
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                    <SidebarNavItem
                      active={null}
                      href="/scenarios/1/analysis"
                      icon="area-chart"
                      text="Analyze Scenarios"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="Analyze Scenarios"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/scenarios/1/analysis"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/scenarios/1/analysis"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="area-chart"
                                text="Analyze Scenarios"
                              >
                                <span>
                                  <Icon
                                    type="area-chart"
                                  >
                                    <i
                                      className="fa fa-area-chart fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    Analyze Scenarios
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                    <SidebarNavItem
                      active={null}
                      href="/scenarios/1/regional"
                      icon="server"
                      text="Regional Analysis"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="Regional Analysis"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <Link
                            className="Sidebar-navItem-contents"
                            onlyActiveOnIndex={false}
                            style={Object {}}
                            to="/scenarios/1/regional"
                          >
                            <a
                              className="Sidebar-navItem-contents"
                              href="/scenarios/1/regional"
                              onClick={[Function]}
                              style={Object {}}
                            >
                              <ItemContents
                                icon="server"
                                text="Regional Analysis"
                              >
                                <span>
                                  <Icon
                                    type="server"
                                  >
                                    <i
                                      className="fa fa-server fa-fw "
                                    />
                                  </Icon>
                                  <span
                                    className="Sidebar-navItem-text"
                                  >
                                     
                                    Regional Analysis
                                  </span>
                                </span>
                              </ItemContents>
                            </a>
                          </Link>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                  </div>
                  <div
                    className="Sidebar-bottom"
                  >
                    <SidebarNavItem
                      href="http://docs.analysis.conveyal.com/"
                      icon="question-circle"
                      text="Help and Documentation"
                    >
                      <Tip
                        className="Sidebar-navItem"
                        tip="Help and Documentation"
                      >
                        <span
                          className="Tip Sidebar-navItem"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <a
                            className="Sidebar-navItem-contents"
                            href="http://docs.analysis.conveyal.com/"
                            target="_blank"
                          >
                            <ItemContents
                              icon="question-circle"
                              text="Help and Documentation"
                            >
                              <span>
                                <Icon
                                  type="question-circle"
                                >
                                  <i
                                    className="fa fa-question-circle fa-fw "
                                  />
                                </Icon>
                                <span
                                  className="Sidebar-navItem-text"
                                >
                                   
                                  Help and Documentation
                                </span>
                              </span>
                            </ItemContents>
                          </a>
                        </span>
                      </Tip>
                    </SidebarNavItem>
                  </div>
                </div>
              </Sidebar>
              <div
                className="Fullscreen "
              >
                <Map
                  animate={false}
                  bounds={
                    Object {
                      "_northEast": Object {
                        "lat": 37.365,
                        "lng": -121.924,
                      },
                      "_southWest": Object {
                        "lat": 36.9707,
                        "lng": -122.0279,
                      },
                    }
                  }
                  center={
                    Object {
                      "lat": 38.8886,
                      "lon": -77.043,
                    }
                  }
                  useFlyTo={false}
                  zoom={12}
                >
                  <div>
                    <TileLayer
                      attribution="<a href=\\"http://www.openstreetmap.org/copyright\\">OpenStreetMap</a> contributors, &copy; <a href='https://www.mapbox.com/about/maps/'>Mapbox</a>"
                      url="mock.url/tile"
                      zIndex={-10}
                    />
                    <TileLayer
                      url="https://api.mapbox.com/v4/mapbox.light/{z}/{x}/{y}.png?access_token=your-access-token"
                      zIndex={40}
                    />
                    <Connect(ScenarioMap)
                      zIndex={50}
                    >
                      <ScenarioMap
                        activeModification={
                          Object {
                            "bidirectional": false,
                            "description": "Mock description",
                            "entries": Array [],
                            "feed": "1",
                            "id": "1234",
                            "name": "Test Modification",
                            "routes": Array [
                              "route1",
                            ],
                            "segments": Array [
                              {
                            "type": "Feature",
                            "properties": {},
                            "geometry": {
                              "type": "LineString",
                              "coordinates": [
                                [
                                  "-122.02460000",
                                  "36.97070000"
                                ],
                                [
                                  "-122.02790000",
                                  "37.04900000"
                                ],
                                [
                                  "-121.97990000",
                                  "37.22990000"
                                ],
                                [
                                  "-121.94450000",
                                  "37.32400000"
                                ],
                                [
                                  "-121.93600000",
                                  "37.35300000"
                                ],
                                [
                                  "-121.92400000",
                                  "37.36500000"
                                ]
                              ]
                            }
                          },
                            ],
                            "showOnMap": false,
                            "timetables": Array [
                              Object {
                                "dwellTime": 10,
                                "endTime": 57600,
                                "friday": true,
                                "headwaySecs": 900,
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              },
                            ],
                            "trips": Array [
                              "abcd",
                            ],
                            "type": "add-trip-pattern",
                            "variants": Array [
                              true,
                            ],
                          }
                        }
                        activeModificationFeed={
                          Object {
                            "id": "1",
                            "routes": Array [
                              Object {
                                "patterns": Array [
                                  Object {
                                    "geometry": Object {
                                      "coordinates": Array [
                                        Array [
                                          -122.0246,
                                          36.9707,
                                        ],
                                        Array [
                                          -122.0279,
                                          37.049,
                                        ],
                                        Array [
                                          -121.9799,
                                          37.2299,
                                        ],
                                        Array [
                                          -121.9445,
                                          37.324,
                                        ],
                                        Array [
                                          -121.936,
                                          37.353,
                                        ],
                                        Array [
                                          -121.924,
                                          37.365,
                                        ],
                                      ],
                                      "type": "LineString",
                                    },
                                    "stops": Array [
                                      Object {
                                        "stop_id": "1",
                                        "stop_lat": 36.9707,
                                        "stop_lon": -122.0246,
                                        "stop_name": "Santa Cruz",
                                      },
                                      Object {
                                        "stop_id": "2",
                                        "stop_lat": 37.049,
                                        "stop_lon": -122.0279,
                                        "stop_name": "Scotts Valley",
                                      },
                                    ],
                                    "trips": Array [
                                      Object {
                                        "duration": 1234,
                                        "start_time": 12345,
                                        "trip_headsign": "To Downtown",
                                        "trip_id": "abcd",
                                        "trip_short_name": "The Express",
                                      },
                                    ],
                                  },
                                ],
                                "route_id": "route1",
                              },
                            ],
                            "stops": Array [
                              Object {
                                "stop_id": "1",
                                "stop_lat": 36.9707,
                                "stop_lon": -122.0246,
                                "stop_name": "Santa Cruz",
                              },
                              Object {
                                "stop_id": "2",
                                "stop_lat": 37.049,
                                "stop_lon": -122.0279,
                                "stop_name": "Scotts Valley",
                              },
                            ],
                            "stopsById": Object {
                              "1": Object {
                                "stop_id": "1",
                                "stop_lat": 36.9707,
                                "stop_lon": -122.0246,
                                "stop_name": "Santa Cruz",
                              },
                              "2": Object {
                                "stop_id": "2",
                                "stop_lat": 37.049,
                                "stop_lon": -122.0279,
                                "stop_name": "Scotts Valley",
                              },
                            },
                          }
                        }
                        bundleId="1"
                        centerLonLat={
                          Object {
                            "lat": 38.90124,
                            "lon": -77.015615,
                          }
                        }
                        feeds={
                          Array [
                            Object {
                              "id": "1",
                              "routes": Array [
                                Object {
                                  "patterns": Array [
                                    Object {
                                      "geometry": Object {
                                        "coordinates": Array [
                                          Array [
                                            -122.0246,
                                            36.9707,
                                          ],
                                          Array [
                                            -122.0279,
                                            37.049,
                                          ],
                                          Array [
                                            -121.9799,
                                            37.2299,
                                          ],
                                          Array [
                                            -121.9445,
                                            37.324,
                                          ],
                                          Array [
                                            -121.936,
                                            37.353,
                                          ],
                                          Array [
                                            -121.924,
                                            37.365,
                                          ],
                                        ],
                                        "type": "LineString",
                                      },
                                      "stops": Array [
                                        Object {
                                          "stop_id": "1",
                                          "stop_lat": 36.9707,
                                          "stop_lon": -122.0246,
                                          "stop_name": "Santa Cruz",
                                        },
                                        Object {
                                          "stop_id": "2",
                                          "stop_lat": 37.049,
                                          "stop_lon": -122.0279,
                                          "stop_name": "Scotts Valley",
                                        },
                                      ],
                                      "trips": Array [
                                        Object {
                                          "duration": 1234,
                                          "start_time": 12345,
                                          "trip_headsign": "To Downtown",
                                          "trip_id": "abcd",
                                          "trip_short_name": "The Express",
                                        },
                                      ],
                                    },
                                  ],
                                  "route_id": "route1",
                                },
                              ],
                              "stops": Array [
                                Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              ],
                              "stopsById": Object {
                                "1": Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                "2": Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              },
                            },
                          ]
                        }
                        feedsById={
                          Object {
                            "1": Object {
                              "id": "1",
                              "routes": Array [
                                Object {
                                  "patterns": Array [
                                    Object {
                                      "geometry": Object {
                                        "coordinates": Array [
                                          Array [
                                            -122.0246,
                                            36.9707,
                                          ],
                                          Array [
                                            -122.0279,
                                            37.049,
                                          ],
                                          Array [
                                            -121.9799,
                                            37.2299,
                                          ],
                                          Array [
                                            -121.9445,
                                            37.324,
                                          ],
                                          Array [
                                            -121.936,
                                            37.353,
                                          ],
                                          Array [
                                            -121.924,
                                            37.365,
                                          ],
                                        ],
                                        "type": "LineString",
                                      },
                                      "stops": Array [
                                        Object {
                                          "stop_id": "1",
                                          "stop_lat": 36.9707,
                                          "stop_lon": -122.0246,
                                          "stop_name": "Santa Cruz",
                                        },
                                        Object {
                                          "stop_id": "2",
                                          "stop_lat": 37.049,
                                          "stop_lon": -122.0279,
                                          "stop_name": "Scotts Valley",
                                        },
                                      ],
                                      "trips": Array [
                                        Object {
                                          "duration": 1234,
                                          "start_time": 12345,
                                          "trip_headsign": "To Downtown",
                                          "trip_id": "abcd",
                                          "trip_short_name": "The Express",
                                        },
                                      ],
                                    },
                                  ],
                                  "route_id": "route1",
                                },
                              ],
                              "stops": Array [
                                Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              ],
                              "stopsById": Object {
                                "1": Object {
                                  "stop_id": "1",
                                  "stop_lat": 36.9707,
                                  "stop_lon": -122.0246,
                                  "stop_name": "Santa Cruz",
                                },
                                "2": Object {
                                  "stop_id": "2",
                                  "stop_lat": 37.049,
                                  "stop_lon": -122.0279,
                                  "stop_name": "Scotts Valley",
                                },
                              },
                            },
                          }
                        }
                        mapState={
                          Object {
                            "activeTrips": Array [],
                            "center": Object {
                              "lat": 38.8886,
                              "lon": -77.043,
                            },
                            "components": Array [],
                            "zoom": 12,
                          }
                        }
                        modificationsOnMap={Array []}
                        qualifiedStops={Array []}
                        replaceModification={[Function]}
                        setMapState={[Function]}
                        zIndex={50}
                      >
                        <FeatureGroup>
                          <div
                            style={
                              Object {
                                "display": "none",
                              }
                            }
                          >
                            }
                          </div>
                        </FeatureGroup>
                      </ScenarioMap>
                    </Connect(ScenarioMap)>
                  </div>
                </Map>
              </div>
              <div
                className="ApplicationDock "
              >
                <Connect(SelectProject)
                  location={
                    Object {
                      "action": "POP",
                      "hash": "",
                      "key": null,
                      "pathname": "/",
                      "query": Object {},
                      "search": "",
                      "state": undefined,
                    }
                  }
                  params={Object {}}
                  route={
                    Object {
                      "component": [Function],
                    }
                  }
                  routeParams={Object {}}
                  router={
                    Object {
                      "canGo": [Function],
                      "createHref": [Function],
                      "createKey": [Function],
                      "createLocation": [Function],
                      "createPath": [Function],
                      "getCurrentLocation": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "isActive": [Function],
                      "listen": [Function],
                      "listenBefore": [Function],
                      "location": Object {
                        "action": "POP",
                        "hash": "",
                        "key": null,
                        "pathname": "/",
                        "query": Object {},
                        "search": "",
                        "state": undefined,
                      },
                      "params": Object {},
                      "push": [Function],
                      "replace": [Function],
                      "routes": Array [
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "projects/create",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "childRoutes": Array [
                                    Object {
                                      "component": [Function],
                                      "path": "create",
                                    },
                                    Object {
                                      "component": [Function],
                                      "path": ":bundleId",
                                    },
                                  ],
                                  "component": [Function],
                                  "indexRoute": Object {
                                    "component": [Function],
                                  },
                                  "path": "bundles",
                                },
                                Object {
                                  "childRoutes": Array [
                                    Object {
                                      "component": [Function],
                                      "path": "upload",
                                    },
                                  ],
                                  "component": [Function],
                                  "indexRoute": Object {
                                    "component": [Function],
                                  },
                                  "path": "opportunities",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios/create",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "projects/:projectId",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-modifications",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-shapefile",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "modifications/:modificationId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/:variantId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "regional",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "regional/:regionalAnalysisId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/regional/:regionalAnalysisId",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "scenarios/:scenarioId",
                            },
                            Object {
                              "component": [Function],
                              "path": "*",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "/",
                        },
                        Object {
                          "component": [Function],
                        },
                      ],
                      "setRouteLeaveHook": [Function],
                      "transitionTo": [Function],
                      "unsubscribe": [Function],
                    }
                  }
                  routes={
                    Array [
                      Object {
                        "childRoutes": Array [
                          Object {
                            "component": [Function],
                            "path": "projects/create",
                          },
                          Object {
                            "childRoutes": Array [
                              Object {
                                "childRoutes": Array [
                                  Object {
                                    "component": [Function],
                                    "path": "create",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": ":bundleId",
                                  },
                                ],
                                "component": [Function],
                                "indexRoute": Object {
                                  "component": [Function],
                                },
                                "path": "bundles",
                              },
                              Object {
                                "childRoutes": Array [
                                  Object {
                                    "component": [Function],
                                    "path": "upload",
                                  },
                                ],
                                "component": [Function],
                                "indexRoute": Object {
                                  "component": [Function],
                                },
                                "path": "opportunities",
                              },
                              Object {
                                "component": [Function],
                                "path": "edit",
                              },
                              Object {
                                "component": [Function],
                                "path": "scenarios",
                              },
                              Object {
                                "component": [Function],
                                "path": "scenarios/create",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "projects/:projectId",
                          },
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "edit",
                              },
                              Object {
                                "component": [Function],
                                "path": "import-modifications",
                              },
                              Object {
                                "component": [Function],
                                "path": "import-shapefile",
                              },
                              Object {
                                "component": [Function],
                                "path": "modifications/:modificationId",
                              },
                              Object {
                                "component": [Function],
                                "path": "analysis",
                              },
                              Object {
                                "component": [Function],
                                "path": "analysis/:variantId",
                              },
                              Object {
                                "component": [Function],
                                "path": "regional",
                              },
                              Object {
                                "component": [Function],
                                "path": "regional/:regionalAnalysisId",
                              },
                              Object {
                                "component": [Function],
                                "path": "analysis/regional/:regionalAnalysisId",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "scenarios/:scenarioId",
                          },
                          Object {
                            "component": [Function],
                            "path": "*",
                          },
                        ],
                        "component": [Function],
                        "indexRoute": Object {
                          "component": [Function],
                        },
                        "path": "/",
                      },
                      Object {
                        "component": [Function],
                      },
                    ]
                  }
                >
                  <SelectProject
                    loadAllProjects={[Function]}
                    location={
                      Object {
                        "action": "POP",
                        "hash": "",
                        "key": null,
                        "pathname": "/",
                        "query": Object {},
                        "search": "",
                        "state": undefined,
                      }
                    }
                    params={Object {}}
                    projects={
                      Array [
                        Object {
                          "bounds": Object {
                            "east": -76,
                            "north": 39,
                            "south": 38,
                            "west": -77,
                          },
                          "description": "Project description",
                          "id": "1",
                          "name": "Mock Project",
                          "opportunityDatasets": Array [
                            Object {
                              "dataSource": "lodes-data-2014",
                              "key": "Workers_total",
                              "name": "Workers total",
                            },
                          ],
                          "r5Version": "v3.2.0",
                        },
                      ]
                    }
                    push={[Function]}
                    route={
                      Object {
                        "component": [Function],
                      }
                    }
                    routeParams={Object {}}
                    router={
                      Object {
                        "canGo": [Function],
                        "createHref": [Function],
                        "createKey": [Function],
                        "createLocation": [Function],
                        "createPath": [Function],
                        "getCurrentLocation": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "isActive": [Function],
                        "listen": [Function],
                        "listenBefore": [Function],
                        "location": Object {
                          "action": "POP",
                          "hash": "",
                          "key": null,
                          "pathname": "/",
                          "query": Object {},
                          "search": "",
                          "state": undefined,
                        },
                        "params": Object {},
                        "push": [Function],
                        "replace": [Function],
                        "routes": Array [
                          Object {
                            "childRoutes": Array [
                              Object {
                                "component": [Function],
                                "path": "projects/create",
                              },
                              Object {
                                "childRoutes": Array [
                                  Object {
                                    "childRoutes": Array [
                                      Object {
                                        "component": [Function],
                                        "path": "create",
                                      },
                                      Object {
                                        "component": [Function],
                                        "path": ":bundleId",
                                      },
                                    ],
                                    "component": [Function],
                                    "indexRoute": Object {
                                      "component": [Function],
                                    },
                                    "path": "bundles",
                                  },
                                  Object {
                                    "childRoutes": Array [
                                      Object {
                                        "component": [Function],
                                        "path": "upload",
                                      },
                                    ],
                                    "component": [Function],
                                    "indexRoute": Object {
                                      "component": [Function],
                                    },
                                    "path": "opportunities",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "edit",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "scenarios",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "scenarios/create",
                                  },
                                ],
                                "component": [Function],
                                "indexRoute": Object {
                                  "component": [Function],
                                },
                                "path": "projects/:projectId",
                              },
                              Object {
                                "childRoutes": Array [
                                  Object {
                                    "component": [Function],
                                    "path": "edit",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "import-modifications",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "import-shapefile",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "modifications/:modificationId",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "analysis",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "analysis/:variantId",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "regional",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "regional/:regionalAnalysisId",
                                  },
                                  Object {
                                    "component": [Function],
                                    "path": "analysis/regional/:regionalAnalysisId",
                                  },
                                ],
                                "component": [Function],
                                "indexRoute": Object {
                                  "component": [Function],
                                },
                                "path": "scenarios/:scenarioId",
                              },
                              Object {
                                "component": [Function],
                                "path": "*",
                              },
                            ],
                            "component": [Function],
                            "indexRoute": Object {
                              "component": [Function],
                            },
                            "path": "/",
                          },
                          Object {
                            "component": [Function],
                          },
                        ],
                        "setRouteLeaveHook": [Function],
                        "transitionTo": [Function],
                        "unsubscribe": [Function],
                      }
                    }
                    routes={
                      Array [
                        Object {
                          "childRoutes": Array [
                            Object {
                              "component": [Function],
                              "path": "projects/create",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "childRoutes": Array [
                                    Object {
                                      "component": [Function],
                                      "path": "create",
                                    },
                                    Object {
                                      "component": [Function],
                                      "path": ":bundleId",
                                    },
                                  ],
                                  "component": [Function],
                                  "indexRoute": Object {
                                    "component": [Function],
                                  },
                                  "path": "bundles",
                                },
                                Object {
                                  "childRoutes": Array [
                                    Object {
                                      "component": [Function],
                                      "path": "upload",
                                    },
                                  ],
                                  "component": [Function],
                                  "indexRoute": Object {
                                    "component": [Function],
                                  },
                                  "path": "opportunities",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "scenarios/create",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "projects/:projectId",
                            },
                            Object {
                              "childRoutes": Array [
                                Object {
                                  "component": [Function],
                                  "path": "edit",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-modifications",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "import-shapefile",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "modifications/:modificationId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/:variantId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "regional",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "regional/:regionalAnalysisId",
                                },
                                Object {
                                  "component": [Function],
                                  "path": "analysis/regional/:regionalAnalysisId",
                                },
                              ],
                              "component": [Function],
                              "indexRoute": Object {
                                "component": [Function],
                              },
                              "path": "scenarios/:scenarioId",
                            },
                            Object {
                              "component": [Function],
                              "path": "*",
                            },
                          ],
                          "component": [Function],
                          "indexRoute": Object {
                            "component": [Function],
                          },
                          "path": "/",
                        },
                        Object {
                          "component": [Function],
                        },
                      ]
                    }
                  >
                    <div
                      className="InnerDock"
                    >
                      <Body>
                        <div
                          className="panel-body"
                        >
                          <div
                            className="WelcomeTitle"
                          >
                            <p
                              style={
                                Object {
                                  "textAlign": "center",
                                }
                              }
                            >
                              welcome to
                            </p>
                            <span
                              className="logo"
                              to="/"
                            >
                              conveyal analysis
                            </span>
                          </div>
                          <Group>
                            <div
                              className="form-group"
                            >
                              <Button
                                block={true}
                                onClick={[Function]}
                                style="success"
                              >
                                <a
                                  className="btn btn-success btn-block"
                                  href="#"
                                  onClick={[Function]}
                                  tabIndex={0}
                                >
                                  <Icon
                                    type="cubes"
                                  >
                                    <i
                                      className="fa fa-cubes fa-fw "
                                    />
                                  </Icon>
                                   
                                  Set up a new region
                                </a>
                              </Button>
                            </div>
                          </Group>
                          <div>
                            <p
                              style={
                                Object {
                                  "textAlign": "center",
                                }
                              }
                            >
                              or go to an existing region
                            </p>
                            <div
                              className="list-group"
                            >
                              <Link
                                className="list-group-item"
                                onlyActiveOnIndex={false}
                                style={Object {}}
                                title="Go to region"
                                to="/projects/1"
                              >
                                <a
                                  className="list-group-item"
                                  href="/projects/1"
                                  onClick={[Function]}
                                  style={Object {}}
                                  title="Go to region"
                                >
                                  <div>
                                    <p>
                                      <Icon
                                        className="fa-spin"
                                        type="spinner"
                                      >
                                        <i
                                          className="fa fa-spinner fa-fw fa-spin"
                                        />
                                      </Icon>
                                       
                                      Mock Project
                                    </p>
                                    <em />
                                  </div>
                                </a>
                              </Link>
                            </div>
                          </div>
                        </div>
                      </Body>
                    </div>
                  </SelectProject>
                </Connect(SelectProject)>
              </div>
            </div>
          </Application>
        </Connect(Application)>
      </RouterContext>
    </Router>
  </Routes>
</Provider>
`;
