// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`actions > scenario create should work 1`] = `
Object {
  "payload": Object {
    "next": [Function],
    "options": Object {
      "body": Object {
        "bundleId": "1",
        "name": "test",
        "projectId": "1",
        "variants": Array [
          "Default",
        ],
      },
      "method": "post",
    },
    "url": "/api/scenario",
  },
  "type": "fetch",
}
`;

exports[`actions > scenario create should work 2`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "bundleId": "1",
          "name": "test",
          "projectId": "1",
          "variants": Array [
            "Default",
          ],
        },
        "method": "post",
      },
      "url": "/api/scenario",
    },
    "type": "increment outstanding fetches",
  },
  Promise {},
]
`;

exports[`actions > scenario create should work 3`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "bundleId": "1",
          "name": "test",
          "projectId": "1",
          "variants": Array [
            "Default",
          ],
        },
        "method": "post",
      },
      "url": "/api/scenario",
    },
    "type": "decrement outstanding fetches",
  },
  Array [
    Object {
      "payload": Object {
        "_id": "1",
      },
      "type": "add scenario",
    },
    Object {
      "payload": Object {
        "args": Array [
          "/scenarios/1",
        ],
        "method": "push",
      },
      "type": "@@router/CALL_HISTORY_METHOD",
    },
  ],
]
`;

exports[`actions > scenario deleteScenario should work 1`] = `
Array [
  Object {
    "payload": "1",
    "type": "delete scenario",
  },
  Object {
    "payload": Object {
      "next": [Function],
      "options": Object {
        "method": "delete",
      },
      "url": "/api/scenario/1",
    },
    "type": "fetch",
  },
]
`;

exports[`actions > scenario deleteScenario should work 2`] = `
Array [
  Object {
    "payload": "1",
    "type": "delete scenario",
  },
  Array [
    Object {
      "payload": Object {
        "options": Object {
          "method": "delete",
        },
        "url": "/api/scenario/1",
      },
      "type": "increment outstanding fetches",
    },
    Promise {},
  ],
]
`;

exports[`actions > scenario deleteScenario should work 3`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {
        "method": "delete",
      },
      "url": "/api/scenario/1",
    },
    "type": "increment outstanding fetches",
  },
  Promise {},
]
`;

exports[`actions > scenario load should work 1`] = `
Object {
  "payload": Object {
    "next": [Function],
    "url": "/api/scenario/1",
  },
  "type": "fetch",
}
`;

exports[`actions > scenario load should work 2`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {},
      "url": "/api/scenario/1",
    },
    "type": "increment outstanding fetches",
  },
  Promise {},
]
`;

exports[`actions > scenario load should work 3`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {},
      "url": "/api/scenario/1",
    },
    "type": "decrement outstanding fetches",
  },
  Array [
    Object {
      "payload": Object {
        "_id": "1",
        "bundleId": "1",
      },
      "type": "set scenario",
    },
    Array [
      Object {
        "payload": Object {
          "options": Object {},
          "url": "/api/bundle/1",
        },
        "type": "increment outstanding fetches",
      },
      Promise {},
    ],
    Array [
      Object {
        "payload": Object {
          "options": Object {},
          "url": "/api/scenario/1/modifications",
        },
        "type": "increment outstanding fetches",
      },
      Promise {},
    ],
  ],
]
`;

exports[`actions > scenario saveToServer should work 1`] = `
Object {
  "payload": Object {
    "next": [Function],
    "options": Object {
      "body": Object {
        "_id": "1",
        "accessGroup": "accessGroupName",
        "bundleId": "1",
        "createdAt": "2017-11-08T12:30:50.133Z",
        "createdBy": "person@gmail.com",
        "name": "Mock Scenario",
        "nonce": "12345",
        "projectId": "1",
        "updatedAt": "2017-11-08T12:31:19.602Z",
        "updatedBy": "person@gmail.com",
        "variants": Array [
          "Default",
        ],
      },
      "method": "put",
    },
    "url": "/api/scenario/1",
  },
  "type": "fetch",
}
`;

exports[`actions > scenario saveToServer should work 2`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "_id": "1",
          "accessGroup": "accessGroupName",
          "bundleId": "1",
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "name": "Mock Scenario",
          "nonce": "12345",
          "projectId": "1",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            "Default",
          ],
        },
        "method": "put",
      },
      "url": "/api/scenario/1",
    },
    "type": "increment outstanding fetches",
  },
  Promise {},
]
`;

exports[`actions > scenario saveToServer should work 3`] = `
Array [
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "_id": "1",
          "accessGroup": "accessGroupName",
          "bundleId": "1",
          "createdAt": "2017-11-08T12:30:50.133Z",
          "createdBy": "person@gmail.com",
          "name": "Mock Scenario",
          "nonce": "12345",
          "projectId": "1",
          "updatedAt": "2017-11-08T12:31:19.602Z",
          "updatedBy": "person@gmail.com",
          "variants": Array [
            "Default",
          ],
        },
        "method": "put",
      },
      "url": "/api/scenario/1",
    },
    "type": "decrement outstanding fetches",
  },
  Object {
    "payload": Object {
      "_id": "1",
    },
    "type": "set scenario",
  },
]
`;

exports[`actions > scenario set should work 1`] = `
Object {
  "type": "set scenario",
}
`;

exports[`actions > scenario setAll should work 1`] = `
Object {
  "type": "set scenarios",
}
`;

exports[`actions > scenario showVariant should work 1`] = `
Object {
  "type": "show variant",
}
`;
