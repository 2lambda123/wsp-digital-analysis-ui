// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Container > Modification Editor calls replace when the variant changes 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ModificationEditor)
    bundleId=""
    modification={
      Object {
        "bidirectional": false,
        "entries": Array [],
        "feed": "1",
        "id": "1234",
        "name": "Test Modification",
        "routes": Array [
          "route1",
        ],
        "segments": Array [],
        "showOnMap": false,
        "timetables": Array [
          Object {
            "dwellTime": 10,
            "endTime": 57600,
            "friday": true,
            "headwaySecs": 900,
            "monday": true,
            "name": "Test timetable",
            "patternTrips": Array [
              "abcd",
            ],
            "saturday": false,
            "segmentSpeeds": Array [],
            "sourceTrip": "abcd",
            "startTime": 28800,
            "sunday": false,
            "thursday": true,
            "tuesday": true,
            "wednesday": true,
          },
        ],
        "trips": Array [
          "abcd",
        ],
        "type": "add-trip-pattern",
        "variants": Array [
          false,
        ],
      }
    }
  >
    <ModificationEditor
      allVariants={
        Array [
          "Default",
        ]
      }
      bundleId=""
      isLoaded={true}
      modification={
        Object {
          "bidirectional": false,
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            false,
          ],
        }
      }
      removeModification={[Function]}
      setActiveTrips={[Function]}
      setMapState={[Function]}
      setModificationName={[Function]}
      setModificationVariants={[Function]}
      update={[Function]}
    >
      <div
        className="ModificationDock"
      >
        <div
          className="ModificationDockTitle"
        >
          Test Modification
        </div>
        <div
          className="InnerDock"
        >
          <Body>
            <div
              className="panel-body"
            >
              <Text
                name="Modification Name"
                onChange={[Function]}
                value="Test Modification"
              >
                <Group
                  id="modification-name-input-42"
                  name="Modification Name"
                  onChange={[Function]}
                  value="Test Modification"
                >
                  <div
                    className="form-group"
                  >
                    <Input
                      id="modification-name-input-42"
                      name="Modification Name"
                      onChange={[Function]}
                      type="text"
                      value="Test Modification"
                    >
                      <input
                        className="form-control"
                        id="modification-name-input-42"
                        name="Modification Name"
                        onChange={[Function]}
                        placeholder="Modification Name"
                        type="text"
                        value="Test Modification"
                      />
                    </Input>
                  </div>
                </Group>
              </Text>
              <Connect(AddTripPattern)
                modification={
                  Object {
                    "bidirectional": false,
                    "entries": Array [],
                    "feed": "1",
                    "id": "1234",
                    "name": "Test Modification",
                    "routes": Array [
                      "route1",
                    ],
                    "segments": Array [],
                    "showOnMap": false,
                    "timetables": Array [
                      Object {
                        "dwellTime": 10,
                        "endTime": 57600,
                        "friday": true,
                        "headwaySecs": 900,
                        "monday": true,
                        "name": "Test timetable",
                        "patternTrips": Array [
                          "abcd",
                        ],
                        "saturday": false,
                        "segmentSpeeds": Array [],
                        "sourceTrip": "abcd",
                        "startTime": 28800,
                        "sunday": false,
                        "thursday": true,
                        "tuesday": true,
                        "wednesday": true,
                      },
                    ],
                    "trips": Array [
                      "abcd",
                    ],
                    "type": "add-trip-pattern",
                    "variants": Array [
                      false,
                    ],
                  }
                }
                setMapState={[Function]}
                update={[Function]}
              >
                <AddTripPattern
                  allPhaseFromTimetableStops={Object {}}
                  dispatch={[Function]}
                  extendFromEnd={true}
                  gtfsStops={Array []}
                  mapState={
                    Object {
                      "activeTrips": Array [],
                      "center": Object {
                        "lat": 38.8886,
                        "lon": -77.043,
                      },
                      "components": Array [],
                      "zoom": 12,
                    }
                  }
                  modification={
                    Object {
                      "bidirectional": false,
                      "entries": Array [],
                      "feed": "1",
                      "id": "1234",
                      "name": "Test Modification",
                      "routes": Array [
                        "route1",
                      ],
                      "segments": Array [],
                      "showOnMap": false,
                      "timetables": Array [
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        },
                      ],
                      "trips": Array [
                        "abcd",
                      ],
                      "type": "add-trip-pattern",
                      "variants": Array [
                        false,
                      ],
                    }
                  }
                  numberOfStops={0}
                  scenarioTimetables={Array []}
                  segmentDistances={Array []}
                  setMapState={[Function]}
                  update={[Function]}
                >
                  <div>
                    <EditAlignment
                      extendFromEnd={true}
                      mapState={
                        Object {
                          "activeTrips": Array [],
                          "center": Object {
                            "lat": 38.8886,
                            "lon": -77.043,
                          },
                          "components": Array [],
                          "zoom": 12,
                        }
                      }
                      modification={
                        Object {
                          "bidirectional": false,
                          "entries": Array [],
                          "feed": "1",
                          "id": "1234",
                          "name": "Test Modification",
                          "routes": Array [
                            "route1",
                          ],
                          "segments": Array [],
                          "showOnMap": false,
                          "timetables": Array [
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "segmentSpeeds": Array [],
                              "sourceTrip": "abcd",
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            },
                          ],
                          "trips": Array [
                            "abcd",
                          ],
                          "type": "add-trip-pattern",
                          "variants": Array [
                            false,
                          ],
                        }
                      }
                      setMapState={[Function]}
                      update={[Function]}
                    >
                      <div>
                        <Button
                          block={true}
                          onClick={[Function]}
                          style="warning"
                        >
                          <a
                            className="btn btn-warning btn-block"
                            href="#"
                            onClick={[Function]}
                            tabIndex={0}
                          >
                            <Icon
                              type="pencil"
                            >
                              <i
                                className="fa fa-pencil fa-fw "
                              />
                            </Icon>
                             
                            Edit route geometry
                          </a>
                        </Button>
                        <Checkbox
                          defaultChecked={true}
                          label="Create stops automatically"
                          onChange={[Function]}
                        >
                          <div
                            className="checkbox"
                          >
                            <label
                              htmlFor="create-stops-automatically-input-43"
                            >
                              <input
                                defaultChecked={true}
                                id="create-stops-automatically-input-43"
                                onChange={[Function]}
                                type="checkbox"
                              />
                               
                              Create stops automatically
                            </label>
                          </div>
                        </Checkbox>
                        <Number
                          label="Stop spacing"
                          onChange={[Function]}
                          units="meters"
                          value={400}
                        >
                          <Group
                            id="stop-spacing-input-44"
                            label="Stop spacing"
                            onChange={[Function]}
                            units="meters"
                            value={400}
                          >
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="stop-spacing-input-44"
                              >
                                Stop spacing
                              </label>
                              <Input
                                id="stop-spacing-input-44"
                                label="Stop spacing"
                                min={0}
                                onChange={[Function]}
                                onWheel={[Function]}
                                type="number"
                                units="meters"
                                value={400}
                              >
                                <div
                                  className="InputWithUnits"
                                >
                                  <input
                                    className="form-control"
                                    id="stop-spacing-input-44"
                                    min={0}
                                    onChange={[Function]}
                                    onWheel={[Function]}
                                    placeholder="meters"
                                    type="number"
                                    value={400}
                                  />
                                  <span
                                    className="InputUnits"
                                  >
                                    meters
                                  </span>
                                </div>
                              </Input>
                            </div>
                          </Group>
                        </Number>
                        <Checkbox
                          checked={false}
                          disabled={false}
                          label="Bidirectional"
                          onChange={[Function]}
                        >
                          <div
                            className="checkbox"
                          >
                            <label
                              htmlFor="bidirectional-input-45"
                            >
                              <input
                                checked={false}
                                disabled={false}
                                id="bidirectional-input-45"
                                onChange={[Function]}
                                type="checkbox"
                              />
                               
                              Bidirectional
                            </label>
                          </div>
                        </Checkbox>
                      </div>
                    </EditAlignment>
                    <Timetables
                      allPhaseFromTimetableStops={Object {}}
                      bidirectional={false}
                      modificationStops={Array []}
                      numberOfStops={0}
                      scenarioTimetables={Array []}
                      segmentDistances={Array []}
                      timetables={
                        Array [
                          Object {
                            "dwellTime": 10,
                            "endTime": 57600,
                            "friday": true,
                            "headwaySecs": 900,
                            "monday": true,
                            "name": "Test timetable",
                            "patternTrips": Array [
                              "abcd",
                            ],
                            "saturday": false,
                            "segmentSpeeds": Array [],
                            "sourceTrip": "abcd",
                            "startTime": 28800,
                            "sunday": false,
                            "thursday": true,
                            "tuesday": true,
                            "wednesday": true,
                          },
                        ]
                      }
                      update={[Function]}
                    >
                      <div>
                        <Timetable
                          allPhaseFromTimetableStops={Object {}}
                          bidirectional={false}
                          modificationStops={Array []}
                          numberOfStops={0}
                          remove={[Function]}
                          scenarioTimetables={Array []}
                          segmentDistances={Array []}
                          timetable={
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "segmentSpeeds": Array [],
                              "sourceTrip": "abcd",
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            }
                          }
                          update={[Function]}
                        >
                          <section
                            className="panel panel-default inner-panel"
                          >
                            <a
                              className="panel-heading clearfix"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                              tabIndex={0}
                            >
                              <Icon
                                type="caret-down"
                              >
                                <i
                                  className="fa fa-caret-down fa-fw "
                                />
                              </Icon>
                              <strong>
                                 
                                Test timetable
                              </strong>
                            </a>
                            <div
                              className="panel-body"
                            >
                              <Text
                                name="Name"
                                onChange={[Function]}
                                value="Test timetable"
                              >
                                <Group
                                  id="name-input-46"
                                  name="Name"
                                  onChange={[Function]}
                                  value="Test timetable"
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <Input
                                      id="name-input-46"
                                      name="Name"
                                      onChange={[Function]}
                                      type="text"
                                      value="Test timetable"
                                    >
                                      <input
                                        className="form-control"
                                        id="name-input-46"
                                        name="Name"
                                        onChange={[Function]}
                                        placeholder="Name"
                                        type="text"
                                        value="Test timetable"
                                      />
                                    </Input>
                                  </div>
                                </Group>
                              </Text>
                              <TimetableEntry
                                allPhaseFromTimetableStops={Object {}}
                                bidirectional={false}
                                modificationStops={Array []}
                                scenarioTimetables={Array []}
                                timetable={
                                  Object {
                                    "dwellTime": 10,
                                    "endTime": 57600,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  }
                                }
                                update={[Function]}
                              >
                                <div>
                                  <Days
                                    setDay={[Function]}
                                    timetable={
                                      Object {
                                        "dwellTime": 10,
                                        "endTime": 57600,
                                        "friday": true,
                                        "headwaySecs": 900,
                                        "monday": true,
                                        "name": "Test timetable",
                                        "patternTrips": Array [
                                          "abcd",
                                        ],
                                        "saturday": false,
                                        "segmentSpeeds": Array [],
                                        "sourceTrip": "abcd",
                                        "startTime": 28800,
                                        "sunday": false,
                                        "thursday": true,
                                        "tuesday": true,
                                        "wednesday": true,
                                      }
                                    }
                                  >
                                    <div
                                      className="form-inline"
                                    >
                                      <Checkbox
                                        checked={true}
                                        label="Mon"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="mon-input-47"
                                          >
                                            <input
                                              checked={true}
                                              id="mon-input-47"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Mon
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Tue"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="tue-input-48"
                                          >
                                            <input
                                              checked={true}
                                              id="tue-input-48"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Tue
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Wed"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="wed-input-49"
                                          >
                                            <input
                                              checked={true}
                                              id="wed-input-49"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Wed
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Thu"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="thu-input-50"
                                          >
                                            <input
                                              checked={true}
                                              id="thu-input-50"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Thu
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Fri"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="fri-input-51"
                                          >
                                            <input
                                              checked={true}
                                              id="fri-input-51"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Fri
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={false}
                                        label="Sat"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="sat-input-52"
                                          >
                                            <input
                                              checked={false}
                                              id="sat-input-52"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Sat
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={false}
                                        label="Sun"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="sun-input-53"
                                          >
                                            <input
                                              checked={false}
                                              id="sun-input-53"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Sun
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </div>
                                  </Days>
                                  <Number
                                    label="Frequency"
                                    onChange={[Function]}
                                    units="minutes"
                                    value={15}
                                  >
                                    <Group
                                      id="frequency-input-54"
                                      label="Frequency"
                                      onChange={[Function]}
                                      units="minutes"
                                      value={15}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="frequency-input-54"
                                        >
                                          Frequency
                                        </label>
                                        <Input
                                          id="frequency-input-54"
                                          label="Frequency"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="minutes"
                                          value={15}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="frequency-input-54"
                                              min={0}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="minutes"
                                              type="number"
                                              value={15}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              minutes
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <TimePicker
                                    label="Start time"
                                    onChange={[Function]}
                                    value={28800}
                                  >
                                    <Text
                                      label="Start time"
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="time"
                                      value="08:00"
                                    >
                                      <Group
                                        id="start-time-input-55"
                                        label="Start time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        value="08:00"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="start-time-input-55"
                                          >
                                            Start time
                                          </label>
                                          <Input
                                            id="start-time-input-55"
                                            label="Start time"
                                            onChange={[Function]}
                                            onWheel={[Function]}
                                            type="time"
                                            value="08:00"
                                          >
                                            <input
                                              className="form-control"
                                              id="start-time-input-55"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="Start time"
                                              type="time"
                                              value="08:00"
                                            />
                                          </Input>
                                        </div>
                                      </Group>
                                    </Text>
                                  </TimePicker>
                                  <TimePicker
                                    label="End time"
                                    onChange={[Function]}
                                    value={57600}
                                  >
                                    <Text
                                      label="End time"
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="time"
                                      value="16:00"
                                    >
                                      <Group
                                        id="end-time-input-56"
                                        label="End time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        value="16:00"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="end-time-input-56"
                                          >
                                            End time
                                          </label>
                                          <Input
                                            id="end-time-input-56"
                                            label="End time"
                                            onChange={[Function]}
                                            onWheel={[Function]}
                                            type="time"
                                            value="16:00"
                                          >
                                            <input
                                              className="form-control"
                                              id="end-time-input-56"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="End time"
                                              type="time"
                                              value="16:00"
                                            />
                                          </Input>
                                        </div>
                                      </Group>
                                    </Text>
                                  </TimePicker>
                                  <Checkbox
                                    disabled={false}
                                    label="Times are exact"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="times-are-exact-input-57"
                                      >
                                        <input
                                          disabled={false}
                                          id="times-are-exact-input-57"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Times are exact
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Phase
                                    availableTimetables={Array []}
                                    disabled={false}
                                    modificationStops={Array []}
                                    timetableHeadway={900}
                                    update={[Function]}
                                  >
                                    <div>
                                      <Group
                                        label="Phase at stop"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="phase-at-stop-input-58"
                                          >
                                            Phase at stop
                                          </label>
                                          <Select
                                            addLabelText="Add \\"{label}\\"?"
                                            arrowRenderer={[Function]}
                                            autosize={true}
                                            backspaceRemoves={true}
                                            backspaceToRemoveMessage="Press backspace to remove {label}"
                                            clearAllText="Clear all"
                                            clearRenderer={[Function]}
                                            clearValueText="Clear value"
                                            clearable={true}
                                            deleteRemoves={true}
                                            delimiter=","
                                            disabled={false}
                                            escapeClearsValue={true}
                                            filterOptions={[Function]}
                                            ignoreAccents={true}
                                            ignoreCase={true}
                                            inputProps={Object {}}
                                            isLoading={false}
                                            joinValues={false}
                                            labelKey="label"
                                            matchPos="any"
                                            matchProp="any"
                                            menuBuffer={0}
                                            menuRenderer={[Function]}
                                            multi={false}
                                            name="Phase at stop"
                                            noResultsText="No results found"
                                            onBlurResetsInput={true}
                                            onChange={[Function]}
                                            onCloseResetsInput={true}
                                            openAfterFocus={false}
                                            optionComponent={[Function]}
                                            options={Array []}
                                            pageSize={5}
                                            placeholder="Phase at stop"
                                            required={false}
                                            scrollMenuIntoView={true}
                                            searchable={true}
                                            simpleValue={false}
                                            tabSelectsValue={true}
                                            valueComponent={[Function]}
                                            valueKey="value"
                                          >
                                            <div
                                              className="Select Select--single is-searchable"
                                            >
                                              <div
                                                className="Select-control"
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                              >
                                                <span
                                                  className="Select-multi-value-wrapper"
                                                  id="react-select-4--value"
                                                >
                                                  <div
                                                    className="Select-placeholder"
                                                  >
                                                    Phase at stop
                                                  </div>
                                                  <AutosizeInput
                                                    aria-activedescendant="react-select-4--value"
                                                    aria-expanded="false"
                                                    aria-haspopup="false"
                                                    aria-owns=""
                                                    className="Select-input"
                                                    minWidth="5"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    role="combobox"
                                                    value=""
                                                  />
                                                </span>
                                                <span
                                                  className="Select-arrow-zone"
                                                  onMouseDown={[Function]}
                                                >
                                                  <span
                                                    className="Select-arrow"
                                                    onMouseDown={[Function]}
                                                  />
                                                </span>
                                              </div>
                                            </div>
                                          </Select>
                                        </div>
                                      </Group>
                                    </div>
                                  </Phase>
                                </div>
                              </TimetableEntry>
                              <SegmentSpeeds
                                dwellTime={10}
                                numberOfStops={0}
                                segmentDistances={Array []}
                                segmentSpeeds={Array []}
                                update={[Function]}
                              >
                                <div>
                                  <Number
                                    label="Dwell time"
                                    onChange={[Function]}
                                    units="seconds"
                                    value={10}
                                  >
                                    <Group
                                      id="dwell-time-input-59"
                                      label="Dwell time"
                                      onChange={[Function]}
                                      units="seconds"
                                      value={10}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="dwell-time-input-59"
                                        >
                                          Dwell time
                                        </label>
                                        <Input
                                          id="dwell-time-input-59"
                                          label="Dwell time"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="seconds"
                                          value={10}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="dwell-time-input-59"
                                              min={0}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="seconds"
                                              type="number"
                                              value={10}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              seconds
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Number
                                    label="Average segment speed"
                                    min={1}
                                    onChange={[Function]}
                                    units="km/h"
                                    value={15}
                                  >
                                    <Group
                                      id="average-segment-speed-input-60"
                                      label="Average segment speed"
                                      min={1}
                                      onChange={[Function]}
                                      units="km/h"
                                      value={15}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="average-segment-speed-input-60"
                                        >
                                          Average segment speed
                                        </label>
                                        <Input
                                          id="average-segment-speed-input-60"
                                          label="Average segment speed"
                                          min={1}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="km/h"
                                          value={15}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="average-segment-speed-input-60"
                                              min={1}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="km/h"
                                              type="number"
                                              value={15}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              km/h
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Number
                                    label="Total travel time"
                                    min={1}
                                    onChange={[Function]}
                                    units="minutes"
                                    value={0}
                                  >
                                    <Group
                                      id="total-travel-time-input-61"
                                      label="Total travel time"
                                      min={1}
                                      onChange={[Function]}
                                      units="minutes"
                                      value={0}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="total-travel-time-input-61"
                                        >
                                          Total travel time
                                        </label>
                                        <Input
                                          id="total-travel-time-input-61"
                                          label="Total travel time"
                                          min={1}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="minutes"
                                          value={0}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="total-travel-time-input-61"
                                              min={1}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="minutes"
                                              type="number"
                                              value={0}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              minutes
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Collapsible
                                    defaultExpanded={false}
                                    title="Set individual segment speeds"
                                  >
                                    <div>
                                      <div
                                        aria-level={3}
                                        role="heading"
                                      >
                                        <a
                                          aria-expanded={false}
                                          className="CollapsibleButton"
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <Icon
                                            type="caret-right"
                                          >
                                            <i
                                              className="fa fa-caret-right fa-fw "
                                            />
                                          </Icon>
                                          <strong>
                                            Set individual segment speeds
                                          </strong>
                                        </a>
                                      </div>
                                    </div>
                                  </Collapsible>
                                </div>
                              </SegmentSpeeds>
                              <Button
                                block={true}
                                onClick={[Function]}
                                style="danger"
                                title="Delete timetable"
                              >
                                <a
                                  className="btn btn-danger btn-block"
                                  href="#"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  title="Delete timetable"
                                >
                                  <Icon
                                    type="close"
                                  >
                                    <i
                                      className="fa fa-close fa-fw "
                                    />
                                  </Icon>
                                   Delete Timetable
                                </a>
                              </Button>
                            </div>
                          </section>
                        </Timetable>
                        <Button
                          block={true}
                          onClick={[Function]}
                          style="success"
                        >
                          <a
                            className="btn btn-success btn-block"
                            href="#"
                            onClick={[Function]}
                            tabIndex={0}
                          >
                            <Icon
                              type="plus"
                            >
                              <i
                                className="fa fa-plus fa-fw "
                              />
                            </Icon>
                             Add timetable
                          </a>
                        </Button>
                      </div>
                    </Timetables>
                  </div>
                </AddTripPattern>
              </Connect(AddTripPattern)>
              <Variants
                activeVariants={
                  Array [
                    false,
                  ]
                }
                allVariants={
                  Array [
                    "Default",
                  ]
                }
                modificationId="1234"
                setVariant={[Function]}
              >
                <div>
                  <legend>
                    Active in variants
                  </legend>
                  <div
                    className="form-inline"
                  >
                    <Checkbox
                      checked={0}
                      label={1}
                      onChange={[Function]}
                      title="Default"
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="1-input-62"
                        >
                          <input
                            checked={0}
                            id="1-input-62"
                            onChange={[Function]}
                            title="Default"
                            type="checkbox"
                          />
                           
                          1
                        </label>
                      </div>
                    </Checkbox>
                  </div>
                </div>
              </Variants>
              <Button
                block={true}
                className="pull-right"
                onClick={[Function]}
                style="danger"
                title="Delete Modification"
              >
                <a
                  className="btn btn-danger btn-block pull-right"
                  href="#"
                  onClick={[Function]}
                  tabIndex={0}
                  title="Delete Modification"
                >
                  <Icon
                    type="close"
                  >
                    <i
                      className="fa fa-close fa-fw "
                    />
                  </Icon>
                   Delete Modification
                </a>
              </Button>
            </div>
          </Body>
        </div>
      </div>
    </ModificationEditor>
  </Connect(ModificationEditor)>
</Provider>
`;

exports[`Container > Modification Editor render just the title if not loaded 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ModificationEditor)
    bundleId=""
    modification={
      Object {
        "bidirectional": false,
        "entries": Array [],
        "feed": "1",
        "id": "1234",
        "name": "Test Modification",
        "routes": Array [
          "route1",
        ],
        "segments": Array [],
        "showOnMap": false,
        "timetables": Array [
          Object {
            "dwellTime": 10,
            "endTime": 57600,
            "friday": true,
            "headwaySecs": 900,
            "monday": true,
            "name": "Test timetable",
            "patternTrips": Array [
              "abcd",
            ],
            "saturday": false,
            "segmentSpeeds": Array [],
            "sourceTrip": "abcd",
            "startTime": 28800,
            "sunday": false,
            "thursday": true,
            "tuesday": true,
            "wednesday": true,
          },
        ],
        "trips": Array [
          "abcd",
        ],
        "type": "add-trip-pattern",
        "variants": Array [
          0,
        ],
      }
    }
  >
    <ModificationEditor
      allVariants={Array []}
      bundleId=""
      isLoaded={true}
      modification={
        Object {
          "bidirectional": false,
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            0,
          ],
        }
      }
      removeModification={[Function]}
      setActiveTrips={[Function]}
      setMapState={[Function]}
      setModificationName={[Function]}
      setModificationVariants={[Function]}
      update={[Function]}
    >
      <div
        className="ModificationDock"
      >
        <div
          className="ModificationDockTitle"
        >
          Test Modification
        </div>
        <div
          className="InnerDock"
        >
          <Body>
            <div
              className="panel-body"
            >
              <Text
                name="Modification Name"
                onChange={[Function]}
                value="Test Modification"
              >
                <Group
                  id="modification-name-input-20"
                  name="Modification Name"
                  onChange={[Function]}
                  value="Test Modification"
                >
                  <div
                    className="form-group"
                  >
                    <Input
                      id="modification-name-input-20"
                      name="Modification Name"
                      onChange={[Function]}
                      type="text"
                      value="Test Modification"
                    >
                      <input
                        className="form-control"
                        id="modification-name-input-20"
                        name="Modification Name"
                        onChange={[Function]}
                        placeholder="Modification Name"
                        type="text"
                        value="Test Modification"
                      />
                    </Input>
                  </div>
                </Group>
              </Text>
              <Connect(AddTripPattern)
                modification={
                  Object {
                    "bidirectional": false,
                    "entries": Array [],
                    "feed": "1",
                    "id": "1234",
                    "name": "Test Modification",
                    "routes": Array [
                      "route1",
                    ],
                    "segments": Array [],
                    "showOnMap": false,
                    "timetables": Array [
                      Object {
                        "dwellTime": 10,
                        "endTime": 57600,
                        "friday": true,
                        "headwaySecs": 900,
                        "monday": true,
                        "name": "Test timetable",
                        "patternTrips": Array [
                          "abcd",
                        ],
                        "saturday": false,
                        "segmentSpeeds": Array [],
                        "sourceTrip": "abcd",
                        "startTime": 28800,
                        "sunday": false,
                        "thursday": true,
                        "tuesday": true,
                        "wednesday": true,
                      },
                    ],
                    "trips": Array [
                      "abcd",
                    ],
                    "type": "add-trip-pattern",
                    "variants": Array [
                      0,
                    ],
                  }
                }
                setMapState={[Function]}
                update={[Function]}
              >
                <AddTripPattern
                  allPhaseFromTimetableStops={Object {}}
                  dispatch={[Function]}
                  extendFromEnd={true}
                  gtfsStops={Array []}
                  mapState={
                    Object {
                      "activeTrips": Array [],
                      "center": Object {
                        "lat": 38.8886,
                        "lon": -77.043,
                      },
                      "components": Array [],
                      "zoom": 12,
                    }
                  }
                  modification={
                    Object {
                      "bidirectional": false,
                      "entries": Array [],
                      "feed": "1",
                      "id": "1234",
                      "name": "Test Modification",
                      "routes": Array [
                        "route1",
                      ],
                      "segments": Array [],
                      "showOnMap": false,
                      "timetables": Array [
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        },
                      ],
                      "trips": Array [
                        "abcd",
                      ],
                      "type": "add-trip-pattern",
                      "variants": Array [
                        0,
                      ],
                    }
                  }
                  numberOfStops={0}
                  scenarioTimetables={Array []}
                  segmentDistances={Array []}
                  setMapState={[Function]}
                  update={[Function]}
                >
                  <div>
                    <EditAlignment
                      extendFromEnd={true}
                      mapState={
                        Object {
                          "activeTrips": Array [],
                          "center": Object {
                            "lat": 38.8886,
                            "lon": -77.043,
                          },
                          "components": Array [],
                          "zoom": 12,
                        }
                      }
                      modification={
                        Object {
                          "bidirectional": false,
                          "entries": Array [],
                          "feed": "1",
                          "id": "1234",
                          "name": "Test Modification",
                          "routes": Array [
                            "route1",
                          ],
                          "segments": Array [],
                          "showOnMap": false,
                          "timetables": Array [
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "segmentSpeeds": Array [],
                              "sourceTrip": "abcd",
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            },
                          ],
                          "trips": Array [
                            "abcd",
                          ],
                          "type": "add-trip-pattern",
                          "variants": Array [
                            0,
                          ],
                        }
                      }
                      setMapState={[Function]}
                      update={[Function]}
                    >
                      <div>
                        <Button
                          block={true}
                          onClick={[Function]}
                          style="warning"
                        >
                          <a
                            className="btn btn-warning btn-block"
                            href="#"
                            onClick={[Function]}
                            tabIndex={0}
                          >
                            <Icon
                              type="pencil"
                            >
                              <i
                                className="fa fa-pencil fa-fw "
                              />
                            </Icon>
                             
                            Edit route geometry
                          </a>
                        </Button>
                        <Checkbox
                          defaultChecked={true}
                          label="Create stops automatically"
                          onChange={[Function]}
                        >
                          <div
                            className="checkbox"
                          >
                            <label
                              htmlFor="create-stops-automatically-input-21"
                            >
                              <input
                                defaultChecked={true}
                                id="create-stops-automatically-input-21"
                                onChange={[Function]}
                                type="checkbox"
                              />
                               
                              Create stops automatically
                            </label>
                          </div>
                        </Checkbox>
                        <Number
                          label="Stop spacing"
                          onChange={[Function]}
                          units="meters"
                          value={400}
                        >
                          <Group
                            id="stop-spacing-input-22"
                            label="Stop spacing"
                            onChange={[Function]}
                            units="meters"
                            value={400}
                          >
                            <div
                              className="form-group"
                            >
                              <label
                                htmlFor="stop-spacing-input-22"
                              >
                                Stop spacing
                              </label>
                              <Input
                                id="stop-spacing-input-22"
                                label="Stop spacing"
                                min={0}
                                onChange={[Function]}
                                onWheel={[Function]}
                                type="number"
                                units="meters"
                                value={400}
                              >
                                <div
                                  className="InputWithUnits"
                                >
                                  <input
                                    className="form-control"
                                    id="stop-spacing-input-22"
                                    min={0}
                                    onChange={[Function]}
                                    onWheel={[Function]}
                                    placeholder="meters"
                                    type="number"
                                    value={400}
                                  />
                                  <span
                                    className="InputUnits"
                                  >
                                    meters
                                  </span>
                                </div>
                              </Input>
                            </div>
                          </Group>
                        </Number>
                        <Checkbox
                          checked={false}
                          disabled={false}
                          label="Bidirectional"
                          onChange={[Function]}
                        >
                          <div
                            className="checkbox"
                          >
                            <label
                              htmlFor="bidirectional-input-23"
                            >
                              <input
                                checked={false}
                                disabled={false}
                                id="bidirectional-input-23"
                                onChange={[Function]}
                                type="checkbox"
                              />
                               
                              Bidirectional
                            </label>
                          </div>
                        </Checkbox>
                      </div>
                    </EditAlignment>
                    <Timetables
                      allPhaseFromTimetableStops={Object {}}
                      bidirectional={false}
                      modificationStops={Array []}
                      numberOfStops={0}
                      scenarioTimetables={Array []}
                      segmentDistances={Array []}
                      timetables={
                        Array [
                          Object {
                            "dwellTime": 10,
                            "endTime": 57600,
                            "friday": true,
                            "headwaySecs": 900,
                            "monday": true,
                            "name": "Test timetable",
                            "patternTrips": Array [
                              "abcd",
                            ],
                            "saturday": false,
                            "segmentSpeeds": Array [],
                            "sourceTrip": "abcd",
                            "startTime": 28800,
                            "sunday": false,
                            "thursday": true,
                            "tuesday": true,
                            "wednesday": true,
                          },
                        ]
                      }
                      update={[Function]}
                    >
                      <div>
                        <Timetable
                          allPhaseFromTimetableStops={Object {}}
                          bidirectional={false}
                          modificationStops={Array []}
                          numberOfStops={0}
                          remove={[Function]}
                          scenarioTimetables={Array []}
                          segmentDistances={Array []}
                          timetable={
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "segmentSpeeds": Array [],
                              "sourceTrip": "abcd",
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            }
                          }
                          update={[Function]}
                        >
                          <section
                            className="panel panel-default inner-panel"
                          >
                            <a
                              className="panel-heading clearfix"
                              onClick={[Function]}
                              style={
                                Object {
                                  "cursor": "pointer",
                                }
                              }
                              tabIndex={0}
                            >
                              <Icon
                                type="caret-down"
                              >
                                <i
                                  className="fa fa-caret-down fa-fw "
                                />
                              </Icon>
                              <strong>
                                 
                                Test timetable
                              </strong>
                            </a>
                            <div
                              className="panel-body"
                            >
                              <Text
                                name="Name"
                                onChange={[Function]}
                                value="Test timetable"
                              >
                                <Group
                                  id="name-input-24"
                                  name="Name"
                                  onChange={[Function]}
                                  value="Test timetable"
                                >
                                  <div
                                    className="form-group"
                                  >
                                    <Input
                                      id="name-input-24"
                                      name="Name"
                                      onChange={[Function]}
                                      type="text"
                                      value="Test timetable"
                                    >
                                      <input
                                        className="form-control"
                                        id="name-input-24"
                                        name="Name"
                                        onChange={[Function]}
                                        placeholder="Name"
                                        type="text"
                                        value="Test timetable"
                                      />
                                    </Input>
                                  </div>
                                </Group>
                              </Text>
                              <TimetableEntry
                                allPhaseFromTimetableStops={Object {}}
                                bidirectional={false}
                                modificationStops={Array []}
                                scenarioTimetables={Array []}
                                timetable={
                                  Object {
                                    "dwellTime": 10,
                                    "endTime": 57600,
                                    "friday": true,
                                    "headwaySecs": 900,
                                    "monday": true,
                                    "name": "Test timetable",
                                    "patternTrips": Array [
                                      "abcd",
                                    ],
                                    "saturday": false,
                                    "segmentSpeeds": Array [],
                                    "sourceTrip": "abcd",
                                    "startTime": 28800,
                                    "sunday": false,
                                    "thursday": true,
                                    "tuesday": true,
                                    "wednesday": true,
                                  }
                                }
                                update={[Function]}
                              >
                                <div>
                                  <Days
                                    setDay={[Function]}
                                    timetable={
                                      Object {
                                        "dwellTime": 10,
                                        "endTime": 57600,
                                        "friday": true,
                                        "headwaySecs": 900,
                                        "monday": true,
                                        "name": "Test timetable",
                                        "patternTrips": Array [
                                          "abcd",
                                        ],
                                        "saturday": false,
                                        "segmentSpeeds": Array [],
                                        "sourceTrip": "abcd",
                                        "startTime": 28800,
                                        "sunday": false,
                                        "thursday": true,
                                        "tuesday": true,
                                        "wednesday": true,
                                      }
                                    }
                                  >
                                    <div
                                      className="form-inline"
                                    >
                                      <Checkbox
                                        checked={true}
                                        label="Mon"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="mon-input-25"
                                          >
                                            <input
                                              checked={true}
                                              id="mon-input-25"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Mon
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Tue"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="tue-input-26"
                                          >
                                            <input
                                              checked={true}
                                              id="tue-input-26"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Tue
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Wed"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="wed-input-27"
                                          >
                                            <input
                                              checked={true}
                                              id="wed-input-27"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Wed
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Thu"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="thu-input-28"
                                          >
                                            <input
                                              checked={true}
                                              id="thu-input-28"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Thu
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={true}
                                        label="Fri"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="fri-input-29"
                                          >
                                            <input
                                              checked={true}
                                              id="fri-input-29"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Fri
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={false}
                                        label="Sat"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="sat-input-30"
                                          >
                                            <input
                                              checked={false}
                                              id="sat-input-30"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Sat
                                          </label>
                                        </div>
                                      </Checkbox>
                                      <Checkbox
                                        checked={false}
                                        label="Sun"
                                        onChange={[Function]}
                                      >
                                        <div
                                          className="checkbox"
                                        >
                                          <label
                                            htmlFor="sun-input-31"
                                          >
                                            <input
                                              checked={false}
                                              id="sun-input-31"
                                              onChange={[Function]}
                                              type="checkbox"
                                            />
                                             
                                            Sun
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </div>
                                  </Days>
                                  <Number
                                    label="Frequency"
                                    onChange={[Function]}
                                    units="minutes"
                                    value={15}
                                  >
                                    <Group
                                      id="frequency-input-32"
                                      label="Frequency"
                                      onChange={[Function]}
                                      units="minutes"
                                      value={15}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="frequency-input-32"
                                        >
                                          Frequency
                                        </label>
                                        <Input
                                          id="frequency-input-32"
                                          label="Frequency"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="minutes"
                                          value={15}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="frequency-input-32"
                                              min={0}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="minutes"
                                              type="number"
                                              value={15}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              minutes
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <TimePicker
                                    label="Start time"
                                    onChange={[Function]}
                                    value={28800}
                                  >
                                    <Text
                                      label="Start time"
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="time"
                                      value="08:00"
                                    >
                                      <Group
                                        id="start-time-input-33"
                                        label="Start time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        value="08:00"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="start-time-input-33"
                                          >
                                            Start time
                                          </label>
                                          <Input
                                            id="start-time-input-33"
                                            label="Start time"
                                            onChange={[Function]}
                                            onWheel={[Function]}
                                            type="time"
                                            value="08:00"
                                          >
                                            <input
                                              className="form-control"
                                              id="start-time-input-33"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="Start time"
                                              type="time"
                                              value="08:00"
                                            />
                                          </Input>
                                        </div>
                                      </Group>
                                    </Text>
                                  </TimePicker>
                                  <TimePicker
                                    label="End time"
                                    onChange={[Function]}
                                    value={57600}
                                  >
                                    <Text
                                      label="End time"
                                      onChange={[Function]}
                                      onWheel={[Function]}
                                      type="time"
                                      value="16:00"
                                    >
                                      <Group
                                        id="end-time-input-34"
                                        label="End time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        value="16:00"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="end-time-input-34"
                                          >
                                            End time
                                          </label>
                                          <Input
                                            id="end-time-input-34"
                                            label="End time"
                                            onChange={[Function]}
                                            onWheel={[Function]}
                                            type="time"
                                            value="16:00"
                                          >
                                            <input
                                              className="form-control"
                                              id="end-time-input-34"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="End time"
                                              type="time"
                                              value="16:00"
                                            />
                                          </Input>
                                        </div>
                                      </Group>
                                    </Text>
                                  </TimePicker>
                                  <Checkbox
                                    disabled={false}
                                    label="Times are exact"
                                    onChange={[Function]}
                                  >
                                    <div
                                      className="checkbox"
                                    >
                                      <label
                                        htmlFor="times-are-exact-input-35"
                                      >
                                        <input
                                          disabled={false}
                                          id="times-are-exact-input-35"
                                          onChange={[Function]}
                                          type="checkbox"
                                        />
                                         
                                        Times are exact
                                      </label>
                                    </div>
                                  </Checkbox>
                                  <Phase
                                    availableTimetables={Array []}
                                    disabled={false}
                                    modificationStops={Array []}
                                    timetableHeadway={900}
                                    update={[Function]}
                                  >
                                    <div>
                                      <Group
                                        label="Phase at stop"
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="phase-at-stop-input-36"
                                          >
                                            Phase at stop
                                          </label>
                                          <Select
                                            addLabelText="Add \\"{label}\\"?"
                                            arrowRenderer={[Function]}
                                            autosize={true}
                                            backspaceRemoves={true}
                                            backspaceToRemoveMessage="Press backspace to remove {label}"
                                            clearAllText="Clear all"
                                            clearRenderer={[Function]}
                                            clearValueText="Clear value"
                                            clearable={true}
                                            deleteRemoves={true}
                                            delimiter=","
                                            disabled={false}
                                            escapeClearsValue={true}
                                            filterOptions={[Function]}
                                            ignoreAccents={true}
                                            ignoreCase={true}
                                            inputProps={Object {}}
                                            isLoading={false}
                                            joinValues={false}
                                            labelKey="label"
                                            matchPos="any"
                                            matchProp="any"
                                            menuBuffer={0}
                                            menuRenderer={[Function]}
                                            multi={false}
                                            name="Phase at stop"
                                            noResultsText="No results found"
                                            onBlurResetsInput={true}
                                            onChange={[Function]}
                                            onCloseResetsInput={true}
                                            openAfterFocus={false}
                                            optionComponent={[Function]}
                                            options={Array []}
                                            pageSize={5}
                                            placeholder="Phase at stop"
                                            required={false}
                                            scrollMenuIntoView={true}
                                            searchable={true}
                                            simpleValue={false}
                                            tabSelectsValue={true}
                                            valueComponent={[Function]}
                                            valueKey="value"
                                          >
                                            <div
                                              className="Select Select--single is-searchable"
                                            >
                                              <div
                                                className="Select-control"
                                                onKeyDown={[Function]}
                                                onMouseDown={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                              >
                                                <span
                                                  className="Select-multi-value-wrapper"
                                                  id="react-select-3--value"
                                                >
                                                  <div
                                                    className="Select-placeholder"
                                                  >
                                                    Phase at stop
                                                  </div>
                                                  <AutosizeInput
                                                    aria-activedescendant="react-select-3--value"
                                                    aria-expanded="false"
                                                    aria-haspopup="false"
                                                    aria-owns=""
                                                    className="Select-input"
                                                    minWidth="5"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    role="combobox"
                                                    value=""
                                                  />
                                                </span>
                                                <span
                                                  className="Select-arrow-zone"
                                                  onMouseDown={[Function]}
                                                >
                                                  <span
                                                    className="Select-arrow"
                                                    onMouseDown={[Function]}
                                                  />
                                                </span>
                                              </div>
                                            </div>
                                          </Select>
                                        </div>
                                      </Group>
                                    </div>
                                  </Phase>
                                </div>
                              </TimetableEntry>
                              <SegmentSpeeds
                                dwellTime={10}
                                numberOfStops={0}
                                segmentDistances={Array []}
                                segmentSpeeds={Array []}
                                update={[Function]}
                              >
                                <div>
                                  <Number
                                    label="Dwell time"
                                    onChange={[Function]}
                                    units="seconds"
                                    value={10}
                                  >
                                    <Group
                                      id="dwell-time-input-37"
                                      label="Dwell time"
                                      onChange={[Function]}
                                      units="seconds"
                                      value={10}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="dwell-time-input-37"
                                        >
                                          Dwell time
                                        </label>
                                        <Input
                                          id="dwell-time-input-37"
                                          label="Dwell time"
                                          min={0}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="seconds"
                                          value={10}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="dwell-time-input-37"
                                              min={0}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="seconds"
                                              type="number"
                                              value={10}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              seconds
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Number
                                    label="Average segment speed"
                                    min={1}
                                    onChange={[Function]}
                                    units="km/h"
                                    value={15}
                                  >
                                    <Group
                                      id="average-segment-speed-input-38"
                                      label="Average segment speed"
                                      min={1}
                                      onChange={[Function]}
                                      units="km/h"
                                      value={15}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="average-segment-speed-input-38"
                                        >
                                          Average segment speed
                                        </label>
                                        <Input
                                          id="average-segment-speed-input-38"
                                          label="Average segment speed"
                                          min={1}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="km/h"
                                          value={15}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="average-segment-speed-input-38"
                                              min={1}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="km/h"
                                              type="number"
                                              value={15}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              km/h
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Number
                                    label="Total travel time"
                                    min={1}
                                    onChange={[Function]}
                                    units="minutes"
                                    value={0}
                                  >
                                    <Group
                                      id="total-travel-time-input-39"
                                      label="Total travel time"
                                      min={1}
                                      onChange={[Function]}
                                      units="minutes"
                                      value={0}
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <label
                                          htmlFor="total-travel-time-input-39"
                                        >
                                          Total travel time
                                        </label>
                                        <Input
                                          id="total-travel-time-input-39"
                                          label="Total travel time"
                                          min={1}
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="number"
                                          units="minutes"
                                          value={0}
                                        >
                                          <div
                                            className="InputWithUnits"
                                          >
                                            <input
                                              className="form-control"
                                              id="total-travel-time-input-39"
                                              min={1}
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              placeholder="minutes"
                                              type="number"
                                              value={0}
                                            />
                                            <span
                                              className="InputUnits"
                                            >
                                              minutes
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </Group>
                                  </Number>
                                  <Collapsible
                                    defaultExpanded={false}
                                    title="Set individual segment speeds"
                                  >
                                    <div>
                                      <div
                                        aria-level={3}
                                        role="heading"
                                      >
                                        <a
                                          aria-expanded={false}
                                          className="CollapsibleButton"
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex={0}
                                        >
                                          <Icon
                                            type="caret-right"
                                          >
                                            <i
                                              className="fa fa-caret-right fa-fw "
                                            />
                                          </Icon>
                                          <strong>
                                            Set individual segment speeds
                                          </strong>
                                        </a>
                                      </div>
                                    </div>
                                  </Collapsible>
                                </div>
                              </SegmentSpeeds>
                              <Button
                                block={true}
                                onClick={[Function]}
                                style="danger"
                                title="Delete timetable"
                              >
                                <a
                                  className="btn btn-danger btn-block"
                                  href="#"
                                  onClick={[Function]}
                                  tabIndex={0}
                                  title="Delete timetable"
                                >
                                  <Icon
                                    type="close"
                                  >
                                    <i
                                      className="fa fa-close fa-fw "
                                    />
                                  </Icon>
                                   Delete Timetable
                                </a>
                              </Button>
                            </div>
                          </section>
                        </Timetable>
                        <Button
                          block={true}
                          onClick={[Function]}
                          style="success"
                        >
                          <a
                            className="btn btn-success btn-block"
                            href="#"
                            onClick={[Function]}
                            tabIndex={0}
                          >
                            <Icon
                              type="plus"
                            >
                              <i
                                className="fa fa-plus fa-fw "
                              />
                            </Icon>
                             Add timetable
                          </a>
                        </Button>
                      </div>
                    </Timetables>
                  </div>
                </AddTripPattern>
              </Connect(AddTripPattern)>
              <Variants
                activeVariants={
                  Array [
                    0,
                  ]
                }
                allVariants={Array []}
                modificationId="1234"
                setVariant={[Function]}
              >
                <div>
                  <legend>
                    Active in variants
                  </legend>
                  <div
                    className="form-inline"
                  />
                </div>
              </Variants>
              <Button
                block={true}
                className="pull-right"
                onClick={[Function]}
                style="danger"
                title="Delete Modification"
              >
                <a
                  className="btn btn-danger btn-block pull-right"
                  href="#"
                  onClick={[Function]}
                  tabIndex={0}
                  title="Delete Modification"
                >
                  <Icon
                    type="close"
                  >
                    <i
                      className="fa fa-close fa-fw "
                    />
                  </Icon>
                   Delete Modification
                </a>
              </Button>
            </div>
          </Body>
        </div>
      </div>
    </ModificationEditor>
  </Connect(ModificationEditor)>
</Provider>
`;

exports[`Container > Modification Editor renders correctly 1`] = `
Array [
  Object {
    "payload": Object {
      "bidirectional": false,
      "entries": Array [],
      "feed": "1",
      "id": "1234",
      "name": "New Modification Name",
      "routes": Array [
        "route1",
      ],
      "segments": Array [],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "dwellTime": 10,
          "endTime": 57600,
          "friday": true,
          "headwaySecs": 900,
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "variants": Array [
        0,
      ],
    },
    "type": "set modification",
  },
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "bidirectional": false,
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "New Modification Name",
          "routes": Array [
            "route1",
          ],
          "segments": Array [],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            0,
          ],
        },
        "method": "put",
      },
      "url": "/api/modification/1234",
    },
    "type": "increment outstanding fetches",
  },
  Object {
    "payload": Object {
      "options": Object {},
      "url": "/api/graphql?query=%0Aquery%20dataQuery(%24bundleId%3A%20String%2C%20%24routeIds%3A%20%5BString%5D)%20%7B%0A%20%20bundle%20(bundle_id%3A%20%5B%24bundleId%5D)%20%7B%0A%20%20%20%20feeds%20%7B%0A%20%20%20%20%20%20feed_id%2C%0A%20%20%20%20%20%20checksum%2C%0A%20%20%20%20%20%20routes%20%7B%0A%20%20%20%20%20%20%20%20route_id%0A%20%20%20%20%20%20%20%20route_short_name%0A%20%20%20%20%20%20%20%20route_long_name%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20detailRoutes%3A%20routes(route_id%3A%20%24routeIds)%20%7B%0A%20%20%20%20%20%20%20%20route_id%0A%20%20%20%20%20%20%20%20route_short_name%0A%20%20%20%20%20%20%20%20route_long_name%0A%20%20%20%20%20%20%20%20patterns%20%7B%0A%20%20%20%20%20%20%20%20%20%20name%2C%0A%20%20%20%20%20%20%20%20%20%20pattern_id%2C%0A%20%20%20%20%20%20%20%20%20%20geometry%2C%0A%20%20%20%20%20%20%20%20%20%20trips%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20trip_id%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20trip_short_name%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20trip_headsign%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20start_time%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20direction_id%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20duration%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20stops%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20stop_id%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20stops%20%7B%0A%20%20%20%20%20%20%20%20stop_id%2C%0A%20%20%20%20%20%20%20%20stop_name%2C%0A%20%20%20%20%20%20%20%20stop_lat%2C%0A%20%20%20%20%20%20%20%20stop_lon%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&variables=%7B%22bundleId%22%3A%221%22%2C%22routeIds%22%3A%5B%5D%7D",
    },
    "type": "increment outstanding fetches",
  },
]
`;

exports[`Container > Modification Editor renders correctly 2`] = `
Array [
  Object {
    "payload": Object {
      "bidirectional": false,
      "entries": Array [],
      "feed": "1",
      "id": "1234",
      "name": "Test Modification",
      "routes": Array [
        "route1",
      ],
      "segments": Array [],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "dwellTime": 10,
          "endTime": 57600,
          "friday": true,
          "headwaySecs": 900,
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "variants": Array [
        0,
      ],
    },
    "type": "set modification",
  },
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "bidirectional": false,
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            0,
          ],
        },
        "method": "put",
      },
      "url": "/api/modification/1234",
    },
    "type": "increment outstanding fetches",
  },
]
`;
