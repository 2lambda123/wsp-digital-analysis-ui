// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Container > Modification Editor render just the title if not loaded 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ModificationEditor)
    params={
      Object {
        "modificationId": "1234",
      }
    }
  >
    <ModificationEditor
      allVariants={
        Array [
          "Default",
        ]
      }
      clearActive={[Function]}
      copyModification={[Function]}
      feedIsLoaded={true}
      modification={
        Object {
          "bidirectional": false,
          "description": "Mock description",
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [
            {
          "type": "Feature",
          "properties": {},
          "geometry": {
            "type": "LineString",
            "coordinates": [
              [
                "-122.02460000",
                "36.97070000"
              ],
              [
                "-122.02790000",
                "37.04900000"
              ],
              [
                "-121.97990000",
                "37.22990000"
              ],
              [
                "-121.94450000",
                "37.32400000"
              ],
              [
                "-121.93600000",
                "37.35300000"
              ],
              [
                "-121.92400000",
                "37.36500000"
              ]
            ]
          }
        },
          ],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            true,
          ],
        }
      }
      modificationId="1234"
      params={
        Object {
          "modificationId": "1234",
        }
      }
      removeModification={[Function]}
      setActive={[Function]}
      setActiveTrips={[Function]}
      setMapState={[Function]}
      setModificationName={[Function]}
      setModificationVariants={[Function]}
      update={[Function]}
    >
      <div>
        <div
          className="ApplicationDockTitle"
        >
          <Link
            title="Modifications"
            to="/scenarios/undefined"
          >
            <Tip
              tip="Modifications"
            >
              <span
                className="Tip "
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <Link
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/scenarios/undefined"
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <Icon
                      type="chevron-left"
                    >
                      <i
                        className="fa fa-chevron-left fa-fw "
                      />
                    </Icon>
                  </a>
                </Link>
              </span>
            </Tip>
          </Link>
          Test Modification
          <a
            className="pull-right"
            onClick={[Function]}
            tabIndex={0}
            title="Delete Modification"
          >
            <Icon
              type="trash"
            >
              <i
                className="fa fa-trash fa-fw "
              />
            </Icon>
          </a>
          <a
            className="pull-right"
            onClick={[Function]}
            tabIndex={0}
            title="Copy Modification"
          >
            <Icon
              type="copy"
            >
              <i
                className="fa fa-copy fa-fw "
              />
            </Icon>
          </a>
        </div>
        <div
          className="InnerDock"
        >
          <Body>
            <div
              className="panel-body"
            >
              <Text
                name="Modification Name"
                onChange={[Function]}
                value="Test Modification"
              >
                <Group
                  id="modification-name-input-42"
                  name="Modification Name"
                  onChange={[Function]}
                  value="Test Modification"
                >
                  <div
                    className="form-group"
                  >
                    <Input
                      id="modification-name-input-42"
                      name="Modification Name"
                      onChange={[Function]}
                      type="text"
                      value="Test Modification"
                    >
                      <input
                        className="form-control"
                        id="modification-name-input-42"
                        name="Modification Name"
                        onChange={[Function]}
                        placeholder="Modification Name"
                        type="text"
                        value="Test Modification"
                      />
                    </Input>
                  </div>
                </Group>
              </Text>
              <TextArea
                label="Description"
                onChange={[Function]}
                value="Mock description"
              >
                <Group
                  id="description-input-43"
                  label="Description"
                  onChange={[Function]}
                >
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="description-input-43"
                    >
                      Description
                    </label>
                    <textarea
                      className="form-control"
                      id="description-input-43"
                      label="Description"
                      onChange={[Function]}
                    >
                      Mock description
                    </textarea>
                  </div>
                </Group>
              </TextArea>
              <ModificationType
                modification={
                  Object {
                    "bidirectional": false,
                    "description": "Mock description",
                    "entries": Array [],
                    "feed": "1",
                    "id": "1234",
                    "name": "Test Modification",
                    "routes": Array [
                      "route1",
                    ],
                    "segments": Array [
                      {
                    "type": "Feature",
                    "properties": {},
                    "geometry": {
                      "type": "LineString",
                      "coordinates": [
                        [
                          "-122.02460000",
                          "36.97070000"
                        ],
                        [
                          "-122.02790000",
                          "37.04900000"
                        ],
                        [
                          "-121.97990000",
                          "37.22990000"
                        ],
                        [
                          "-121.94450000",
                          "37.32400000"
                        ],
                        [
                          "-121.93600000",
                          "37.35300000"
                        ],
                        [
                          "-121.92400000",
                          "37.36500000"
                        ]
                      ]
                    }
                  },
                    ],
                    "showOnMap": false,
                    "timetables": Array [
                      Object {
                        "dwellTime": 10,
                        "endTime": 57600,
                        "friday": true,
                        "headwaySecs": 900,
                        "monday": true,
                        "name": "Test timetable",
                        "patternTrips": Array [
                          "abcd",
                        ],
                        "saturday": false,
                        "segmentSpeeds": Array [],
                        "sourceTrip": "abcd",
                        "startTime": 28800,
                        "sunday": false,
                        "thursday": true,
                        "tuesday": true,
                        "wednesday": true,
                      },
                    ],
                    "trips": Array [
                      "abcd",
                    ],
                    "type": "add-trip-pattern",
                    "variants": Array [
                      true,
                    ],
                  }
                }
                setMapState={[Function]}
                type="add-trip-pattern"
                update={[Function]}
              >
                <Connect(Component)
                  modification={
                    Object {
                      "bidirectional": false,
                      "description": "Mock description",
                      "entries": Array [],
                      "feed": "1",
                      "id": "1234",
                      "name": "Test Modification",
                      "routes": Array [
                        "route1",
                      ],
                      "segments": Array [
                        {
                      "type": "Feature",
                      "properties": {},
                      "geometry": {
                        "type": "LineString",
                        "coordinates": [
                          [
                            "-122.02460000",
                            "36.97070000"
                          ],
                          [
                            "-122.02790000",
                            "37.04900000"
                          ],
                          [
                            "-121.97990000",
                            "37.22990000"
                          ],
                          [
                            "-121.94450000",
                            "37.32400000"
                          ],
                          [
                            "-121.93600000",
                            "37.35300000"
                          ],
                          [
                            "-121.92400000",
                            "37.36500000"
                          ]
                        ]
                      }
                    },
                      ],
                      "showOnMap": false,
                      "timetables": Array [
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        },
                      ],
                      "trips": Array [
                        "abcd",
                      ],
                      "type": "add-trip-pattern",
                      "variants": Array [
                        true,
                      ],
                    }
                  }
                  setMapState={[Function]}
                  type="add-trip-pattern"
                  update={[Function]}
                >
                  <Component
                    allPhaseFromTimetableStops={Object {}}
                    dispatch={[Function]}
                    extendFromEnd={true}
                    gtfsStops={Array []}
                    mapState={
                      Object {
                        "activeTrips": Array [],
                        "center": Object {
                          "lat": 38.8886,
                          "lon": -77.043,
                        },
                        "components": Array [],
                        "zoom": 12,
                      }
                    }
                    modification={
                      Object {
                        "bidirectional": false,
                        "description": "Mock description",
                        "entries": Array [],
                        "feed": "1",
                        "id": "1234",
                        "name": "Test Modification",
                        "routes": Array [
                          "route1",
                        ],
                        "segments": Array [
                          {
                        "type": "Feature",
                        "properties": {},
                        "geometry": {
                          "type": "LineString",
                          "coordinates": [
                            [
                              "-122.02460000",
                              "36.97070000"
                            ],
                            [
                              "-122.02790000",
                              "37.04900000"
                            ],
                            [
                              "-121.97990000",
                              "37.22990000"
                            ],
                            [
                              "-121.94450000",
                              "37.32400000"
                            ],
                            [
                              "-121.93600000",
                              "37.35300000"
                            ],
                            [
                              "-121.92400000",
                              "37.36500000"
                            ]
                          ]
                        }
                      },
                        ],
                        "showOnMap": false,
                        "timetables": Array [
                          Object {
                            "dwellTime": 10,
                            "endTime": 57600,
                            "friday": true,
                            "headwaySecs": 900,
                            "monday": true,
                            "name": "Test timetable",
                            "patternTrips": Array [
                              "abcd",
                            ],
                            "saturday": false,
                            "segmentSpeeds": Array [],
                            "sourceTrip": "abcd",
                            "startTime": 28800,
                            "sunday": false,
                            "thursday": true,
                            "tuesday": true,
                            "wednesday": true,
                          },
                        ],
                        "trips": Array [
                          "abcd",
                        ],
                        "type": "add-trip-pattern",
                        "variants": Array [
                          true,
                        ],
                      }
                    }
                    numberOfStops={1}
                    qualifiedStops={Array []}
                    scenarioTimetables={Array []}
                    segmentDistances={
                      Array [
                        45.223652927700726,
                      ]
                    }
                    setMapState={[Function]}
                    type="add-trip-pattern"
                    update={[Function]}
                  >
                    <div>
                      <EditAlignment
                        extendFromEnd={true}
                        mapState={
                          Object {
                            "activeTrips": Array [],
                            "center": Object {
                              "lat": 38.8886,
                              "lon": -77.043,
                            },
                            "components": Array [],
                            "zoom": 12,
                          }
                        }
                        modification={
                          Object {
                            "bidirectional": false,
                            "description": "Mock description",
                            "entries": Array [],
                            "feed": "1",
                            "id": "1234",
                            "name": "Test Modification",
                            "routes": Array [
                              "route1",
                            ],
                            "segments": Array [
                              {
                            "type": "Feature",
                            "properties": {},
                            "geometry": {
                              "type": "LineString",
                              "coordinates": [
                                [
                                  "-122.02460000",
                                  "36.97070000"
                                ],
                                [
                                  "-122.02790000",
                                  "37.04900000"
                                ],
                                [
                                  "-121.97990000",
                                  "37.22990000"
                                ],
                                [
                                  "-121.94450000",
                                  "37.32400000"
                                ],
                                [
                                  "-121.93600000",
                                  "37.35300000"
                                ],
                                [
                                  "-121.92400000",
                                  "37.36500000"
                                ]
                              ]
                            }
                          },
                            ],
                            "showOnMap": false,
                            "timetables": Array [
                              Object {
                                "dwellTime": 10,
                                "endTime": 57600,
                                "friday": true,
                                "headwaySecs": 900,
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              },
                            ],
                            "trips": Array [
                              "abcd",
                            ],
                            "type": "add-trip-pattern",
                            "variants": Array [
                              true,
                            ],
                          }
                        }
                        setMapState={[Function]}
                        update={[Function]}
                      >
                        <div>
                          <Button
                            block={true}
                            onClick={[Function]}
                            style="warning"
                          >
                            <a
                              className="btn btn-warning btn-block"
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                            >
                              <Icon
                                type="pencil"
                              >
                                <i
                                  className="fa fa-pencil fa-fw "
                                />
                              </Icon>
                               
                              Edit route geometry
                            </a>
                          </Button>
                          <Checkbox
                            defaultChecked={false}
                            label="Create stops automatically"
                            onChange={[Function]}
                          >
                            <div
                              className="checkbox"
                            >
                              <label
                                htmlFor="create-stops-automatically-input-44"
                              >
                                <input
                                  defaultChecked={false}
                                  id="create-stops-automatically-input-44"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                 
                                Create stops automatically
                              </label>
                            </div>
                          </Checkbox>
                          <Checkbox
                            checked={false}
                            disabled={false}
                            label="Bidirectional"
                            onChange={[Function]}
                          >
                            <div
                              className="checkbox"
                            >
                              <label
                                htmlFor="bidirectional-input-45"
                              >
                                <input
                                  checked={false}
                                  disabled={false}
                                  id="bidirectional-input-45"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                 
                                Bidirectional
                              </label>
                            </div>
                          </Checkbox>
                        </div>
                      </EditAlignment>
                      <Timetables
                        allPhaseFromTimetableStops={Object {}}
                        bidirectional={false}
                        modificationStops={Array []}
                        numberOfStops={1}
                        qualifiedStops={Array []}
                        scenarioTimetables={Array []}
                        segmentDistances={
                          Array [
                            45.223652927700726,
                          ]
                        }
                        setMapState={[Function]}
                        timetables={
                          Array [
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "segmentSpeeds": Array [],
                              "sourceTrip": "abcd",
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            },
                          ]
                        }
                        update={[Function]}
                      >
                        <div>
                          <TimetableComponent
                            allPhaseFromTimetableStops={Object {}}
                            bidirectional={false}
                            modificationStops={Array []}
                            numberOfStops={1}
                            qualifiedStops={Array []}
                            remove={[Function]}
                            scenarioTimetables={Array []}
                            segmentDistances={
                              Array [
                                45.223652927700726,
                              ]
                            }
                            setMapState={[Function]}
                            timetable={
                              Object {
                                "dwellTime": 10,
                                "endTime": 57600,
                                "friday": true,
                                "headwaySecs": 900,
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              }
                            }
                            update={[Function]}
                          >
                            <section
                              className="panel panel-default inner-panel"
                            >
                              <a
                                className="panel-heading clearfix"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "cursor": "pointer",
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  type="caret-down"
                                >
                                  <i
                                    className="fa fa-caret-down fa-fw "
                                  />
                                </Icon>
                                <strong>
                                   
                                  Test timetable
                                </strong>
                              </a>
                              <div
                                className="panel-body"
                              >
                                <Text
                                  name="Name"
                                  onChange={[Function]}
                                  value="Test timetable"
                                >
                                  <Group
                                    id="name-input-46"
                                    name="Name"
                                    onChange={[Function]}
                                    value="Test timetable"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <Input
                                        id="name-input-46"
                                        name="Name"
                                        onChange={[Function]}
                                        type="text"
                                        value="Test timetable"
                                      >
                                        <input
                                          className="form-control"
                                          id="name-input-46"
                                          name="Name"
                                          onChange={[Function]}
                                          placeholder="Name"
                                          type="text"
                                          value="Test timetable"
                                        />
                                      </Input>
                                    </div>
                                  </Group>
                                </Text>
                                <TimetableEntry
                                  allPhaseFromTimetableStops={Object {}}
                                  bidirectional={false}
                                  modificationStops={Array []}
                                  scenarioTimetables={Array []}
                                  timetable={
                                    Object {
                                      "dwellTime": 10,
                                      "endTime": 57600,
                                      "friday": true,
                                      "headwaySecs": 900,
                                      "monday": true,
                                      "name": "Test timetable",
                                      "patternTrips": Array [
                                        "abcd",
                                      ],
                                      "saturday": false,
                                      "segmentSpeeds": Array [],
                                      "sourceTrip": "abcd",
                                      "startTime": 28800,
                                      "sunday": false,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                    }
                                  }
                                  update={[Function]}
                                >
                                  <div>
                                    <Days
                                      setDay={[Function]}
                                      timetable={
                                        Object {
                                          "dwellTime": 10,
                                          "endTime": 57600,
                                          "friday": true,
                                          "headwaySecs": 900,
                                          "monday": true,
                                          "name": "Test timetable",
                                          "patternTrips": Array [
                                            "abcd",
                                          ],
                                          "saturday": false,
                                          "segmentSpeeds": Array [],
                                          "sourceTrip": "abcd",
                                          "startTime": 28800,
                                          "sunday": false,
                                          "thursday": true,
                                          "tuesday": true,
                                          "wednesday": true,
                                        }
                                      }
                                    >
                                      <div
                                        className="form-inline"
                                      >
                                        <Checkbox
                                          checked={true}
                                          label="Mon"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="mon-input-47"
                                            >
                                              <input
                                                checked={true}
                                                id="mon-input-47"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Mon
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Tue"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="tue-input-48"
                                            >
                                              <input
                                                checked={true}
                                                id="tue-input-48"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Tue
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Wed"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="wed-input-49"
                                            >
                                              <input
                                                checked={true}
                                                id="wed-input-49"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Wed
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Thu"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="thu-input-50"
                                            >
                                              <input
                                                checked={true}
                                                id="thu-input-50"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Thu
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Fri"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="fri-input-51"
                                            >
                                              <input
                                                checked={true}
                                                id="fri-input-51"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Fri
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={false}
                                          label="Sat"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="sat-input-52"
                                            >
                                              <input
                                                checked={false}
                                                id="sat-input-52"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Sat
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={false}
                                          label="Sun"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="sun-input-53"
                                            >
                                              <input
                                                checked={false}
                                                id="sun-input-53"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Sun
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </Days>
                                    <MinutesSeconds
                                      label="Frequency"
                                      onChange={[Function]}
                                      seconds={900}
                                    >
                                      <Text
                                        label="Frequency"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        units="mm:ss"
                                        value="15:00"
                                      >
                                        <Group
                                          id="frequency-input-54"
                                          label="Frequency"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          units="mm:ss"
                                          value="15:00"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="frequency-input-54"
                                            >
                                              Frequency
                                            </label>
                                            <Input
                                              id="frequency-input-54"
                                              label="Frequency"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              units="mm:ss"
                                              value="15:00"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="frequency-input-54"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="mm:ss"
                                                  type="text"
                                                  value="15:00"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  mm:ss
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </MinutesSeconds>
                                    <TimePicker
                                      label="Start time"
                                      onChange={[Function]}
                                      value={28800}
                                    >
                                      <Text
                                        label="Start time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        units="hh:mm"
                                        value="08:00"
                                      >
                                        <Group
                                          id="start-time-input-55"
                                          label="Start time"
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="time"
                                          units="hh:mm"
                                          value="08:00"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="start-time-input-55"
                                            >
                                              Start time
                                            </label>
                                            <Input
                                              id="start-time-input-55"
                                              label="Start time"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              type="time"
                                              units="hh:mm"
                                              value="08:00"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="start-time-input-55"
                                                  onChange={[Function]}
                                                  onWheel={[Function]}
                                                  placeholder="hh:mm"
                                                  type="time"
                                                  value="08:00"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  hh:mm
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </TimePicker>
                                    <TimePicker
                                      label="End time"
                                      onChange={[Function]}
                                      value={57600}
                                    >
                                      <Text
                                        label="End time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        units="hh:mm"
                                        value="16:00"
                                      >
                                        <Group
                                          id="end-time-input-56"
                                          label="End time"
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="time"
                                          units="hh:mm"
                                          value="16:00"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="end-time-input-56"
                                            >
                                              End time
                                            </label>
                                            <Input
                                              id="end-time-input-56"
                                              label="End time"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              type="time"
                                              units="hh:mm"
                                              value="16:00"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="end-time-input-56"
                                                  onChange={[Function]}
                                                  onWheel={[Function]}
                                                  placeholder="hh:mm"
                                                  type="time"
                                                  value="16:00"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  hh:mm
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </TimePicker>
                                    <Checkbox
                                      disabled={false}
                                      label="Times are exact"
                                      onChange={[Function]}
                                    >
                                      <div
                                        className="checkbox"
                                      >
                                        <label
                                          htmlFor="times-are-exact-input-57"
                                        >
                                          <input
                                            disabled={false}
                                            id="times-are-exact-input-57"
                                            onChange={[Function]}
                                            type="checkbox"
                                          />
                                           
                                          Times are exact
                                        </label>
                                      </div>
                                    </Checkbox>
                                    <Phase
                                      availableTimetables={Array []}
                                      disabled={false}
                                      modificationStops={Array []}
                                      timetableHeadway={900}
                                      update={[Function]}
                                    >
                                      <div>
                                        <Group
                                          label="Phase at stop"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="phase-at-stop-input-58"
                                            >
                                              Phase at stop
                                            </label>
                                            <Select
                                              addLabelText="Add \\"{label}\\"?"
                                              arrowRenderer={[Function]}
                                              autosize={true}
                                              backspaceRemoves={true}
                                              backspaceToRemoveMessage="Press backspace to remove {label}"
                                              clearAllText="Clear all"
                                              clearRenderer={[Function]}
                                              clearValueText="Clear value"
                                              clearable={true}
                                              deleteRemoves={true}
                                              delimiter=","
                                              disabled={false}
                                              escapeClearsValue={true}
                                              filterOptions={[Function]}
                                              ignoreAccents={true}
                                              ignoreCase={true}
                                              inputProps={Object {}}
                                              isLoading={false}
                                              joinValues={false}
                                              labelKey="label"
                                              matchPos="any"
                                              matchProp="any"
                                              menuBuffer={0}
                                              menuRenderer={[Function]}
                                              multi={false}
                                              name="Phase at stop"
                                              noResultsText="No results found"
                                              onBlurResetsInput={true}
                                              onChange={[Function]}
                                              onCloseResetsInput={true}
                                              optionComponent={[Function]}
                                              options={Array []}
                                              pageSize={5}
                                              placeholder="Phase at stop"
                                              required={false}
                                              scrollMenuIntoView={true}
                                              searchable={true}
                                              simpleValue={false}
                                              tabSelectsValue={true}
                                              valueComponent={[Function]}
                                              valueKey="value"
                                            >
                                              <div
                                                className="Select Select--single is-clearable is-searchable"
                                              >
                                                <div
                                                  className="Select-control"
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                >
                                                  <span
                                                    className="Select-multi-value-wrapper"
                                                    id="react-select-4--value"
                                                  >
                                                    <div
                                                      className="Select-placeholder"
                                                    >
                                                      Phase at stop
                                                    </div>
                                                    <mockConstructor
                                                      aria-activedescendant="react-select-4--value"
                                                      aria-expanded="false"
                                                      aria-haspopup="false"
                                                      aria-owns=""
                                                      className="Select-input"
                                                      minWidth="5"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      role="combobox"
                                                      value=""
                                                    />
                                                  </span>
                                                  <span
                                                    className="Select-arrow-zone"
                                                    onMouseDown={[Function]}
                                                  >
                                                    <span
                                                      className="Select-arrow"
                                                      onMouseDown={[Function]}
                                                    />
                                                  </span>
                                                </div>
                                              </div>
                                            </Select>
                                          </div>
                                        </Group>
                                      </div>
                                    </Phase>
                                  </div>
                                </TimetableEntry>
                                <SegmentSpeeds
                                  dwellTime={10}
                                  dwellTimes={Array []}
                                  highlightSegment={[Function]}
                                  highlightStop={[Function]}
                                  numberOfStops={1}
                                  qualifiedStops={Array []}
                                  segmentDistances={
                                    Array [
                                      45.223652927700726,
                                    ]
                                  }
                                  segmentSpeeds={Array []}
                                  update={[Function]}
                                >
                                  <div>
                                    <MinutesSeconds
                                      label="Dwell time"
                                      onChange={[Function]}
                                      seconds={10}
                                    >
                                      <Text
                                        label="Dwell time"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        units="mm:ss"
                                        value="00:10"
                                      >
                                        <Group
                                          id="dwell-time-input-59"
                                          label="Dwell time"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          units="mm:ss"
                                          value="00:10"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="dwell-time-input-59"
                                            >
                                              Dwell time
                                            </label>
                                            <Input
                                              id="dwell-time-input-59"
                                              label="Dwell time"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              units="mm:ss"
                                              value="00:10"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="dwell-time-input-59"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="mm:ss"
                                                  type="text"
                                                  value="00:10"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  mm:ss
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </MinutesSeconds>
                                    <Collapsible
                                      defaultExpanded={false}
                                      title="Set individual stop dwell times"
                                    >
                                      <div>
                                        <div
                                          aria-level={3}
                                          role="heading"
                                        >
                                          <a
                                            aria-expanded={false}
                                            className="CollapsibleButton"
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <Icon
                                              type="caret-right"
                                            >
                                              <i
                                                className="fa fa-caret-right fa-fw "
                                              />
                                            </Icon>
                                            <strong>
                                              Set individual stop dwell times
                                            </strong>
                                          </a>
                                        </div>
                                      </div>
                                    </Collapsible>
                                    <Number
                                      label="Average segment speed"
                                      min={1}
                                      onChange={[Function]}
                                      units="km/h"
                                      value={15}
                                    >
                                      <Group
                                        id="average-segment-speed-input-60"
                                        label="Average segment speed"
                                        min={1}
                                        onChange={[Function]}
                                        units="km/h"
                                        value={15}
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="average-segment-speed-input-60"
                                          >
                                            Average segment speed
                                          </label>
                                          <Input
                                            id="average-segment-speed-input-60"
                                            label="Average segment speed"
                                            min={1}
                                            onChange={[Function]}
                                            onWheel={[Function]}
                                            type="number"
                                            units="km/h"
                                            value={15}
                                          >
                                            <div
                                              className="InputWithUnits"
                                            >
                                              <input
                                                className="form-control"
                                                id="average-segment-speed-input-60"
                                                min={1}
                                                onChange={[Function]}
                                                onWheel={[Function]}
                                                placeholder="km/h"
                                                type="number"
                                                value={15}
                                              />
                                              <span
                                                className="InputUnits"
                                              >
                                                km/h
                                              </span>
                                            </div>
                                          </Input>
                                        </div>
                                      </Group>
                                    </Number>
                                    <MinutesSeconds
                                      label="Total travel time"
                                      onChange={[Function]}
                                      seconds={10863.676702648174}
                                    >
                                      <Text
                                        label="Total travel time"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        units="mm:ss"
                                        value="181:03"
                                      >
                                        <Group
                                          id="total-travel-time-input-61"
                                          label="Total travel time"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          units="mm:ss"
                                          value="181:03"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="total-travel-time-input-61"
                                            >
                                              Total travel time
                                            </label>
                                            <Input
                                              id="total-travel-time-input-61"
                                              label="Total travel time"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              units="mm:ss"
                                              value="181:03"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="total-travel-time-input-61"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="mm:ss"
                                                  type="text"
                                                  value="181:03"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  mm:ss
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </MinutesSeconds>
                                    <Collapsible
                                      defaultExpanded={false}
                                      title="Set individual segment speeds"
                                    >
                                      <div>
                                        <div
                                          aria-level={3}
                                          role="heading"
                                        >
                                          <a
                                            aria-expanded={false}
                                            className="CollapsibleButton"
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <Icon
                                              type="caret-right"
                                            >
                                              <i
                                                className="fa fa-caret-right fa-fw "
                                              />
                                            </Icon>
                                            <strong>
                                              Set individual segment speeds
                                            </strong>
                                          </a>
                                        </div>
                                      </div>
                                    </Collapsible>
                                  </div>
                                </SegmentSpeeds>
                                <Button
                                  block={true}
                                  onClick={[Function]}
                                  style="danger"
                                  title="Delete timetable"
                                >
                                  <a
                                    className="btn btn-danger btn-block"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Delete timetable"
                                  >
                                    <Icon
                                      type="close"
                                    >
                                      <i
                                        className="fa fa-close fa-fw "
                                      />
                                    </Icon>
                                     Delete Timetable
                                  </a>
                                </Button>
                              </div>
                            </section>
                          </TimetableComponent>
                          <Button
                            block={true}
                            onClick={[Function]}
                            style="success"
                          >
                            <a
                              className="btn btn-success btn-block"
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                            >
                              <Icon
                                type="plus"
                              >
                                <i
                                  className="fa fa-plus fa-fw "
                                />
                              </Icon>
                               Add timetable
                            </a>
                          </Button>
                        </div>
                      </Timetables>
                    </div>
                  </Component>
                </Connect(Component)>
              </ModificationType>
              <Variants
                activeVariants={
                  Array [
                    true,
                  ]
                }
                allVariants={
                  Array [
                    "Default",
                  ]
                }
                modificationId="1234"
                setVariant={[Function]}
              >
                <div>
                  <h5>
                    Active in scenario numbers
                  </h5>
                  <div
                    className="form-inline"
                  >
                    <Checkbox
                      checked={true}
                      label={1}
                      onChange={[Function]}
                      title="Default"
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="1-input-62"
                        >
                          <input
                            checked={true}
                            id="1-input-62"
                            onChange={[Function]}
                            title="Default"
                            type="checkbox"
                          />
                           
                          1
                        </label>
                      </div>
                    </Checkbox>
                  </div>
                </div>
              </Variants>
            </div>
          </Body>
        </div>
      </div>
    </ModificationEditor>
  </Connect(ModificationEditor)>
</Provider>
`;

exports[`Container > Modification Editor renders and can change the name 1`] = `
Array [
  Object {
    "payload": Object {
      "bidirectional": false,
      "description": "Mock description",
      "entries": Array [],
      "feed": "1",
      "id": "1234",
      "name": "Test Modification",
      "routes": Array [
        "route1",
      ],
      "segments": Array [
        {
  "type": "Feature",
  "properties": {},
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  }
},
      ],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "dwellTime": 10,
          "endTime": 57600,
          "friday": true,
          "headwaySecs": 900,
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "saturday": false,
          "segmentSpeeds": Array [
            15,
          ],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "variants": Array [
        true,
      ],
    },
    "type": "set modification",
  },
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "bidirectional": false,
          "description": "Mock description",
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [
            {
  "type": "Feature",
  "properties": {},
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  }
},
          ],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [
                15,
              ],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            true,
          ],
        },
        "method": "put",
      },
      "url": "/api/modification/1234",
    },
    "type": "increment outstanding fetches",
  },
  Object {
    "payload": Object {
      "options": Object {},
      "url": "/api/graphql?query=%0Aquery%20dataQuery(%24bundleId%3A%20String%2C%20%24routeIds%3A%20%5BString%5D)%20%7B%0A%20%20bundle%20(bundle_id%3A%20%5B%24bundleId%5D)%20%7B%0A%20%20%20%20feeds%20%7B%0A%20%20%20%20%20%20feed_id%2C%0A%20%20%20%20%20%20checksum%2C%0A%20%20%20%20%20%20routes%20%7B%0A%20%20%20%20%20%20%20%20route_id%0A%20%20%20%20%20%20%20%20route_short_name%0A%20%20%20%20%20%20%20%20route_long_name%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20detailRoutes%3A%20routes(route_id%3A%20%24routeIds)%20%7B%0A%20%20%20%20%20%20%20%20route_id%0A%20%20%20%20%20%20%20%20route_short_name%0A%20%20%20%20%20%20%20%20route_long_name%0A%20%20%20%20%20%20%20%20patterns%20%7B%0A%20%20%20%20%20%20%20%20%20%20name%2C%0A%20%20%20%20%20%20%20%20%20%20pattern_id%2C%0A%20%20%20%20%20%20%20%20%20%20geometry%2C%0A%20%20%20%20%20%20%20%20%20%20trips%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20trip_id%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20trip_short_name%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20trip_headsign%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20start_time%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20direction_id%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20duration%0A%20%20%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20stops%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20stop_id%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20stops%20%7B%0A%20%20%20%20%20%20%20%20stop_id%2C%0A%20%20%20%20%20%20%20%20stop_name%2C%0A%20%20%20%20%20%20%20%20stop_lat%2C%0A%20%20%20%20%20%20%20%20stop_lon%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&variables=%7B%22bundleId%22%3A%221%22%2C%22routeIds%22%3A%5B%5D%7D",
    },
    "type": "increment outstanding fetches",
  },
  Object {
    "payload": "1234",
    "type": "set active modification",
  },
  Object {
    "payload": Object {
      "bidirectional": false,
      "description": "Mock description",
      "entries": Array [],
      "feed": "1",
      "id": "1234",
      "name": "Test Modification",
      "routes": Array [
        "route1",
      ],
      "segments": Array [
        {
  "type": "Feature",
  "properties": {},
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  }
},
      ],
      "showOnMap": false,
      "timetables": Array [
        Object {
          "dwellTime": 10,
          "endTime": 57600,
          "friday": true,
          "headwaySecs": 900,
          "monday": true,
          "name": "Test timetable",
          "patternTrips": Array [
            "abcd",
          ],
          "saturday": false,
          "segmentSpeeds": Array [],
          "sourceTrip": "abcd",
          "startTime": 28800,
          "sunday": false,
          "thursday": true,
          "tuesday": true,
          "wednesday": true,
        },
      ],
      "trips": Array [
        "abcd",
      ],
      "type": "add-trip-pattern",
      "variants": Array [
        true,
      ],
    },
    "type": "set modification",
  },
  Object {
    "payload": Object {
      "options": Object {
        "body": Object {
          "bidirectional": false,
          "description": "Mock description",
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [
            {
  "type": "Feature",
  "properties": {},
  "geometry": {
    "type": "LineString",
    "coordinates": [
      [
        "-122.02460000",
        "36.97070000"
      ],
      [
        "-122.02790000",
        "37.04900000"
      ],
      [
        "-121.97990000",
        "37.22990000"
      ],
      [
        "-121.94450000",
        "37.32400000"
      ],
      [
        "-121.93600000",
        "37.35300000"
      ],
      [
        "-121.92400000",
        "37.36500000"
      ]
    ]
  }
},
          ],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            true,
          ],
        },
        "method": "put",
      },
      "url": "/api/modification/1234",
    },
    "type": "increment outstanding fetches",
  },
]
`;

exports[`Container > Modification Editor renders correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(ModificationEditor)
    params={
      Object {
        "modificationId": "1234",
      }
    }
  >
    <ModificationEditor
      allVariants={
        Array [
          "Default",
        ]
      }
      clearActive={[Function]}
      copyModification={[Function]}
      feedIsLoaded={true}
      modification={
        Object {
          "bidirectional": false,
          "description": "Mock description",
          "entries": Array [],
          "feed": "1",
          "id": "1234",
          "name": "Test Modification",
          "routes": Array [
            "route1",
          ],
          "segments": Array [
            {
          "type": "Feature",
          "properties": {},
          "geometry": {
            "type": "LineString",
            "coordinates": [
              [
                "-122.02460000",
                "36.97070000"
              ],
              [
                "-122.02790000",
                "37.04900000"
              ],
              [
                "-121.97990000",
                "37.22990000"
              ],
              [
                "-121.94450000",
                "37.32400000"
              ],
              [
                "-121.93600000",
                "37.35300000"
              ],
              [
                "-121.92400000",
                "37.36500000"
              ]
            ]
          }
        },
          ],
          "showOnMap": false,
          "timetables": Array [
            Object {
              "dwellTime": 10,
              "endTime": 57600,
              "friday": true,
              "headwaySecs": 900,
              "monday": true,
              "name": "Test timetable",
              "patternTrips": Array [
                "abcd",
              ],
              "saturday": false,
              "segmentSpeeds": Array [],
              "sourceTrip": "abcd",
              "startTime": 28800,
              "sunday": false,
              "thursday": true,
              "tuesday": true,
              "wednesday": true,
            },
          ],
          "trips": Array [
            "abcd",
          ],
          "type": "add-trip-pattern",
          "variants": Array [
            true,
          ],
        }
      }
      modificationId="1234"
      params={
        Object {
          "modificationId": "1234",
        }
      }
      removeModification={[Function]}
      setActive={[Function]}
      setActiveTrips={[Function]}
      setMapState={[Function]}
      setModificationName={[Function]}
      setModificationVariants={[Function]}
      update={[Function]}
    >
      <div>
        <div
          className="ApplicationDockTitle"
        >
          <Link
            title="Modifications"
            to="/scenarios/undefined"
          >
            <Tip
              tip="Modifications"
            >
              <span
                className="Tip "
                onBlur={[Function]}
                onFocus={[Function]}
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <Link
                  onlyActiveOnIndex={false}
                  style={Object {}}
                  to="/scenarios/undefined"
                >
                  <a
                    onClick={[Function]}
                    style={Object {}}
                  >
                    <Icon
                      type="chevron-left"
                    >
                      <i
                        className="fa fa-chevron-left fa-fw "
                      />
                    </Icon>
                  </a>
                </Link>
              </span>
            </Tip>
          </Link>
          Test Modification
          <a
            className="pull-right"
            onClick={[Function]}
            tabIndex={0}
            title="Delete Modification"
          >
            <Icon
              type="trash"
            >
              <i
                className="fa fa-trash fa-fw "
              />
            </Icon>
          </a>
          <a
            className="pull-right"
            onClick={[Function]}
            tabIndex={0}
            title="Copy Modification"
          >
            <Icon
              type="copy"
            >
              <i
                className="fa fa-copy fa-fw "
              />
            </Icon>
          </a>
        </div>
        <div
          className="InnerDock"
        >
          <Body>
            <div
              className="panel-body"
            >
              <Text
                name="Modification Name"
                onChange={[Function]}
                value="Test Modification"
              >
                <Group
                  id="modification-name-input-0"
                  name="Modification Name"
                  onChange={[Function]}
                  value="Test Modification"
                >
                  <div
                    className="form-group"
                  >
                    <Input
                      id="modification-name-input-0"
                      name="Modification Name"
                      onChange={[Function]}
                      type="text"
                      value="Test Modification"
                    >
                      <input
                        className="form-control"
                        id="modification-name-input-0"
                        name="Modification Name"
                        onChange={[Function]}
                        placeholder="Modification Name"
                        type="text"
                        value="Test Modification"
                      />
                    </Input>
                  </div>
                </Group>
              </Text>
              <TextArea
                label="Description"
                onChange={[Function]}
                value="Mock description"
              >
                <Group
                  id="description-input-1"
                  label="Description"
                  onChange={[Function]}
                >
                  <div
                    className="form-group"
                  >
                    <label
                      htmlFor="description-input-1"
                    >
                      Description
                    </label>
                    <textarea
                      className="form-control"
                      id="description-input-1"
                      label="Description"
                      onChange={[Function]}
                    >
                      Mock description
                    </textarea>
                  </div>
                </Group>
              </TextArea>
              <ModificationType
                modification={
                  Object {
                    "bidirectional": false,
                    "description": "Mock description",
                    "entries": Array [],
                    "feed": "1",
                    "id": "1234",
                    "name": "Test Modification",
                    "routes": Array [
                      "route1",
                    ],
                    "segments": Array [
                      {
                    "type": "Feature",
                    "properties": {},
                    "geometry": {
                      "type": "LineString",
                      "coordinates": [
                        [
                          "-122.02460000",
                          "36.97070000"
                        ],
                        [
                          "-122.02790000",
                          "37.04900000"
                        ],
                        [
                          "-121.97990000",
                          "37.22990000"
                        ],
                        [
                          "-121.94450000",
                          "37.32400000"
                        ],
                        [
                          "-121.93600000",
                          "37.35300000"
                        ],
                        [
                          "-121.92400000",
                          "37.36500000"
                        ]
                      ]
                    }
                  },
                    ],
                    "showOnMap": false,
                    "timetables": Array [
                      Object {
                        "dwellTime": 10,
                        "endTime": 57600,
                        "friday": true,
                        "headwaySecs": 900,
                        "monday": true,
                        "name": "Test timetable",
                        "patternTrips": Array [
                          "abcd",
                        ],
                        "saturday": false,
                        "segmentSpeeds": Array [],
                        "sourceTrip": "abcd",
                        "startTime": 28800,
                        "sunday": false,
                        "thursday": true,
                        "tuesday": true,
                        "wednesday": true,
                      },
                    ],
                    "trips": Array [
                      "abcd",
                    ],
                    "type": "add-trip-pattern",
                    "variants": Array [
                      true,
                    ],
                  }
                }
                setMapState={[Function]}
                type="add-trip-pattern"
                update={[Function]}
              >
                <Connect(Component)
                  modification={
                    Object {
                      "bidirectional": false,
                      "description": "Mock description",
                      "entries": Array [],
                      "feed": "1",
                      "id": "1234",
                      "name": "Test Modification",
                      "routes": Array [
                        "route1",
                      ],
                      "segments": Array [
                        {
                      "type": "Feature",
                      "properties": {},
                      "geometry": {
                        "type": "LineString",
                        "coordinates": [
                          [
                            "-122.02460000",
                            "36.97070000"
                          ],
                          [
                            "-122.02790000",
                            "37.04900000"
                          ],
                          [
                            "-121.97990000",
                            "37.22990000"
                          ],
                          [
                            "-121.94450000",
                            "37.32400000"
                          ],
                          [
                            "-121.93600000",
                            "37.35300000"
                          ],
                          [
                            "-121.92400000",
                            "37.36500000"
                          ]
                        ]
                      }
                    },
                      ],
                      "showOnMap": false,
                      "timetables": Array [
                        Object {
                          "dwellTime": 10,
                          "endTime": 57600,
                          "friday": true,
                          "headwaySecs": 900,
                          "monday": true,
                          "name": "Test timetable",
                          "patternTrips": Array [
                            "abcd",
                          ],
                          "saturday": false,
                          "segmentSpeeds": Array [],
                          "sourceTrip": "abcd",
                          "startTime": 28800,
                          "sunday": false,
                          "thursday": true,
                          "tuesday": true,
                          "wednesday": true,
                        },
                      ],
                      "trips": Array [
                        "abcd",
                      ],
                      "type": "add-trip-pattern",
                      "variants": Array [
                        true,
                      ],
                    }
                  }
                  setMapState={[Function]}
                  type="add-trip-pattern"
                  update={[Function]}
                >
                  <Component
                    allPhaseFromTimetableStops={Object {}}
                    dispatch={[Function]}
                    extendFromEnd={true}
                    gtfsStops={Array []}
                    mapState={
                      Object {
                        "activeTrips": Array [],
                        "center": Object {
                          "lat": 38.8886,
                          "lon": -77.043,
                        },
                        "components": Array [],
                        "zoom": 12,
                      }
                    }
                    modification={
                      Object {
                        "bidirectional": false,
                        "description": "Mock description",
                        "entries": Array [],
                        "feed": "1",
                        "id": "1234",
                        "name": "Test Modification",
                        "routes": Array [
                          "route1",
                        ],
                        "segments": Array [
                          {
                        "type": "Feature",
                        "properties": {},
                        "geometry": {
                          "type": "LineString",
                          "coordinates": [
                            [
                              "-122.02460000",
                              "36.97070000"
                            ],
                            [
                              "-122.02790000",
                              "37.04900000"
                            ],
                            [
                              "-121.97990000",
                              "37.22990000"
                            ],
                            [
                              "-121.94450000",
                              "37.32400000"
                            ],
                            [
                              "-121.93600000",
                              "37.35300000"
                            ],
                            [
                              "-121.92400000",
                              "37.36500000"
                            ]
                          ]
                        }
                      },
                        ],
                        "showOnMap": false,
                        "timetables": Array [
                          Object {
                            "dwellTime": 10,
                            "endTime": 57600,
                            "friday": true,
                            "headwaySecs": 900,
                            "monday": true,
                            "name": "Test timetable",
                            "patternTrips": Array [
                              "abcd",
                            ],
                            "saturday": false,
                            "segmentSpeeds": Array [],
                            "sourceTrip": "abcd",
                            "startTime": 28800,
                            "sunday": false,
                            "thursday": true,
                            "tuesday": true,
                            "wednesday": true,
                          },
                        ],
                        "trips": Array [
                          "abcd",
                        ],
                        "type": "add-trip-pattern",
                        "variants": Array [
                          true,
                        ],
                      }
                    }
                    numberOfStops={1}
                    qualifiedStops={Array []}
                    scenarioTimetables={Array []}
                    segmentDistances={
                      Array [
                        45.223652927700726,
                      ]
                    }
                    setMapState={[Function]}
                    type="add-trip-pattern"
                    update={[Function]}
                  >
                    <div>
                      <EditAlignment
                        extendFromEnd={true}
                        mapState={
                          Object {
                            "activeTrips": Array [],
                            "center": Object {
                              "lat": 38.8886,
                              "lon": -77.043,
                            },
                            "components": Array [],
                            "zoom": 12,
                          }
                        }
                        modification={
                          Object {
                            "bidirectional": false,
                            "description": "Mock description",
                            "entries": Array [],
                            "feed": "1",
                            "id": "1234",
                            "name": "Test Modification",
                            "routes": Array [
                              "route1",
                            ],
                            "segments": Array [
                              {
                            "type": "Feature",
                            "properties": {},
                            "geometry": {
                              "type": "LineString",
                              "coordinates": [
                                [
                                  "-122.02460000",
                                  "36.97070000"
                                ],
                                [
                                  "-122.02790000",
                                  "37.04900000"
                                ],
                                [
                                  "-121.97990000",
                                  "37.22990000"
                                ],
                                [
                                  "-121.94450000",
                                  "37.32400000"
                                ],
                                [
                                  "-121.93600000",
                                  "37.35300000"
                                ],
                                [
                                  "-121.92400000",
                                  "37.36500000"
                                ]
                              ]
                            }
                          },
                            ],
                            "showOnMap": false,
                            "timetables": Array [
                              Object {
                                "dwellTime": 10,
                                "endTime": 57600,
                                "friday": true,
                                "headwaySecs": 900,
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              },
                            ],
                            "trips": Array [
                              "abcd",
                            ],
                            "type": "add-trip-pattern",
                            "variants": Array [
                              true,
                            ],
                          }
                        }
                        setMapState={[Function]}
                        update={[Function]}
                      >
                        <div>
                          <Button
                            block={true}
                            onClick={[Function]}
                            style="warning"
                          >
                            <a
                              className="btn btn-warning btn-block"
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                            >
                              <Icon
                                type="pencil"
                              >
                                <i
                                  className="fa fa-pencil fa-fw "
                                />
                              </Icon>
                               
                              Edit route geometry
                            </a>
                          </Button>
                          <Checkbox
                            defaultChecked={false}
                            label="Create stops automatically"
                            onChange={[Function]}
                          >
                            <div
                              className="checkbox"
                            >
                              <label
                                htmlFor="create-stops-automatically-input-2"
                              >
                                <input
                                  defaultChecked={false}
                                  id="create-stops-automatically-input-2"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                 
                                Create stops automatically
                              </label>
                            </div>
                          </Checkbox>
                          <Checkbox
                            checked={false}
                            disabled={false}
                            label="Bidirectional"
                            onChange={[Function]}
                          >
                            <div
                              className="checkbox"
                            >
                              <label
                                htmlFor="bidirectional-input-3"
                              >
                                <input
                                  checked={false}
                                  disabled={false}
                                  id="bidirectional-input-3"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                 
                                Bidirectional
                              </label>
                            </div>
                          </Checkbox>
                        </div>
                      </EditAlignment>
                      <Timetables
                        allPhaseFromTimetableStops={Object {}}
                        bidirectional={false}
                        modificationStops={Array []}
                        numberOfStops={1}
                        qualifiedStops={Array []}
                        scenarioTimetables={Array []}
                        segmentDistances={
                          Array [
                            45.223652927700726,
                          ]
                        }
                        setMapState={[Function]}
                        timetables={
                          Array [
                            Object {
                              "dwellTime": 10,
                              "endTime": 57600,
                              "friday": true,
                              "headwaySecs": 900,
                              "monday": true,
                              "name": "Test timetable",
                              "patternTrips": Array [
                                "abcd",
                              ],
                              "saturday": false,
                              "segmentSpeeds": Array [],
                              "sourceTrip": "abcd",
                              "startTime": 28800,
                              "sunday": false,
                              "thursday": true,
                              "tuesday": true,
                              "wednesday": true,
                            },
                          ]
                        }
                        update={[Function]}
                      >
                        <div>
                          <TimetableComponent
                            allPhaseFromTimetableStops={Object {}}
                            bidirectional={false}
                            modificationStops={Array []}
                            numberOfStops={1}
                            qualifiedStops={Array []}
                            remove={[Function]}
                            scenarioTimetables={Array []}
                            segmentDistances={
                              Array [
                                45.223652927700726,
                              ]
                            }
                            setMapState={[Function]}
                            timetable={
                              Object {
                                "dwellTime": 10,
                                "endTime": 57600,
                                "friday": true,
                                "headwaySecs": 900,
                                "monday": true,
                                "name": "Test timetable",
                                "patternTrips": Array [
                                  "abcd",
                                ],
                                "saturday": false,
                                "segmentSpeeds": Array [],
                                "sourceTrip": "abcd",
                                "startTime": 28800,
                                "sunday": false,
                                "thursday": true,
                                "tuesday": true,
                                "wednesday": true,
                              }
                            }
                            update={[Function]}
                          >
                            <section
                              className="panel panel-default inner-panel"
                            >
                              <a
                                className="panel-heading clearfix"
                                onClick={[Function]}
                                style={
                                  Object {
                                    "cursor": "pointer",
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  type="caret-down"
                                >
                                  <i
                                    className="fa fa-caret-down fa-fw "
                                  />
                                </Icon>
                                <strong>
                                   
                                  Test timetable
                                </strong>
                              </a>
                              <div
                                className="panel-body"
                              >
                                <Text
                                  name="Name"
                                  onChange={[Function]}
                                  value="Test timetable"
                                >
                                  <Group
                                    id="name-input-4"
                                    name="Name"
                                    onChange={[Function]}
                                    value="Test timetable"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <Input
                                        id="name-input-4"
                                        name="Name"
                                        onChange={[Function]}
                                        type="text"
                                        value="Test timetable"
                                      >
                                        <input
                                          className="form-control"
                                          id="name-input-4"
                                          name="Name"
                                          onChange={[Function]}
                                          placeholder="Name"
                                          type="text"
                                          value="Test timetable"
                                        />
                                      </Input>
                                    </div>
                                  </Group>
                                </Text>
                                <TimetableEntry
                                  allPhaseFromTimetableStops={Object {}}
                                  bidirectional={false}
                                  modificationStops={Array []}
                                  scenarioTimetables={Array []}
                                  timetable={
                                    Object {
                                      "dwellTime": 10,
                                      "endTime": 57600,
                                      "friday": true,
                                      "headwaySecs": 900,
                                      "monday": true,
                                      "name": "Test timetable",
                                      "patternTrips": Array [
                                        "abcd",
                                      ],
                                      "saturday": false,
                                      "segmentSpeeds": Array [],
                                      "sourceTrip": "abcd",
                                      "startTime": 28800,
                                      "sunday": false,
                                      "thursday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                    }
                                  }
                                  update={[Function]}
                                >
                                  <div>
                                    <Days
                                      setDay={[Function]}
                                      timetable={
                                        Object {
                                          "dwellTime": 10,
                                          "endTime": 57600,
                                          "friday": true,
                                          "headwaySecs": 900,
                                          "monday": true,
                                          "name": "Test timetable",
                                          "patternTrips": Array [
                                            "abcd",
                                          ],
                                          "saturday": false,
                                          "segmentSpeeds": Array [],
                                          "sourceTrip": "abcd",
                                          "startTime": 28800,
                                          "sunday": false,
                                          "thursday": true,
                                          "tuesday": true,
                                          "wednesday": true,
                                        }
                                      }
                                    >
                                      <div
                                        className="form-inline"
                                      >
                                        <Checkbox
                                          checked={true}
                                          label="Mon"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="mon-input-5"
                                            >
                                              <input
                                                checked={true}
                                                id="mon-input-5"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Mon
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Tue"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="tue-input-6"
                                            >
                                              <input
                                                checked={true}
                                                id="tue-input-6"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Tue
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Wed"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="wed-input-7"
                                            >
                                              <input
                                                checked={true}
                                                id="wed-input-7"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Wed
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Thu"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="thu-input-8"
                                            >
                                              <input
                                                checked={true}
                                                id="thu-input-8"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Thu
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={true}
                                          label="Fri"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="fri-input-9"
                                            >
                                              <input
                                                checked={true}
                                                id="fri-input-9"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Fri
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={false}
                                          label="Sat"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="sat-input-10"
                                            >
                                              <input
                                                checked={false}
                                                id="sat-input-10"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Sat
                                            </label>
                                          </div>
                                        </Checkbox>
                                        <Checkbox
                                          checked={false}
                                          label="Sun"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="checkbox"
                                          >
                                            <label
                                              htmlFor="sun-input-11"
                                            >
                                              <input
                                                checked={false}
                                                id="sun-input-11"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                               
                                              Sun
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </Days>
                                    <MinutesSeconds
                                      label="Frequency"
                                      onChange={[Function]}
                                      seconds={900}
                                    >
                                      <Text
                                        label="Frequency"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        units="mm:ss"
                                        value="15:00"
                                      >
                                        <Group
                                          id="frequency-input-12"
                                          label="Frequency"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          units="mm:ss"
                                          value="15:00"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="frequency-input-12"
                                            >
                                              Frequency
                                            </label>
                                            <Input
                                              id="frequency-input-12"
                                              label="Frequency"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              units="mm:ss"
                                              value="15:00"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="frequency-input-12"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="mm:ss"
                                                  type="text"
                                                  value="15:00"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  mm:ss
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </MinutesSeconds>
                                    <TimePicker
                                      label="Start time"
                                      onChange={[Function]}
                                      value={28800}
                                    >
                                      <Text
                                        label="Start time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        units="hh:mm"
                                        value="08:00"
                                      >
                                        <Group
                                          id="start-time-input-13"
                                          label="Start time"
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="time"
                                          units="hh:mm"
                                          value="08:00"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="start-time-input-13"
                                            >
                                              Start time
                                            </label>
                                            <Input
                                              id="start-time-input-13"
                                              label="Start time"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              type="time"
                                              units="hh:mm"
                                              value="08:00"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="start-time-input-13"
                                                  onChange={[Function]}
                                                  onWheel={[Function]}
                                                  placeholder="hh:mm"
                                                  type="time"
                                                  value="08:00"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  hh:mm
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </TimePicker>
                                    <TimePicker
                                      label="End time"
                                      onChange={[Function]}
                                      value={57600}
                                    >
                                      <Text
                                        label="End time"
                                        onChange={[Function]}
                                        onWheel={[Function]}
                                        type="time"
                                        units="hh:mm"
                                        value="16:00"
                                      >
                                        <Group
                                          id="end-time-input-14"
                                          label="End time"
                                          onChange={[Function]}
                                          onWheel={[Function]}
                                          type="time"
                                          units="hh:mm"
                                          value="16:00"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="end-time-input-14"
                                            >
                                              End time
                                            </label>
                                            <Input
                                              id="end-time-input-14"
                                              label="End time"
                                              onChange={[Function]}
                                              onWheel={[Function]}
                                              type="time"
                                              units="hh:mm"
                                              value="16:00"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="end-time-input-14"
                                                  onChange={[Function]}
                                                  onWheel={[Function]}
                                                  placeholder="hh:mm"
                                                  type="time"
                                                  value="16:00"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  hh:mm
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </TimePicker>
                                    <Checkbox
                                      disabled={false}
                                      label="Times are exact"
                                      onChange={[Function]}
                                    >
                                      <div
                                        className="checkbox"
                                      >
                                        <label
                                          htmlFor="times-are-exact-input-15"
                                        >
                                          <input
                                            disabled={false}
                                            id="times-are-exact-input-15"
                                            onChange={[Function]}
                                            type="checkbox"
                                          />
                                           
                                          Times are exact
                                        </label>
                                      </div>
                                    </Checkbox>
                                    <Phase
                                      availableTimetables={Array []}
                                      disabled={false}
                                      modificationStops={Array []}
                                      timetableHeadway={900}
                                      update={[Function]}
                                    >
                                      <div>
                                        <Group
                                          label="Phase at stop"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="phase-at-stop-input-16"
                                            >
                                              Phase at stop
                                            </label>
                                            <Select
                                              addLabelText="Add \\"{label}\\"?"
                                              arrowRenderer={[Function]}
                                              autosize={true}
                                              backspaceRemoves={true}
                                              backspaceToRemoveMessage="Press backspace to remove {label}"
                                              clearAllText="Clear all"
                                              clearRenderer={[Function]}
                                              clearValueText="Clear value"
                                              clearable={true}
                                              deleteRemoves={true}
                                              delimiter=","
                                              disabled={false}
                                              escapeClearsValue={true}
                                              filterOptions={[Function]}
                                              ignoreAccents={true}
                                              ignoreCase={true}
                                              inputProps={Object {}}
                                              isLoading={false}
                                              joinValues={false}
                                              labelKey="label"
                                              matchPos="any"
                                              matchProp="any"
                                              menuBuffer={0}
                                              menuRenderer={[Function]}
                                              multi={false}
                                              name="Phase at stop"
                                              noResultsText="No results found"
                                              onBlurResetsInput={true}
                                              onChange={[Function]}
                                              onCloseResetsInput={true}
                                              optionComponent={[Function]}
                                              options={Array []}
                                              pageSize={5}
                                              placeholder="Phase at stop"
                                              required={false}
                                              scrollMenuIntoView={true}
                                              searchable={true}
                                              simpleValue={false}
                                              tabSelectsValue={true}
                                              valueComponent={[Function]}
                                              valueKey="value"
                                            >
                                              <div
                                                className="Select Select--single is-clearable is-searchable"
                                              >
                                                <div
                                                  className="Select-control"
                                                  onKeyDown={[Function]}
                                                  onMouseDown={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                >
                                                  <span
                                                    className="Select-multi-value-wrapper"
                                                    id="react-select-2--value"
                                                  >
                                                    <div
                                                      className="Select-placeholder"
                                                    >
                                                      Phase at stop
                                                    </div>
                                                    <mockConstructor
                                                      aria-activedescendant="react-select-2--value"
                                                      aria-expanded="false"
                                                      aria-haspopup="false"
                                                      aria-owns=""
                                                      className="Select-input"
                                                      minWidth="5"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      required={false}
                                                      role="combobox"
                                                      value=""
                                                    />
                                                  </span>
                                                  <span
                                                    className="Select-arrow-zone"
                                                    onMouseDown={[Function]}
                                                  >
                                                    <span
                                                      className="Select-arrow"
                                                      onMouseDown={[Function]}
                                                    />
                                                  </span>
                                                </div>
                                              </div>
                                            </Select>
                                          </div>
                                        </Group>
                                      </div>
                                    </Phase>
                                  </div>
                                </TimetableEntry>
                                <SegmentSpeeds
                                  dwellTime={10}
                                  dwellTimes={Array []}
                                  highlightSegment={[Function]}
                                  highlightStop={[Function]}
                                  numberOfStops={1}
                                  qualifiedStops={Array []}
                                  segmentDistances={
                                    Array [
                                      45.223652927700726,
                                    ]
                                  }
                                  segmentSpeeds={Array []}
                                  update={[Function]}
                                >
                                  <div>
                                    <MinutesSeconds
                                      label="Dwell time"
                                      onChange={[Function]}
                                      seconds={10}
                                    >
                                      <Text
                                        label="Dwell time"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        units="mm:ss"
                                        value="00:10"
                                      >
                                        <Group
                                          id="dwell-time-input-17"
                                          label="Dwell time"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          units="mm:ss"
                                          value="00:10"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="dwell-time-input-17"
                                            >
                                              Dwell time
                                            </label>
                                            <Input
                                              id="dwell-time-input-17"
                                              label="Dwell time"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              units="mm:ss"
                                              value="00:10"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="dwell-time-input-17"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="mm:ss"
                                                  type="text"
                                                  value="00:10"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  mm:ss
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </MinutesSeconds>
                                    <Collapsible
                                      defaultExpanded={false}
                                      title="Set individual stop dwell times"
                                    >
                                      <div>
                                        <div
                                          aria-level={3}
                                          role="heading"
                                        >
                                          <a
                                            aria-expanded={false}
                                            className="CollapsibleButton"
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <Icon
                                              type="caret-right"
                                            >
                                              <i
                                                className="fa fa-caret-right fa-fw "
                                              />
                                            </Icon>
                                            <strong>
                                              Set individual stop dwell times
                                            </strong>
                                          </a>
                                        </div>
                                      </div>
                                    </Collapsible>
                                    <Number
                                      label="Average segment speed"
                                      min={1}
                                      onChange={[Function]}
                                      units="km/h"
                                      value={15}
                                    >
                                      <Group
                                        id="average-segment-speed-input-18"
                                        label="Average segment speed"
                                        min={1}
                                        onChange={[Function]}
                                        units="km/h"
                                        value={15}
                                      >
                                        <div
                                          className="form-group"
                                        >
                                          <label
                                            htmlFor="average-segment-speed-input-18"
                                          >
                                            Average segment speed
                                          </label>
                                          <Input
                                            id="average-segment-speed-input-18"
                                            label="Average segment speed"
                                            min={1}
                                            onChange={[Function]}
                                            onWheel={[Function]}
                                            type="number"
                                            units="km/h"
                                            value={15}
                                          >
                                            <div
                                              className="InputWithUnits"
                                            >
                                              <input
                                                className="form-control"
                                                id="average-segment-speed-input-18"
                                                min={1}
                                                onChange={[Function]}
                                                onWheel={[Function]}
                                                placeholder="km/h"
                                                type="number"
                                                value={15}
                                              />
                                              <span
                                                className="InputUnits"
                                              >
                                                km/h
                                              </span>
                                            </div>
                                          </Input>
                                        </div>
                                      </Group>
                                    </Number>
                                    <MinutesSeconds
                                      label="Total travel time"
                                      onChange={[Function]}
                                      seconds={10863.676702648174}
                                    >
                                      <Text
                                        label="Total travel time"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onKeyDown={[Function]}
                                        units="mm:ss"
                                        value="181:03"
                                      >
                                        <Group
                                          id="total-travel-time-input-19"
                                          label="Total travel time"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onKeyDown={[Function]}
                                          units="mm:ss"
                                          value="181:03"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <label
                                              htmlFor="total-travel-time-input-19"
                                            >
                                              Total travel time
                                            </label>
                                            <Input
                                              id="total-travel-time-input-19"
                                              label="Total travel time"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onKeyDown={[Function]}
                                              type="text"
                                              units="mm:ss"
                                              value="181:03"
                                            >
                                              <div
                                                className="InputWithUnits"
                                              >
                                                <input
                                                  className="form-control"
                                                  id="total-travel-time-input-19"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onKeyDown={[Function]}
                                                  placeholder="mm:ss"
                                                  type="text"
                                                  value="181:03"
                                                />
                                                <span
                                                  className="InputUnits"
                                                >
                                                  mm:ss
                                                </span>
                                              </div>
                                            </Input>
                                          </div>
                                        </Group>
                                      </Text>
                                    </MinutesSeconds>
                                    <Collapsible
                                      defaultExpanded={false}
                                      title="Set individual segment speeds"
                                    >
                                      <div>
                                        <div
                                          aria-level={3}
                                          role="heading"
                                        >
                                          <a
                                            aria-expanded={false}
                                            className="CollapsibleButton"
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={0}
                                          >
                                            <Icon
                                              type="caret-right"
                                            >
                                              <i
                                                className="fa fa-caret-right fa-fw "
                                              />
                                            </Icon>
                                            <strong>
                                              Set individual segment speeds
                                            </strong>
                                          </a>
                                        </div>
                                      </div>
                                    </Collapsible>
                                  </div>
                                </SegmentSpeeds>
                                <Button
                                  block={true}
                                  onClick={[Function]}
                                  style="danger"
                                  title="Delete timetable"
                                >
                                  <a
                                    className="btn btn-danger btn-block"
                                    href="#"
                                    onClick={[Function]}
                                    tabIndex={0}
                                    title="Delete timetable"
                                  >
                                    <Icon
                                      type="close"
                                    >
                                      <i
                                        className="fa fa-close fa-fw "
                                      />
                                    </Icon>
                                     Delete Timetable
                                  </a>
                                </Button>
                              </div>
                            </section>
                          </TimetableComponent>
                          <Button
                            block={true}
                            onClick={[Function]}
                            style="success"
                          >
                            <a
                              className="btn btn-success btn-block"
                              href="#"
                              onClick={[Function]}
                              tabIndex={0}
                            >
                              <Icon
                                type="plus"
                              >
                                <i
                                  className="fa fa-plus fa-fw "
                                />
                              </Icon>
                               Add timetable
                            </a>
                          </Button>
                        </div>
                      </Timetables>
                    </div>
                  </Component>
                </Connect(Component)>
              </ModificationType>
              <Variants
                activeVariants={
                  Array [
                    true,
                  ]
                }
                allVariants={
                  Array [
                    "Default",
                  ]
                }
                modificationId="1234"
                setVariant={[Function]}
              >
                <div>
                  <h5>
                    Active in scenario numbers
                  </h5>
                  <div
                    className="form-inline"
                  >
                    <Checkbox
                      checked={true}
                      label={1}
                      onChange={[Function]}
                      title="Default"
                    >
                      <div
                        className="checkbox"
                      >
                        <label
                          htmlFor="1-input-20"
                        >
                          <input
                            checked={true}
                            id="1-input-20"
                            onChange={[Function]}
                            title="Default"
                            type="checkbox"
                          />
                           
                          1
                        </label>
                      </div>
                    </Checkbox>
                  </div>
                </div>
              </Variants>
            </div>
          </Body>
        </div>
      </div>
    </ModificationEditor>
  </Connect(ModificationEditor)>
</Provider>
`;
