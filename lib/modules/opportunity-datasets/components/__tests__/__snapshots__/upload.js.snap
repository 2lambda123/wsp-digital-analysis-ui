// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`upload should render without errors 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(UploadOpportunityDataset)>
    <UploadOpportunityDataset
      uploadOpportunityDataset={[Function]}
    >
      <h5>
        Upload a new opportunity dataset
      </h5>
      <p>
        Upload a .csv (with lat, lon, and at least one additional numeric column), a .grid file, or the files making up a shapefile (unzipped .shp .shx .dbf and .prj).
      </p>
      <form
        encType="multipart/form-data"
      >
        <Text
          label="Opportunity dataset*"
          name="Name"
          onChange={[Function]}
        >
          <Group
            id="name-input-0"
            label="Opportunity dataset*"
            name="Name"
            onChange={[Function]}
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="name-input-0"
              >
                Opportunity dataset*
              </label>
              <Input
                id="name-input-0"
                label="Opportunity dataset*"
                name="Name"
                onChange={[Function]}
                type="text"
              >
                <input
                  className="form-control"
                  id="name-input-0"
                  label="Opportunity dataset*"
                  name="Name"
                  onChange={[Function]}
                  placeholder="Opportunity dataset*"
                  type="text"
                />
              </Input>
            </div>
          </Group>
        </Text>
        <File
          label="Select opportunity dataset*"
          multiple={true}
          name="files"
          onChange={[Function]}
        >
          <Group
            id="files-input-1"
            label="Select opportunity dataset*"
            multiple={true}
            name="files"
            onChange={[Function]}
          >
            <div
              className="form-group"
            >
              <label
                htmlFor="files-input-1"
              >
                Select opportunity dataset*
              </label>
              <Input
                id="files-input-1"
                label="Select opportunity dataset*"
                multiple={true}
                name="files"
                onChange={[Function]}
                type="file"
              >
                <input
                  className="form-control"
                  id="files-input-1"
                  label="Select opportunity dataset*"
                  multiple={true}
                  name="files"
                  onChange={[Function]}
                  placeholder="Select opportunity dataset*"
                  type="file"
                />
              </Input>
            </div>
          </Group>
        </File>
        <Button
          className="btn btn-block btn-success"
          disabled={true}
          onClick={[Function]}
          type="success"
        >
          <a
            className="btn btn-default btn btn-block btn-success"
            disabled={true}
            href="#"
            onClick={[Function]}
            tabIndex={0}
            type="success"
          >
            <Icon
              fixedWidth={true}
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "plus",
                  "prefix": "fas",
                }
              }
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={true}
                flip={null}
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "plus",
                    "prefix": "fas",
                  }
                }
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-plus fa-w-NaN fa-fw "
                  data-icon="plus"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 undefined undefined"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </Icon>
             
            Upload a new opportunity dataset
          </a>
        </Button>
      </form>
    </UploadOpportunityDataset>
  </Connect(UploadOpportunityDataset)>
</Provider>
`;
