// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Opportunity Datasets > Components > List should render without errors 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ListOpportunityDatasets>
    <Group>
      <div
        className="form-group"
      >
        <ButtonLink
          block={true}
          href={
            Object {
              "pathname": "/opportunities-upload",
              "query": Object {
                "regionId": undefined,
              },
            }
          }
          style="success"
          title="Upload a new dataset"
        >
          <Link
            href={
              Object {
                "pathname": "/opportunities-upload",
                "query": Object {
                  "regionId": undefined,
                },
              }
            }
          >
            <a
              className="btn btn-success btn-block"
              href="/opportunities-upload?regionId="
              onClick={[Function]}
              title="Upload a new dataset"
            >
              <Icon
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "plus",
                    "prefix": "fas",
                  }
                }
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={true}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [],
                      "iconName": "plus",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-plus fa-w-NaN fa-fw "
                    data-icon="plus"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 undefined undefined"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </Icon>
               
              Upload a new dataset
            </a>
          </Link>
        </ButtonLink>
        <Button
          block={true}
          onClick={[Function]}
          style="primary"
          title="Fetch LODES (2015)"
        >
          <a
            className="btn btn-primary btn-block"
            href="#"
            onClick={[Function]}
            tabIndex={0}
            title="Fetch LODES (2015)"
          >
            <Icon
              icon={
                Object {
                  "icon": Array [],
                  "iconName": "users",
                  "prefix": "fas",
                }
              }
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={true}
                flip={null}
                icon={
                  Object {
                    "icon": Array [],
                    "iconName": "users",
                    "prefix": "fas",
                  }
                }
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title=""
                transform={null}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-users fa-w-NaN fa-fw "
                  data-icon="users"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 undefined undefined"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </FontAwesomeIcon>
            </Icon>
             
            Fetch LODES (2015)
          </a>
        </Button>
      </div>
    </Group>
    <p
      className="text-center"
    >
      or select an existing one
    </p>
    <Group>
      <div
        className="form-group"
      >
        <ConnectFunction>
          <OpportunityDatasetSelector
            addOpportunityDataset={[Function]}
            checkUploadStatus={[Function]}
            clearStatus={[Function]}
            deleteOpportunityDataset={[Function]}
            deleteSourceSet={[Function]}
            downloadLODES={[Function]}
            downloadOpportunityDataset={[Function]}
            editOpportunityDataset={[Function]}
            loadOpportunityDataset={[Function]}
            loadOpportunityDatasets={[Function]}
            opportunityDatasets={
              Array [
                Object {
                  "_id": "Workers_total",
                  "name": "Workers total",
                  "sourceName": "lodes-data-2014",
                },
              ]
            }
            removeOpportunityDataset={[Function]}
            setActiveOpportunityDataset={[Function]}
            setOpportunityDatasets={[Function]}
            updateOpportunityDataset={[Function]}
            updateUploadStatuses={[Function]}
            uploadOpportunityDataset={[Function]}
            uploadStatuses={Array []}
          >
            <Select
              arrowRenderer={[Function]}
              autosize={true}
              backspaceRemoves={true}
              backspaceToRemoveMessage="Press backspace to remove {label}"
              clearAllText="Clear all"
              clearRenderer={[Function]}
              clearValueText="Clear value"
              clearable={true}
              closeOnSelect={true}
              deleteRemoves={true}
              delimiter=","
              disabled={false}
              escapeClearsValue={true}
              filterOptions={[Function]}
              ignoreAccents={true}
              ignoreCase={true}
              inputProps={Object {}}
              isLoading={false}
              joinValues={false}
              labelKey="label"
              matchPos="any"
              matchProp="any"
              menuBuffer={0}
              menuRenderer={[Function]}
              multi={false}
              noResultsText="No results found"
              onBlurResetsInput={true}
              onChange={[Function]}
              onCloseResetsInput={true}
              onSelectResetsInput={true}
              openOnClick={true}
              optionComponent={[Function]}
              options={
                Array [
                  Object {
                    "label": "lodes-data-2014: Workers total",
                    "value": "Workers_total",
                  },
                ]
              }
              pageSize={5}
              placeholder="Select..."
              removeSelected={true}
              required={false}
              rtl={false}
              scrollMenuIntoView={true}
              searchable={true}
              simpleValue={false}
              tabSelectsValue={true}
              trimFilter={true}
              valueComponent={[Function]}
              valueKey="value"
            >
              <div
                className="Select is-clearable is-searchable Select--single"
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                >
                  <div
                    className="Select-multi-value-wrapper"
                    id="react-select-2--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <AutosizeInput
                      aria-activedescendant="react-select-2--value"
                      aria-expanded="false"
                      aria-haspopup="false"
                      aria-owns=""
                      className="Select-input"
                      injectStyles={true}
                      minWidth="5"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={false}
                      role="combobox"
                      value=""
                    />
                  </div>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </Select>
          </OpportunityDatasetSelector>
        </ConnectFunction>
      </div>
    </Group>
  </ListOpportunityDatasets>
</Provider>
`;
