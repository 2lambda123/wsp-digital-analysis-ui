exports[`Component > Modification > Reroute renders correctly 1`] = `
<Reroute
  feeds={
    Array [
      Object {
        "routes": Array [
          Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        ],
        "routesById": Object {
          "route1": Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        },
      },
    ]
  }
  feedsById={
    Object {
      "1": Object {
        "routes": Array [
          Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        ],
        "routesById": Object {
          "route1": Object {
            "patterns": Array [
              Object {
                "geometry": Object {
                  "coordinates": Array [
                    Array [
                      -122.0246,
                      36.9707,
                    ],
                    Array [
                      -122.0279,
                      37.049,
                    ],
                    Array [
                      -121.9799,
                      37.2299,
                    ],
                    Array [
                      -121.9445,
                      37.324,
                    ],
                    Array [
                      -121.936,
                      37.353,
                    ],
                    Array [
                      -121.924,
                      37.365,
                    ],
                  ],
                  "type": "LineString",
                },
                "stops": Array [],
                "trips": Array [
                  Object {
                    "duration": 1234,
                    "start_time": 12345,
                    "trip_headsign": "To Downtown",
                    "trip_id": "abcd",
                    "trip_short_name": "The Express",
                  },
                ],
              },
            ],
          },
        },
      },
    }
  }
  mapState={Object {}}
  modification={
    Object {
      "segments": Array [],
    }
  }
  setMapState={[Function]}
  update={[Function]}>
  <div>
    <SelectFeedRouteAndPatterns
      feeds={
        Array [
          Object {
            "routes": Array [
              Object {
                "patterns": Array [
                  Object {
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "stops": Array [],
                    "trips": Array [
                      Object {
                        "duration": 1234,
                        "start_time": 12345,
                        "trip_headsign": "To Downtown",
                        "trip_id": "abcd",
                        "trip_short_name": "The Express",
                      },
                    ],
                  },
                ],
              },
            ],
            "routesById": Object {
              "route1": Object {
                "patterns": Array [
                  Object {
                    "geometry": Object {
                      "coordinates": Array [
                        Array [
                          -122.0246,
                          36.9707,
                        ],
                        Array [
                          -122.0279,
                          37.049,
                        ],
                        Array [
                          -121.9799,
                          37.2299,
                        ],
                        Array [
                          -121.9445,
                          37.324,
                        ],
                        Array [
                          -121.936,
                          37.353,
                        ],
                        Array [
                          -121.924,
                          37.365,
                        ],
                      ],
                      "type": "LineString",
                    },
                    "stops": Array [],
                    "trips": Array [
                      Object {
                        "duration": 1234,
                        "start_time": 12345,
                        "trip_headsign": "To Downtown",
                        "trip_id": "abcd",
                        "trip_short_name": "The Express",
                      },
                    ],
                  },
                ],
              },
            },
          },
        ]
      }
      onChange={[Function]}
      routes={undefined}
      selectedFeed={undefined}
      trips={undefined}>
      <div>
        <SelectFeedAndRoutes
          feeds={
            Array [
              Object {
                "routes": Array [
                  Object {
                    "patterns": Array [
                      Object {
                        "geometry": Object {
                          "coordinates": Array [
                            Array [
                              -122.0246,
                              36.9707,
                            ],
                            Array [
                              -122.0279,
                              37.049,
                            ],
                            Array [
                              -121.9799,
                              37.2299,
                            ],
                            Array [
                              -121.9445,
                              37.324,
                            ],
                            Array [
                              -121.936,
                              37.353,
                            ],
                            Array [
                              -121.924,
                              37.365,
                            ],
                          ],
                          "type": "LineString",
                        },
                        "stops": Array [],
                        "trips": Array [
                          Object {
                            "duration": 1234,
                            "start_time": 12345,
                            "trip_headsign": "To Downtown",
                            "trip_id": "abcd",
                            "trip_short_name": "The Express",
                          },
                        ],
                      },
                    ],
                  },
                ],
                "routesById": Object {
                  "route1": Object {
                    "patterns": Array [
                      Object {
                        "geometry": Object {
                          "coordinates": Array [
                            Array [
                              -122.0246,
                              36.9707,
                            ],
                            Array [
                              -122.0279,
                              37.049,
                            ],
                            Array [
                              -121.9799,
                              37.2299,
                            ],
                            Array [
                              -121.9445,
                              37.324,
                            ],
                            Array [
                              -121.936,
                              37.353,
                            ],
                            Array [
                              -121.924,
                              37.365,
                            ],
                          ],
                          "type": "LineString",
                        },
                        "stops": Array [],
                        "trips": Array [
                          Object {
                            "duration": 1234,
                            "start_time": 12345,
                            "trip_headsign": "To Downtown",
                            "trip_id": "abcd",
                            "trip_short_name": "The Express",
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ]
          }
          onChange={[Function]}
          selectedFeed={undefined}
          selectedRouteId={undefined}>
          <div>
            <Group>
              <div
                className="form-group">
                <Select
                  addLabelText="Add \"{label}\"?"
                  arrowRenderer={[Function]}
                  autosize={true}
                  backspaceRemoves={true}
                  backspaceToRemoveMessage="Press backspace to remove {label}"
                  clearAllText="Clear all"
                  clearValueText="Clear value"
                  clearable={false}
                  delimiter=","
                  disabled={false}
                  escapeClearsValue={true}
                  filterOptions={[Function]}
                  ignoreAccents={true}
                  ignoreCase={true}
                  inputProps={Object {}}
                  isLoading={false}
                  joinValues={false}
                  labelKey="label"
                  matchPos="any"
                  matchProp="any"
                  menuBuffer={0}
                  menuRenderer={[Function]}
                  multi={false}
                  name="Feed"
                  noResultsText="No results found"
                  onBlurResetsInput={true}
                  onChange={[Function]}
                  onCloseResetsInput={true}
                  openAfterFocus={false}
                  optionComponent={[Function]}
                  options={
                    Array [
                      Object {
                        "label": undefined,
                        "value": undefined,
                      },
                    ]
                  }
                  pageSize={5}
                  placeholder="Select feed"
                  required={false}
                  scrollMenuIntoView={true}
                  searchable={true}
                  simpleValue={false}
                  tabSelectsValue={true}
                  value={undefined}
                  valueComponent={[Function]}
                  valueKey="value">
                  <div
                    className="Select Select--single is-searchable"
                    style={undefined}>
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={undefined}>
                      <span
                        className="Select-multi-value-wrapper"
                        id="react-select-2--value">
                        <div
                          className="Select-placeholder">
                          Select feed
                        </div>
                        <AutosizeInput
                          aria-activedescendant="react-select-2--value"
                          aria-expanded="false"
                          aria-haspopup="false"
                          aria-label={undefined}
                          aria-labelledby={undefined}
                          aria-owns=""
                          className="Select-input"
                          minWidth="5px"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          required={false}
                          role="combobox"
                          tabIndex={undefined}
                          value="">
                          <div
                            className="Select-input"
                            style={
                              Object {
                                "display": "inline-block",
                              }
                            }>
                            <input
                              aria-activedescendant="react-select-2--value"
                              aria-expanded="false"
                              aria-haspopup="false"
                              aria-label={undefined}
                              aria-labelledby={undefined}
                              aria-owns=""
                              className={undefined}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              required={false}
                              role="combobox"
                              style={
                                Object {
                                  "boxSizing": "content-box",
                                  "width": "5pxpx",
                                }
                              }
                              tabIndex={undefined}
                              value="" />
                            <div
                              style={
                                Object {
                                  "height": 0,
                                  "left": 0,
                                  "overflow": "scroll",
                                  "position": "absolute",
                                  "top": 0,
                                  "visibility": "hidden",
                                  "whiteSpace": "pre",
                                }
                              } />
                          </div>
                        </AutosizeInput>
                      </span>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}>
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]} />
                      </span>
                    </div>
                  </div>
                </Select>
              </div>
            </Group>
          </div>
        </SelectFeedAndRoutes>
      </div>
    </SelectFeedRouteAndPatterns>
    <pure(Component)
      label="Speed (km/h):"
      onChange={[Function]}
      value={undefined}>
      <Group
        label="Speed (km/h):"
        onChange={[Function]}
        value={undefined}>
        <div
          className="form-group">
          <label>
            Speed (km/h):
          </label>
          <pure(Component)
            label="Speed (km/h):"
            onChange={[Function]}
            type="number"
            value={undefined}>
            <input
              className="form-control"
              defaultValue={undefined}
              name={undefined}
              onChange={[Function]}
              placeholder="Speed (km/h):"
              type="number"
              value={undefined} />
          </pure(Component)>
        </div>
      </Group>
    </pure(Component)>
    <pure(Component)
      label="Dwell time (seconds):"
      onChange={[Function]}
      step={1}
      value={undefined}>
      <Group
        label="Dwell time (seconds):"
        onChange={[Function]}
        step={1}
        value={undefined}>
        <div
          className="form-group">
          <label>
            Dwell time (seconds):
          </label>
          <pure(Component)
            label="Dwell time (seconds):"
            onChange={[Function]}
            step={1}
            type="number"
            value={undefined}>
            <input
              className="form-control"
              defaultValue={undefined}
              name={undefined}
              onChange={[Function]}
              placeholder="Dwell time (seconds):"
              step={1}
              type="number"
              value={undefined} />
          </pure(Component)>
        </div>
      </Group>
    </pure(Component)>
    <pure(Component)
      label="Length of segment (mins)"
      onChange={[Function]}
      value={0}>
      <Group
        label="Length of segment (mins)"
        onChange={[Function]}
        value={0}>
        <div
          className="form-group">
          <label>
            Length of segment (mins)
          </label>
          <pure(Component)
            label="Length of segment (mins)"
            onChange={[Function]}
            type="number"
            value={0}>
            <input
              className="form-control"
              defaultValue={0}
              name={undefined}
              onChange={[Function]}
              placeholder="Length of segment (mins)"
              type="number"
              value={0} />
          </pure(Component)>
        </div>
      </Group>
    </pure(Component)>
    <pure(Component)
      block={true}
      onClick={[Function]}
      style="warning">
      <a
        className="btn btn-warning btn-block"
        href="#"
        onClick={[Function]}
        target={undefined}>
        <pure(Icon)
          type="pencil">
          <i
            className="fa fa-pencil fa-fw " />
        </pure(Icon)>
      </a>
    </pure(Component)>
    <pure(Component)
      checked={true}
      label="Create stops automatically"
      onChange={[Function]}>
      <div
        className="checkbox">
        <label>
          <input
            checked={true}
            onChange={[Function]}
            type="checkbox" />
        </label>
      </div>
    </pure(Component)>
    <pure(Component)
      label="Stop spacing (meters)"
      onChange={[Function]}
      value={400}>
      <Group
        label="Stop spacing (meters)"
        onChange={[Function]}
        value={400}>
        <div
          className="form-group">
          <label>
            Stop spacing (meters)
          </label>
          <pure(Component)
            label="Stop spacing (meters)"
            onChange={[Function]}
            type="number"
            value={400}>
            <input
              className="form-control"
              defaultValue={400}
              name={undefined}
              onChange={[Function]}
              placeholder="Stop spacing (meters)"
              type="number"
              value={400} />
          </pure(Component)>
        </div>
      </Group>
    </pure(Component)>
  </div>
</Reroute>
`;
